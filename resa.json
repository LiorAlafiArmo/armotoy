{
    "attributes": null,
    "customerGUID": "1e3a88bf-92ce-44f8-914e-cbe71830d566",
    "clusterName": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
    "clusterCloudProvider": "",
    "reportGUID": "496c0534-cb26-4759-b107-a2eb545ba99e",
    "jobID": "",
    "paginationInfo": {
        "chunkNumber": 0,
        "isLastChunk": false
    },
    "clusterAPIServerInfo": null,
    "generationTime": "2022-03-01T14:42:44.870046294Z",
    "summaryDetails": {
        "score": 13.800275,
        "status": "failed",
        "frameworks": [
            {
                "name": "MITRE",
                "status": "failed",
                "score": 14.36741,
                "version": "",
                "controls": {
                    
                    "C-0002": {
                        "controlID": "C-0002",
                        "name": "Exec into container",
                        "status": "failed",
                        "score": 2.586207,
                        "scoreFactor": 5,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 113,
                            "failedResources": 3,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0007": {
                        "controlID": "C-0007",
                        "name": "Data Destruction",
                        "status": "failed",
                        "score": 21.551723,
                        "scoreFactor": 10,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 91,
                            "failedResources": 25,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0012": {
                        "controlID": "C-0012",
                        "name": "Applications credentials in configuration files",
                        "status": "failed",
                        "score": 8.058018,
                        "scoreFactor": 8,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 104,
                            "failedResources": 10,
                            "excludedResources": 1,
                            "skippedResources": 0
                        }
                    },
                    "C-0014": {
                        "controlID": "C-0014",
                        "name": "Access Kubernetes dashboard",
                        "status": "passed",
                        "score": 0,
                        "scoreFactor": 2,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 191,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0015": {
                        "controlID": "C-0015",
                        "name": "List Kubernetes secrets",
                        "status": "failed",
                        "score": 12.931034,
                        "scoreFactor": 7,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 97,
                            "failedResources": 15,
                            "excludedResources": 4,
                            "skippedResources": 0
                        }
                    },
                    "C-0020": {
                        "controlID": "C-0020",
                        "name": "Mount service principal",
                        "status": "failed",
                        "score": 13.079667,
                        "scoreFactor": 4,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 64,
                            "failedResources": 11,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0021": {
                        "controlID": "C-0021",
                        "name": "Exposed sensitive interfaces",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 6,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0026": {
                        "controlID": "C-0026",
                        "name": "Kubernetes CronJob",
                        "status": "failed",
                        "score": 100,
                        "scoreFactor": 3,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 4,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0031": {
                        "controlID": "C-0031",
                        "name": "Delete Kubernetes events",
                        "status": "failed",
                        "score": 7.7586207,
                        "scoreFactor": 4,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 107,
                            "failedResources": 9,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0033": {
                        "controlID": "C-0033",
                        "name": "Access tiller endpoint",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 5,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0035": {
                        "controlID": "C-0035",
                        "name": "Cluster-admin binding",
                        "status": "failed",
                        "score": 2.586207,
                        "scoreFactor": 8,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 113,
                            "failedResources": 3,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0036": {
                        "controlID": "C-0036",
                        "name": "Malicious admission controller (validating)",
                        "status": "failed",
                        "score": 100,
                        "scoreFactor": 7,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 4,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0037": {
                        "controlID": "C-0037",
                        "name": "CoreDNS poisoning",
                        "status": "failed",
                        "score": 13.793103,
                        "scoreFactor": 5,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 100,
                            "failedResources": 16,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0039": {
                        "controlID": "C-0039",
                        "name": "Malicious admission controller (mutating)",
                        "status": "failed",
                        "score": 100,
                        "scoreFactor": 10,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 3,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0042": {
                        "controlID": "C-0042",
                        "name": "SSH server running inside container",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 8,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0045": {
                        "controlID": "C-0045",
                        "name": "Writable hostPath mount",
                        "status": "failed",
                        "score": 14.268728,
                        "scoreFactor": 8,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 63,
                            "failedResources": 12,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0047": {
                        "controlID": "C-0047",
                        "name": "Exposed dashboard",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 6,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0048": {
                        "controlID": "C-0048",
                        "name": "HostPath mount",
                        "status": "failed",
                        "score": 13.079668,
                        "scoreFactor": 6,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 64,
                            "failedResources": 11,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0053": {
                        "controlID": "C-0053",
                        "name": "Access container service account",
                        "status": "failed",
                        "score": 92,
                        "scoreFactor": 5,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 4,
                            "failedResources": 46,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0054": {
                        "controlID": "C-0054",
                        "name": "Cluster internal networking",
                        "status": "failed",
                        "score": 100,
                        "scoreFactor": 4,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 10,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0057": {
                        "controlID": "C-0057",
                        "name": "Privileged container",
                        "status": "failed",
                        "score": 11.890607,
                        "scoreFactor": 8,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 65,
                            "failedResources": 10,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0058": {
                        "controlID": "C-0058",
                        "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 6,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0059": {
                        "controlID": "C-0059",
                        "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 5,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0066": {
                        "controlID": "C-0066",
                        "name": "Secret/ETCD encryption enabled",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 3,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0067": {
                        "controlID": "C-0067",
                        "name": "Audit logs enabled",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 3,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0068": {
                        "controlID": "C-0068",
                        "name": "PSP enabled",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 3,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0069": {
                        "controlID": "C-0069",
                        "name": "Disable anonymous access to Kubelet service",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 10,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    },
                    "C-0070": {
                        "controlID": "C-0070",
                        "name": "Enforce Kubelet client TLS authentication",
                        "status": "skipped",
                        "score": 0,
                        "scoreFactor": 10,
                        "resourceIDs": {},
                        "ResourceCounters": {
                            "passedResources": 0,
                            "failedResources": 0,
                            "excludedResources": 0,
                            "skippedResources": 0
                        }
                    }
                },
                "ResourceCounters": {
                    "passedResources": 140,
                    "failedResources": 109,
                    "excludedResources": 2,
                    "skippedResources": 0
                }
            }
        ],
        "controls": {
            "C-0002": {
                "controlID": "C-0002",
                "name": "Exec into container",
                "status": "failed",
                "score": 1.7241379,
                "scoreFactor": 5,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 113,
                    "failedResources": 2,
                    "excludedResources": 1,
                    "skippedResources": 0
                }
            },
            "C-0007": {
                "controlID": "C-0007",
                "name": "Data Destruction",
                "status": "failed",
                "score": 21.551723,
                "scoreFactor": 10,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 91,
                    "failedResources": 25,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0012": {
                "controlID": "C-0012",
                "name": "Applications credentials in configuration files",
                "status": "failed",
                "score": 6.4464145,
                "scoreFactor": 8,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 104,
                    "failedResources": 8,
                    "excludedResources": 3,
                    "skippedResources": 0
                }
            },
            "C-0014": {
                "controlID": "C-0014",
                "name": "Access Kubernetes dashboard",
                "status": "passed",
                "score": 0,
                "scoreFactor": 2,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 191,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0015": {
                "controlID": "C-0015",
                "name": "List Kubernetes secrets",
                "status": "failed",
                "score": 12.931034,
                "scoreFactor": 7,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 97,
                    "failedResources": 15,
                    "excludedResources": 4,
                    "skippedResources": 0
                }
            },
            "C-0020": {
                "controlID": "C-0020",
                "name": "Mount service principal",
                "status": "failed",
                "score": 13.079666,
                "scoreFactor": 4,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 64,
                    "failedResources": 11,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0021": {
                "controlID": "C-0021",
                "name": "Exposed sensitive interfaces",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 6,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0026": {
                "controlID": "C-0026",
                "name": "Kubernetes CronJob",
                "status": "failed",
                "score": 75,
                "scoreFactor": 3,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 3,
                    "excludedResources": 1,
                    "skippedResources": 0
                }
            },
            "C-0031": {
                "controlID": "C-0031",
                "name": "Delete Kubernetes events",
                "status": "failed",
                "score": 7.7586207,
                "scoreFactor": 4,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 107,
                    "failedResources": 9,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0033": {
                "controlID": "C-0033",
                "name": "Access tiller endpoint",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 5,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0035": {
                "controlID": "C-0035",
                "name": "Cluster-admin binding",
                "status": "failed",
                "score": 2.586207,
                "scoreFactor": 8,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 113,
                    "failedResources": 3,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0036": {
                "controlID": "C-0036",
                "name": "Malicious admission controller (validating)",
                "status": "failed",
                "score": 100,
                "scoreFactor": 7,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 4,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0037": {
                "controlID": "C-0037",
                "name": "CoreDNS poisoning",
                "status": "failed",
                "score": 13.793103,
                "scoreFactor": 5,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 100,
                    "failedResources": 16,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0039": {
                "controlID": "C-0039",
                "name": "Malicious admission controller (mutating)",
                "status": "failed",
                "score": 100,
                "scoreFactor": 10,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 3,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0042": {
                "controlID": "C-0042",
                "name": "SSH server running inside container",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 8,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0045": {
                "controlID": "C-0045",
                "name": "Writable hostPath mount",
                "status": "failed",
                "score": 14.268726,
                "scoreFactor": 8,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 63,
                    "failedResources": 12,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0047": {
                "controlID": "C-0047",
                "name": "Exposed dashboard",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 6,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0048": {
                "controlID": "C-0048",
                "name": "HostPath mount",
                "status": "failed",
                "score": 13.079666,
                "scoreFactor": 6,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 64,
                    "failedResources": 11,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0053": {
                "controlID": "C-0053",
                "name": "Access container service account",
                "status": "failed",
                "score": 92,
                "scoreFactor": 5,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 4,
                    "failedResources": 46,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0054": {
                "controlID": "C-0054",
                "name": "Cluster internal networking",
                "status": "failed",
                "score": 100,
                "scoreFactor": 4,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 10,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0057": {
                "controlID": "C-0057",
                "name": "Privileged container",
                "status": "failed",
                "score": 8.323424,
                "scoreFactor": 8,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 65,
                    "failedResources": 7,
                    "excludedResources": 3,
                    "skippedResources": 0
                }
            },
            "C-0058": {
                "controlID": "C-0058",
                "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 6,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0059": {
                "controlID": "C-0059",
                "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 5,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0066": {
                "controlID": "C-0066",
                "name": "Secret/ETCD encryption enabled",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 3,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0067": {
                "controlID": "C-0067",
                "name": "Audit logs enabled",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 3,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0068": {
                "controlID": "C-0068",
                "name": "PSP enabled",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 3,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0069": {
                "controlID": "C-0069",
                "name": "Disable anonymous access to Kubelet service",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 10,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            },
            "C-0070": {
                "controlID": "C-0070",
                "name": "Enforce Kubelet client TLS authentication",
                "status": "skipped",
                "score": 0,
                "scoreFactor": 10,
                "resourceIDs": {},
                "ResourceCounters": {
                    "passedResources": 0,
                    "failedResources": 0,
                    "excludedResources": 0,
                    "skippedResources": 0
                }
            }
        },
        "ResourceCounters": {
            "passedResources": 140,
            "failedResources": 105,
            "excludedResources": 6,
            "skippedResources": 0
        }
    },
    "results": [
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:konnectivity-server/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:konnectivity-server",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/gke-common-webhook-heartbeat",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-ocimage",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-notification-service",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-proxy",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:unauthenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-dns",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet-bootstrap/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-node-bootstrapper",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-demos/Deployment/mycluster-router",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-operator/Deployment/mysql-operator",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/nvidia-gpu-device-plugin",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.containers[0].securityContext.privileged"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "80379d56-1799-45f2-96c3-b37d9b7e4933",
                                    "name": "exception_C-0057_nvidia-gpu-device-plugin_1470968730fe3b20a54a7f96692c939f",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2021-10-12T08:25:45.478891",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "DaemonSet",
                                                "name": "nvidia-gpu-device-plugin",
                                                "namespace": "kube-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Privileged container"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[3].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[5].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[3].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[5].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/ca-validate-cfg",
            "controls": [
                {
                    "controlID": "C-0036",
                    "name": "Malicious admission controller (validating)",
                    "rules": [
                        {
                            "name": "list-all-validating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-hpa-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-oracle",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/systest-ns-yza2",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/konnectivity-agent",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/mysql-demos",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:glbc",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:volume-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-all-3bbfeaf0-4d91-4d92-bfaa-b704ed3f54",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gcp-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:gcp-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gcp-controller-manager",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/event-exporter-sa/rbac.authorization.k8s.io/v1//ClusterRole/view/rbac.authorization.k8s.io/v1//ClusterRoleBinding/event-exporter-rb",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[4]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[5]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1/armo-system/RoleBinding/armo-scanner-service-account-role-binding",
            "controls": [
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-audit",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/default/ConfigMap/catalog-initdb-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-resizer-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-resizer-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape-recurring",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0026",
                    "name": "Kubernetes CronJob",
                    "rules": [
                        {
                            "name": "rule-deny-cronjobs",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1/kube-system/Role/pdcsi-leaderelection/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/pdcsi-leaderelection-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/metrics-server:system:auth-delegator",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/systest-ns-tivl",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/kube-public",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-be-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-p7q9",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mycluster",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-demos/Deployment/prod-mysql",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-scan-scheduler-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-f265193d-0995-4d3c-9d9e-cc1a7fb2",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/default/ConfigMap/kubescape",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[5].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/kube-dns-autoscaler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kubedns-config-images",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-node-lease/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-3965444195973265759-devopsbest",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/service-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kubescape-job-template",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kubescape-cronjob-template",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/host-sensor-definition",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:clustermetrics/rbac.authorization.k8s.io/v1//ClusterRole/system:clustermetrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:clustermetrics",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-service-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-service-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/kube-node-lease",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-kubescape-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/mysql-operator/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/pdcsi-node",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.containers[1].securityContext.privileged"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "df72e092-4050-453f-9ba8-a18013d4d1b2",
                                    "name": "exception_C-0057_pdcsi-node_ec56c33838f7243e8ac45815bfbbdb78",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2021-10-06T06:20:38.398926",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "DaemonSet",
                                                "name": "pdcsi-node",
                                                "namespace": "kube-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Privileged container"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[4].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.template.spec.volumes[4].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1//ClusterRole/gce:cloud-provider/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:cloud-provider",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-actor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-actor",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[8].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[8].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[8].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[4].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-dns-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns-autoscaler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/clustermetrics",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[5]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[4]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:glbc/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:glbc",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metadata-agent/rbac.authorization.k8s.io/v1//ClusterRole/stackdriver:metadata-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/stackdriver:metadata-agent",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:snapshot-controller/rbac.authorization.k8s.io/v1/kube-system/Role/snapshot-controller-leaderelection/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/snapshot-controller-leaderelection",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-bootstrap/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-bootstrap",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-user-npd-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-rs7j",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-2305597503072840094-armobest",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/konnectivity-agent-autoscaler-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/mysql-operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/mysql-operator-rolebinding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[5]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[4]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].verbs[6]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[5].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/default/Deployment/prod-mysql",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-4888289602749810007-szh-fw",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-collection-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-collection-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/gke-metrics-agent/rbac.authorization.k8s.io/v1//ClusterRole/gke-metrics-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gke-metrics-agent",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-collector",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/kube-dns",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "f8dc270c-73cd-40c8-97c4-527b09a3b68f",
                                    "name": "exception_C-0012_kube-system_ace566678944d1c54719225fa711f8cf",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2021-10-09T16:56:23.709668",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "kube-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Applications credentials in configuration files"
                                        }
                                    ]
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mysql-1645559751",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRole/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/npd-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-scan-scheduler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0026",
                    "name": "Kubernetes CronJob",
                    "rules": [
                        {
                            "name": "rule-deny-cronjobs",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/default/Deployment/jaeger",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:master-prom-to-sd-monitor/rbac.authorization.k8s.io/v1//ClusterRole/system:master-monitoring-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/master-monitoring-role-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-d9d9f676-09fa-4b28-abd7-508f9ccd",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-dns-autoscaler",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/ca-mutate-cfg",
            "controls": [
                {
                    "controlID": "C-0039",
                    "name": "Malicious admission controller (mutating)",
                    "rules": [
                        {
                            "name": "list-all-mutating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-ab7dec83-5ae7-4cce-87dc-4aac7aa9",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape-recurring-4681143087714448482-nsa",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0026",
                    "name": "Kubernetes CronJob",
                    "rules": [
                        {
                            "name": "rule-deny-cronjobs",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/disruption-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:disruption-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:slo-monitor/rbac.authorization.k8s.io/v1//ClusterRole/system:slo-monitor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:slo-monitor",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-3",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/neg-annotation.config.common-webhooks.networking.gke.io",
            "controls": [
                {
                    "controlID": "C-0039",
                    "name": "Malicious admission controller (mutating)",
                    "rules": [
                        {
                            "name": "list-all-mutating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-default-deployment-nginx-deployment",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0026",
                    "name": "Kubernetes CronJob",
                    "rules": [
                        {
                            "name": "rule-deny-cronjobs",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "03aa6608-0542-406c-bb04-925b27b419c0",
                                    "name": "exception_C-0026_armo-kubescape_229abae3116e67b3425e14cba6008886",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-02-11T15:47:33.275786",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "CronJob",
                                                "name": "armo-kubescape",
                                                "namespace": "armo-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "123123123123",
                                            "controlName": "Kubernetes CronJob"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-80xg",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/cluster-autoscaler-status",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[11].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[11].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[11].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[11].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[6].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRole/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kubestore-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:kubestore-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kubestore-collector",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "67600cc9-7318-4fbf-91af-4e1ce2392ab5",
                                    "name": "exception_C-0002_system:masters_983f6ac2796add5d0108b1df5f24fb63",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-20T09:38:12.203716",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "Group",
                                                "name": "system:masters",
                                                "namespace": ""
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Exec into container"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-scanner-service-account-role-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "9e586c8e-70d8-4191-baa7-9dfc59c5af05",
                                    "name": "exception_C-0015_armo-system_97e97cdb00b616ce63475cd8fdfdc142",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-18T12:42:15.403876",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "armo-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "MITRE",
                                            "controlName": "List Kubernetes secrets"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:resource-tracker/rbac.authorization.k8s.io/v1//ClusterRole/system:resource-tracker/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:resource-tracker",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/service-account-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-account-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-vuln-scan",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:managed-certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:managed-certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:managed-certificate-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-rbac",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vqj9",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-public/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/system:service-account-issuer-discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/default/ConfigMap/users-initdb-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/cluster-kubestore",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[4].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-migrator-v2",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/metrics-server-v0.4.4",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mysql-1645559415",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-master-healthcheck/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-healthcheck/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-healthcheck",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[4].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-initializer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-initializer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-master-resourcequota/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-resourcequota/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-resourcequota",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-audit",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1//ClusterRole/gce:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:cloud-provider",
            "controls": [
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/systest-ns-tivl/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/cyberarmor-system/ServiceAccount/ca-controller-service-account/rbac.authorization.k8s.io/v1//ClusterRole/ca-controller-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-controller-role-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-posture-score-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/armo-system",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1/armo-system/Role/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1/armo-system/RoleBinding/armo-scanner-service-account-role-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "9e586c8e-70d8-4191-baa7-9dfc59c5af05",
                                    "name": "exception_C-0015_armo-system_97e97cdb00b616ce63475cd8fdfdc142",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-18T12:42:15.403876",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "armo-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "MITRE",
                                            "controlName": "List Kubernetes secrets"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-4",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/metrics-server-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[6].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[6].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/ca-cr-actor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-cr",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRole/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRoleBinding/konnectivity-agent-cpha",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-xcp0",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRole/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/konnectivity-agent-cpha",
            "controls": [
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-rotation/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-rotation",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/gke-common-webhook-lock",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/flowcontrol-guardrails.config.common-webhooks.networking.gke.io",
            "controls": [
                {
                    "controlID": "C-0036",
                    "name": "Malicious admission controller (validating)",
                    "rules": [
                        {
                            "name": "list-all-validating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/default",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/pod-ready.config.common-webhooks.networking.gke.io",
            "controls": [
                {
                    "controlID": "C-0039",
                    "name": "Malicious admission controller (mutating)",
                    "rules": [
                        {
                            "name": "list-all-mutating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/read-updateinfo/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler-updateinfo",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/metadata-agent-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRole/system:glbc-status/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:glbc-status",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "2b6ccf06-2662-412c-a50b-d06b7fb266c4",
                                    "name": "exception_C-0015_system:controller:glbc_2b25a6315cf9037d2dec2572497acd17",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-25T15:28:34.044886",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "User",
                                                "name": "system:controller:glbc",
                                                "namespace": ""
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "MITRE",
                                            "controlName": "List Kubernetes secrets"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/pdcsi-node-windows",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "e2773091-20a2-4781-becb-81b7f462b4c5",
                                    "name": "exception_C-0012_armo-system_a4fe1c4a2a2cdf27ecb05d13a434ecfa",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-18T12:42:34.576490",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "armo-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "MITRE",
                                            "controlName": "Applications credentials in configuration files"
                                        }
                                    ]
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mysql-1645559415",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/cyberarmor-system",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/systest-ns-yza2/Deployment/demo-service-secret",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/nodelimit.config.common-webhooks.networking.gke.io",
            "controls": [
                {
                    "controlID": "C-0036",
                    "name": "Malicious admission controller (validating)",
                    "rules": [
                        {
                            "name": "list-all-validating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:l7-lb-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:glbc-status/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:glbc-status",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vfd8",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.containers[0].securityContext.privileged"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.volumes[1].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[2].hostPath.path"
                                },
                                {
                                    "failedPath": "spec.volumes[3].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-snapshotter-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-snapshotter-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mysql-1645559751",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-provisioner-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-provisioner-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/validation-webhook.snapshot.storage.k8s.io",
            "controls": [
                {
                    "controlID": "C-0036",
                    "name": "Malicious admission controller (validating)",
                    "rules": [
                        {
                            "name": "list-all-validating-webhooks",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-vuln-scan",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-2421728663191761958-nsa",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/konnectivity-agent-autoscaler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/default/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mycluster-initconf",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/l7-default-backend",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/metadata-proxy-v0.1",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.containers[0].securityContext.privileged"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "d4b2f171-07f9-4b0e-a32f-073a860f8dec",
                                    "name": "exception_C-0057_metadata-proxy-v0.1_5aaa446973ca2d67ac010eed690d8144",
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2021-10-06T06:20:39.101911",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "kind": "DaemonSet",
                                                "name": "metadata-proxy-v0.1",
                                                "namespace": "kube-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Privileged container"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-1",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/route-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:route-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[3].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-common-webhooks/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-common-webhooks/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-common-webhooks",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-posture",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ttl-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kube-apiserver/rbac.authorization.k8s.io/v1//ClusterRole/kubelet-api-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kube-apiserver-kubelet-api-admin",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[2].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/metrics-server-auth-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:snapshot-controller/rbac.authorization.k8s.io/v1//ClusterRole/snapshot-controller-runner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/snapshot-controller-role",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-web-socket",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/external-metrics-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/uas-hpa-external-metrics-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-webhook",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/ingress-gce-lock",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-dd0c7f80-65c4-479b-b6ed-46859958",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/mysql-operator",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/systest-ns-tivl/Deployment/demo-service-secret",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1//Namespace/kube-system",
            "controls": [
                {
                    "controlID": "C-0054",
                    "name": "Cluster internal networking",
                    "rules": [
                        {
                            "name": "internal-networking",
                            "status": "failed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/systest-ns-yza2/ConfigMap/kube-root-ca.crt",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[ca.crt]"
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/ingress-uid",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-dns/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-trigger/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-trigger",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-2",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-websocket",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "spec.template.spec.volumes[0].hostPath.path"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-kubescape-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-kubescape-service-account-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-kubescape-service-account-role-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "9e586c8e-70d8-4191-baa7-9dfc59c5af05",
                                    "name": "exception_C-0015_armo-system_97e97cdb00b616ce63475cd8fdfdc142",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2022-01-18T12:42:15.403876",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "armo-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "MITRE",
                                            "controlName": "List Kubernetes secrets"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[1].resources[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[1].apiGroups[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1//ClusterRole/system:metrics-server/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:metrics-server",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-metrics-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-metrics-reader",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/armo-be-config",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-notification-server",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-crd-creator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-crd-creator",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/extension-apiserver-authentication",
            "controls": [
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-configmap",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "data[requestheader-username-headers]"
                                },
                                {
                                    "failedPath": "data[client-ca-file]"
                                },
                                {
                                    "failedPath": "data[requestheader-client-ca-file]"
                                }
                            ],
                            "exception": [
                                {
                                    "guid": "f8dc270c-73cd-40c8-97c4-527b09a3b68f",
                                    "name": "exception_C-0012_kube-system_ace566678944d1c54719225fa711f8cf",
                                    "attributes": {
                                        "namespaceOnly": "true"
                                    },
                                    "policyType": "postureExceptionPolicy",
                                    "creationTime": "2021-10-09T16:56:23.709668",
                                    "actions": [
                                        "alertOnly"
                                    ],
                                    "resources": [
                                        {
                                            "designatorType": "Attributes",
                                            "attributes": {
                                                "cluster": "gke_elated-pottery-310110_us-central1-c_bez-longrun-3",
                                                "namespace": "kube-system"
                                            }
                                        }
                                    ],
                                    "posturePolicies": [
                                        {
                                            "frameworkName": "NSA",
                                            "controlName": "Applications credentials in configuration files"
                                        }
                                    ]
                                }
                            ],
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ],
                                "sensitiveValues": [
                                    "BEGIN",
                                    "PRIVATE KEY",
                                    "eyJhbGciO"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-wl-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0057",
                    "name": "Privileged container",
                    "rules": [
                        {
                            "name": "rule-privilege-escalation",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0045",
                    "name": "Writable hostPath mount",
                    "rules": [
                        {
                            "name": "alert-rw-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0020",
                    "name": "Mount service principal",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0012",
                    "name": "Applications credentials in configuration files",
                    "rules": [
                        {
                            "name": "rule-credentials-in-env-var",
                            "status": "passed",
                            "controlConfigurations": {
                                "sensitiveKeyNames": [
                                    "aws_access_key_id",
                                    "aws_secret_access_key",
                                    "azure_batchai_storage_account",
                                    "azure_batchai_storage_key",
                                    "azure_batch_account",
                                    "azure_batch_key",
                                    "pass",
                                    "username",
                                    "pwd",
                                    "cred",
                                    "token",
                                    "key",
                                    "cert"
                                ]
                            }
                        }
                    ]
                },
                {
                    "controlID": "C-0048",
                    "name": "HostPath mount",
                    "rules": [
                        {
                            "name": "alert-any-hostpath",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/Role/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/konnectivity-agent-cpha",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet-bootstrap/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-bootstrap/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-certificate-bootstrap",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-attacher-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-attacher-binding",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/gce:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:cloud-provider",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[2]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[3]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "failed",
                            "paths": [
                                {
                                    "failedPath": "relatedObjects[1].rules[0].resources[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].verbs[1]"
                                },
                                {
                                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.subjects[0]"
                                },
                                {
                                    "failedPath": "relatedObjects[0].roleRef.name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0053",
                    "name": "Access container service account",
                    "rules": [
                        {
                            "name": "access-container-service-account-v1",
                            "status": "failed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:basic-user/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
            "controls": [
                {
                    "controlID": "C-0014",
                    "name": "Access Kubernetes dashboard",
                    "rules": [
                        {
                            "name": "rule-access-dashboard-subject-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0002",
                    "name": "Exec into container",
                    "rules": [
                        {
                            "name": "exec-into-container-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0015",
                    "name": "List Kubernetes secrets",
                    "rules": [
                        {
                            "name": "rule-can-list-get-secrets-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0031",
                    "name": "Delete Kubernetes events",
                    "rules": [
                        {
                            "name": "rule-can-delete-k8s-events-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0007",
                    "name": "Data Destruction",
                    "rules": [
                        {
                            "name": "rule-excessive-delete-rights-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0035",
                    "name": "Cluster-admin binding",
                    "rules": [
                        {
                            "name": "rule-list-all-cluster-admins-v1",
                            "status": "passed"
                        }
                    ]
                },
                {
                    "controlID": "C-0037",
                    "name": "CoreDNS poisoning",
                    "rules": [
                        {
                            "name": "rule-can-update-configmap-v1",
                            "status": "passed"
                        }
                    ]
                }
            ]
        }
    ],
    "resources": [
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-controller-manager",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-controller-manager",
                            "resourceVersion": "105",
                            "uid": "a3bdfb77-04db-4591-ad28-59de8eb23c57"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-controller-manager"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-controller-manager"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-controller-manager",
                            "resourceVersion": "59",
                            "uid": "7ba68f73-ba17-4620-8985-41d83975c64f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resourceNames": [
                                    "kube-controller-manager"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-controller-manager"
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets",
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "namespaces",
                                    "secrets",
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets",
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-resourcequota",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "resourcequota-rbac-1.0.1"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-master-resourcequota",
                    "resourceVersion": "498",
                    "uid": "3014fae0-198f-4431-a63b-393de47bc05a"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "resourcequotas"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apiextensions.k8s.io"
                        ],
                        "resources": [
                            "customresourcedefinitions"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/kube-dns-autoscaler",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "generation": 2,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "kube-dns-autoscaler",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kube-dns-autoscaler",
                    "namespace": "kube-system",
                    "resourceVersion": "96317703",
                    "uid": "e5a8c1ec-de11-4834-a4ad-e89c5b48b71f"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns-autoscaler"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns-autoscaler"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=kube-dns-autoscaler",
                                        "--target=Deployment/kube-dns",
                                        "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "20m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                },
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns-autoscaler",
                            "serviceAccountName": "kube-dns-autoscaler",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-694c5ffb5c",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "16",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:54Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "46",
                        "pod-template-hash": "694c5ffb5c",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-694c5ffb5c",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "112885937",
                    "uid": "a03becb1-ed96-464e-b466-658f04ddd87c"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "694c5ffb5c",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "46",
                                "pod-template-hash": "694c5ffb5c",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-3",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-01-13T15:07:28Z",
                    "labels": {
                        "app": "ks-test-1"
                    },
                    "name": "ks-test-3",
                    "namespace": "armo-system",
                    "resourceVersion": "87233023",
                    "uid": "23e7948c-a179-4cbb-a18e-c1ab00eb356f"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "23e7948c-a179-4cbb-a18e-c1ab00eb356f"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "23e7948c-a179-4cbb-a18e-c1ab00eb356f",
                                "job-name": "ks-test-3"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan --submit --environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kubedns-config-images",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "kubedns.dnsmasq-nanny": "XXXXXX",
                    "kubedns.kube-dns": "XXXXXX",
                    "kubedns.prom-to-sd": "XXXXXX",
                    "kubedns.sidecar": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "components.gke.io/image-map": "Images deployed by operator"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubedns.cloud.google.com/operator-system": "true"
                    },
                    "name": "kubedns-config-images",
                    "namespace": "kube-system",
                    "resourceVersion": "55353546",
                    "uid": "ed7ef06b-f3d6-4b88-9d09-8e9b949f2b40"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/read-updateinfo/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler-updateinfo",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "cluster-autoscaler",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "updateinfo-crd",
                                "components.gke.io/component-version": "1.1.0"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "cluster-autoscaler-updateinfo",
                            "resourceVersion": "10648265",
                            "uid": "72feb76d-49c6-430f-8803-1765b4c5116f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "read-updateinfo"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "cluster-autoscaler"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "updateinfo-crd",
                                "components.gke.io/component-version": "1.1.0"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "read-updateinfo",
                            "resourceVersion": "10648264",
                            "uid": "dcfcc342-3c53-4a61-a007-7889fc0639cd"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "nodemanagement.gke.io"
                                ],
                                "resources": [
                                    "updateinfos"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/event-exporter-sa/rbac.authorization.k8s.io/v1//ClusterRole/view/rbac.authorization.k8s.io/v1//ClusterRoleBinding/event-exporter-rb",
            "object": {
                "kind": "ServiceAccount",
                "name": "event-exporter-sa",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:54Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "event-exporter",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "event-exporter-rb",
                            "resourceVersion": "350",
                            "uid": "2557b8f1-d433-4d82-bc10-4a3e3269b9c2"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "view"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "event-exporter-sa",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "aggregationRule": {
                            "clusterRoleSelectors": [
                                {
                                    "matchLabels": {
                                        "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                    }
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                            },
                            "name": "view",
                            "resourceVersion": "279",
                            "uid": "34925f7c-3d21-41e3-a418-007e285f6140"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/log",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions",
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "statefulsets",
                                    "statefulsets/scale",
                                    "statefulsets/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers",
                                    "horizontalpodautoscalers/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "cronjobs/status",
                                    "jobs",
                                    "jobs/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "replicationcontrollers/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets",
                                    "poddisruptionbudgets/status"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:nodeclient",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                    "resourceVersion": "62",
                    "uid": "cd34548d-5b24-4e45-a931-4000a781cdd4"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests/nodeclient"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-websocket",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "12"
                    },
                    "creationTimestamp": "2021-11-10T14:24:54Z",
                    "generation": 16,
                    "labels": {
                        "app": "ca-websocket",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "111262546",
                    "uid": "320acd7a-448d-4741-9787-f59a57450601"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-567b8c48fc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "16",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T11:04:48Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "47",
                        "pod-template-hash": "567b8c48fc",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-567b8c48fc",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "112927264",
                    "uid": "48c21d32-0290-46b2-beb3-0e9699301830"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "567b8c48fc",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "47",
                                "pod-template-hash": "567b8c48fc",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-58d996d78b",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "11",
                        "deployment.kubernetes.io/revision-history": "9"
                    },
                    "creationTimestamp": "2021-11-22T15:12:12Z",
                    "generation": 4,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "58d996d78b",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-58d996d78b",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "66082260",
                    "uid": "d05f8a29-bc2c-4fbf-91da-ad123d2ce28b"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "58d996d78b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "58d996d78b",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/systest-ns-tivl/ReplicaSet/demo-service-secret-f87564df4",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T10:43:50Z",
                    "generation": 1,
                    "labels": {
                        "app": "demo-service-secret",
                        "pod-template-hash": "f87564df4"
                    },
                    "name": "demo-service-secret-f87564df4",
                    "namespace": "systest-ns-tivl",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "demo-service-secret",
                            "uid": "1a030fc8-81f6-4fa3-b0e2-90e71fd24fb3"
                        }
                    ],
                    "resourceVersion": "96318255",
                    "uid": "e3e17bb7-db66-43a5-b53e-74337eeb0c63"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "demo-service-secret",
                            "pod-template-hash": "f87564df4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "demo-service-secret",
                                "pod-template-hash": "f87564df4"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "demo-service-secret",
                                    "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                                    "env": [
                                        {
                                            "name": "SECRET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "ARMO_TEST_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CAA_ENABLE_CRASH_REPORTER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "encrypted-credentials-volume",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "encrypted-credentials"
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-2305597503072840094-armobest",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-2305597503072840094-armobest",
                    "namespace": "armo-system",
                    "resourceVersion": "105912971",
                    "uid": "4530f7c8-0226-47b7-b31f-64b926cf657b"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "4530f7c8-0226-47b7-b31f-64b926cf657b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "ArmoBest",
                                "armo.jobid": "ed90682b-d928-4503-94f4-c9580e9e280c"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "4530f7c8-0226-47b7-b31f-64b926cf657b",
                                "job-name": "armo-kubescape-on-demand-2305597503072840094-armobest"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "ArmoBest",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:generic-garbage-collector",
                    "resourceVersion": "81",
                    "uid": "35280fc1-5c77-4424-951d-f8d99642dc67"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/pvc-protection-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "pvc-protection-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "222",
                    "uid": "237e37ad-aef0-4e84-a483-d7c99aed7078"
                },
                "secrets": [
                    {
                        "name": "pvc-protection-controller-token-4hknp"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vfd8",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "7ae49d67522da6bbd874f70bd66a0100",
                        "kubernetes.io/config.mirror": "7ae49d67522da6bbd874f70bd66a0100",
                        "kubernetes.io/config.seen": "2022-01-30T11:07:36.201298855Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-01-30T11:07:39Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                            "uid": "1fe785f1-9410-41f0-846d-3dc850405d91"
                        }
                    ],
                    "resourceVersion": "96317514",
                    "uid": "c9069c27-ee74-4836-8874-0f61f2e3c96e"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kubescape-cronjob-template",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "cronjobTemplate": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-17T08:33:40Z",
                    "labels": {
                        "app": "armo-be-config",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "kubescape-cronjob-template",
                    "namespace": "armo-system",
                    "resourceVersion": "112842044",
                    "uid": "a05cc20e-d839-4e0d-8bc8-03284e6fa440"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:masters",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "cluster-admin",
                            "resourceVersion": "100",
                            "uid": "069ee84e-6e0c-4049-b336-f60f36e1acd0"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "cluster-admin"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:masters"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "cluster-admin",
                            "resourceVersion": "42",
                            "uid": "1b7dd6d7-6ea3-4b5c-a930-c46053971e4a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-dd0c7f80-65c4-479b-b6ed-46859958",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-01-18T10:12:32Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-mitre-dd0c7f80-65c4-479b-b6ed-46859958",
                    "namespace": "armo-system",
                    "resourceVersion": "89885960",
                    "uid": "c1c12349-a128-47f2-827f-23f8e2c8dc18"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "c1c12349-a128-47f2-827f-23f8e2c8dc18"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "MITRE",
                                "armo.jobid": "dd0c7f80-65c4-479b-b6ed-468599589913"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "c1c12349-a128-47f2-827f-23f8e2c8dc18",
                                "job-name": "armo-kubescape-on-demand-mitre-dd0c7f80-65c4-479b-b6ed-46859958"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "MITRE",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:attachdetach-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:attachdetach-controller",
                    "resourceVersion": "71",
                    "uid": "842a41f1-e9e5-49d8-afed-074ded3eb599"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims",
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "volumeattachments"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csidrivers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csinodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-snapshotter-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-snapshotter-binding",
                    "resourceVersion": "55353596",
                    "uid": "78ada90a-fc48-4d1e-ba32-8a4142db418b"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "pdcsi-snapshotter-role"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:pdcsi-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pvc-protection-controller",
                    "resourceVersion": "136",
                    "uid": "10159089-bb6d-4c13-8d2a-1694fc1f3739"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:pvc-protection-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "pvc-protection-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:resource-tracker",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "resource-tracker-rbac-1.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:resource-tracker",
                    "resourceVersion": "497",
                    "uid": "29134a96-e0c3-4717-b748-88dcc94ee0dc"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:resource-tracker"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:resource-tracker"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/job-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:38Z",
                    "name": "job-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "200",
                    "uid": "a8389e36-92e5-4054-8e2a-7af2fc8fa895"
                },
                "secrets": [
                    {
                        "name": "job-controller-token-2rlwl"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/service-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "service-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "192",
                    "uid": "c9ae7d9e-554e-4d63-8fa1-da008fd128ad"
                },
                "secrets": [
                    {
                        "name": "service-controller-token-sg2hm"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-9d4fdc476",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "8",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T12:39:30Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "pod-template-hash": "9d4fdc476",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-9d4fdc476",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "98559806",
                    "uid": "9a14850a-6bf9-44db-a700-015338c4d4d9"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "9d4fdc476",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "pod-template-hash": "9d4fdc476",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:441",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1//Namespace/kube-public",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:33Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "kube-public"
                    },
                    "name": "kube-public",
                    "resourceVersion": "17",
                    "uid": "a72ccdeb-5d91-4b16-a398-821721b4a8a7"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/armo-scanner-service-account-roles",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-vuln-scanner",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-scanner-service-account-roles",
                    "resourceVersion": "67723554",
                    "uid": "c98b90b9-fe8f-4806-8ffa-bb73ee8e52ab"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "watch",
                            "list",
                            "describe"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/users",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:30Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "users"
                    },
                    "name": "users",
                    "namespace": "default",
                    "resourceVersion": "41559492",
                    "uid": "fb688a4e-2b93-486c-9a5b-adce27d3c55f"
                },
                "spec": {
                    "clusterIP": "10.40.3.254",
                    "clusterIPs": [
                        "10.40.3.254"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-users",
                            "port": 8083,
                            "protocol": "TCP",
                            "targetPort": 8083
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "users"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/default/Service/users-mongo",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:31Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "users-mongo"
                    },
                    "name": "users-mongo",
                    "namespace": "default",
                    "resourceVersion": "41559504",
                    "uid": "35d4a3dc-6c74-479e-abb1-b1d9c70d8394"
                },
                "spec": {
                    "clusterIP": "10.40.2.161",
                    "clusterIPs": [
                        "10.40.2.161"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mongo-users",
                            "port": 27017,
                            "protocol": "TCP",
                            "targetPort": 27017
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "users-mongo"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "kubelet-bootstrap",
                    "resourceVersion": "624",
                    "uid": "652f7d7f-6d7b-4792-a2ef-d75e9684d315"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-bootstrapper"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kubelet"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-attacher-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-controller-attacher-binding",
                    "resourceVersion": "55353593",
                    "uid": "e1ad4c52-ebab-46c8-bd93-9030dd027e87"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "pdcsi-attacher-role"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:pdcsi-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pod-garbage-collector",
                    "resourceVersion": "126",
                    "uid": "1e8262e0-8536-4075-83f2-4650568cadab"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:pod-garbage-collector"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "pod-garbage-collector",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:slo-monitor",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "slo-monitor-rbac-1.0.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:slo-monitor",
                    "resourceVersion": "501",
                    "uid": "e139df3b-85c9-4755-b9a1-8bdf64f7efe2"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:slo-monitor"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:slo-monitor"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422",
                    "namespace": "armo-system",
                    "resourceVersion": "105912673",
                    "uid": "24537315-a803-4db0-9a0e-5e62294f4318"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "24537315-a803-4db0-9a0e-5e62294f4318"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "werwer",
                                "armo.jobid": "d0c905c1-9848-40ff-afc6-c409422db1f2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "24537315-a803-4db0-9a0e-5e62294f4318",
                                "job-name": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "werwer",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-operator/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:48:56Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "mysql-operator",
                    "resourceVersion": "109544224",
                    "uid": "1adc1df0-be0c-45e5-a446-17fcc60b6626"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-proxy",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-proxier",
                            "resourceVersion": "104",
                            "uid": "7812acd7-fa61-4ada-a232-7722ff8e6e70"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-proxy"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-proxier",
                            "resourceVersion": "69",
                            "uid": "592ecc9f-fbf4-41d4-9e39-287c43bf4b13"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRole/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/konnectivity-agent-cpha",
            "object": {
                "kind": "ServiceAccount",
                "name": "konnectivity-agent-cpha",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon",
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{\"components.gke.io/layer\":\"addon\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent-cpha\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"list\",\"watch\"]}]}\n"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:components.gke.io/layer": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:addonmanager.kubernetes.io/mode": {},
                                                "f:kubernetes.io/cluster-service": {}
                                            }
                                        },
                                        "f:rules": {}
                                    },
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "time": "2021-11-02T02:33:43Z"
                                }
                            ],
                            "name": "konnectivity-agent-cpha",
                            "resourceVersion": "49475070",
                            "uid": "0171dd85-b459-4b95-a2a0-144521e3f356"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon",
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{\"components.gke.io/layer\":\"addon\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent-cpha\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"konnectivity-agent-cpha\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"konnectivity-agent-cpha\",\"namespace\":\"kube-system\"}]}\n"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:components.gke.io/layer": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:addonmanager.kubernetes.io/mode": {},
                                                "f:kubernetes.io/cluster-service": {}
                                            }
                                        },
                                        "f:roleRef": {
                                            "f:apiGroup": {},
                                            "f:kind": {},
                                            "f:name": {}
                                        },
                                        "f:subjects": {}
                                    },
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "time": "2021-11-02T02:33:43Z"
                                }
                            ],
                            "name": "konnectivity-agent-cpha",
                            "namespace": "kube-system",
                            "resourceVersion": "49475075",
                            "uid": "02be0ff3-066d-4319-8be7-ccf8490d39e3"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "konnectivity-agent-cpha"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "konnectivity-agent-cpha",
                                "namespace": "kube-system"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Service/armo-vuln-scan",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:50Z",
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-vuln-scan",
                    "namespace": "armo-system",
                    "resourceVersion": "67723562",
                    "uid": "0a1cb016-c566-4310-ace7-f3c7c1663893"
                },
                "spec": {
                    "clusterIP": "10.40.7.155",
                    "clusterIPs": [
                        "10.40.7.155"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 8080,
                            "protocol": "TCP",
                            "targetPort": 8080
                        }
                    ],
                    "selector": {
                        "app": "armo-vuln-scan"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-service-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-hpa-service-reader",
                    "resourceVersion": "579",
                    "uid": "6dce4483-3e52-43d0-8fe3-3a3f7fd7dd95"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-hpa-service-reader"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/pod-ready.config.common-webhooks.networking.gke.io",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "MutatingWebhookConfiguration",
                "metadata": {
                    "annotations": {
                        "common-webhooks.networking.gke.io/webhook-name": "pod-ready"
                    },
                    "creationTimestamp": "2021-07-07T05:45:12Z",
                    "generation": 1,
                    "labels": {
                        "networking.gke.io/common-webhooks": "true"
                    },
                    "name": "pod-ready.config.common-webhooks.networking.gke.io",
                    "resourceVersion": "55353205",
                    "uid": "149b2e18-56a6-47ff-b0f4-5c1b6c5cdc5f"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lRQjRJcmN0NFVaS1huTHcvME9aWWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSbFpEZzJPVE5pWWkwME5UWmlMVFJsT1dFdE9UTTNaQzB3WlRsa09ESmhObVkwTUdRdwpIaGNOTWpFd056QTNNRFEwTWpFd1doY05Nall3TnpBMk1EVTBNakV3V2pBdk1TMHdLd1lEVlFRREV5UmxaRGcyCk9UTmlZaTAwTlRaaUxUUmxPV0V0T1RNM1pDMHdaVGxrT0RKaE5tWTBNR1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjNjMycnh0ekdWUDRJNzNJQXQzOVVBRkxKSGY2ckR2cXdKRDYrQlB6MwpKcHc4ZUt5clVISGdSTWJKNExUVE5XV000N2tDb1FDOVJUbzFJVGtVcS96a1dKY0pEL0swZWRRR004SitLZGYwCmgrUzJNTzEyNDRxTmlrNDlKcy92UldOWmNMZEJoaDlpWHpIenl6WDVzQnc4VEVpbkZtY1Y5dFdmTXJ5ZGlzSXoKSlRPdkhRVVhUNjJsR0hRbkZKbXIzYWhvS3lKY3FGbytsTER3bzdQbU5JaUhzMnZ1djRDTEJXV1FXOG1wcW9kYQpZZ2lncEJvYVQ5OHBTMmZZTXFGbUJGMkJxL0VyTWJPYnptYkoxdWlJcnhMa2NTS2NIbVI4ZWU4MXk3L1Qyb2R6CjI4UmYwdGJ6L21lckpZRE1iU1hkYkVzYUpsL3c5M3RCQ3puQ0FrOE9ZWGFoQWdNQkFBR2pRakJBTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmR4eG5HN1JUYWpoTgpHYXV4VHU0WFpDREMyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZEs4ZWg5dWo3TEJVQXhEbTdiNDl4azJuCkVqS2d2NXY5ZVUxUk5LOStHbFJvTjRiWmJLVHJqbjg4SE9sV0l5MjFGdldlVHgvdXpCenFub1V2Y3lxSk0velgKS2w0cGJOaENUd3dCQnR0WGtTcmwvcU9pSEVHcTJRbThjQ1BLL1QrNm5tU3RqZW1ZY09meVJtOVVJajBqS2RCego4WEZzQytIYXYzYkMrSjV1MlE1NGV3a3dhMUMzTk9lL2NFaDVpb3JjcXd0aEltOUQrS0wwYjRwVW1XMUhHdUUvCnhqclNDalFFK0U4QktodTNtUzZZUEk4S25CaDhrOE1PeXpGN0pMY3VaMHltcElFTUhaaEJ4aFlHN1Z5VjdZMG8KMkc3TEQ1SFZnazJ3QzdzMVNKQmdvdmZOb2YyOXJBYXlweWd2K1R3YitNTzV6YklhNHkxaWc4OG1tcnhtMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "url": "https://localhost:5443/webhook/pod-ready"
                        },
                        "failurePolicy": "Ignore",
                        "matchPolicy": "Exact",
                        "name": "pod-ready.common-webhooks.networking.gke.io",
                        "namespaceSelector": {},
                        "objectSelector": {},
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 30
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-8659cb66c8",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "7",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-18T14:10:46Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "pod-template-hash": "8659cb66c8",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-8659cb66c8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "91044697",
                    "uid": "c7b299c7-6a79-43e2-ab20-4676517ec859"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "8659cb66c8",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "pod-template-hash": "8659cb66c8",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/metrics-server:system:auth-delegator",
            "object": {
                "kind": "ServiceAccount",
                "name": "metrics-server",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "metrics-server:system:auth-delegator",
                            "resourceVersion": "386",
                            "uid": "02b2ad15-2f6f-4734-acdc-e92f5583d346"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:auth-delegator"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:auth-delegator",
                            "resourceVersion": "57",
                            "uid": "efcb51cd-c62c-44ed-8575-35c241b7595a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "deployment-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:deployment-controller",
                            "resourceVersion": "114",
                            "uid": "ec49a946-cd38-4f16-bb61-95e0b4b01594"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:deployment-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "deployment-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:deployment-controller",
                            "resourceVersion": "75",
                            "uid": "f2fd77bf-5202-4e91-ac0c-7335ad533a14"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "replicaset-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:replicaset-controller",
                            "resourceVersion": "127",
                            "uid": "eb8e0f21-af17-42ba-8672-957e3190dcd2"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:replicaset-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "replicaset-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:replicaset-controller",
                            "resourceVersion": "88",
                            "uid": "839c7535-d058-4619-80ba-d2a52e90f071"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:heapster",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:heapster",
                    "resourceVersion": "52",
                    "uid": "c273421d-44ff-4b80-b2a5-2b9598d2d92f"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events",
                            "namespaces",
                            "nodes",
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "deployments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kubelet-api-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kubelet-api-admin",
                    "resourceVersion": "55",
                    "uid": "12acd8b3-5aca-4daf-8c7c-27c33f664376"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "proxy"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/log",
                            "nodes/metrics",
                            "nodes/proxy",
                            "nodes/spec",
                            "nodes/stats"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-resizer-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-controller-resizer-binding",
                    "resourceVersion": "55353595",
                    "uid": "44285ab0-6384-4315-a337-ffb929434c70"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "pdcsi-resizer-role"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:pdcsi-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-metrics-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-uas-metrics-reader",
                    "resourceVersion": "586",
                    "uid": "8e4b883b-0161-4e4c-8df6-a3a42346ac38"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-uas-metrics-reader"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0b4j4kl",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f"
                    },
                    "creationTimestamp": "2022-02-10T06:53:27Z",
                    "generateName": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f-",
                    "labels": {
                        "controller-uid": "e766e3c2-b00b-4750-9336-80acf84b3eba",
                        "job-name": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f"
                    },
                    "name": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0b4j4kl",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f",
                            "uid": "e766e3c2-b00b-4750-9336-80acf84b3eba"
                        }
                    ],
                    "resourceVersion": "102363517",
                    "uid": "3ff92471-30d6-4f05-902f-350e550f3bb1"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.143",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-l6gm8",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-l6gm8",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-controller",
                    "resourceVersion": "572",
                    "uid": "6455b7e7-937e-404f-8b24-0092feffab04"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "vpa-recommender"
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "get",
                            "update",
                            "patch",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "events"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "update",
                            "patch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler-updateinfo",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "updateinfo-crd",
                        "components.gke.io/component-version": "1.1.0"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "cluster-autoscaler-updateinfo",
                    "resourceVersion": "10648265",
                    "uid": "72feb76d-49c6-430f-8803-1765b4c5116f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "read-updateinfo"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "cluster-autoscaler"
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
            "object": {
                "kind": "ServiceAccount",
                "name": "persistent-volume-binder",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:persistent-volume-binder",
                            "resourceVersion": "125",
                            "uid": "2c5ac60b-6612-4c94-92d2-de6f43620608"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:persistent-volume-binder"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "persistent-volume-binder",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:persistent-volume-binder",
                            "resourceVersion": "86",
                            "uid": "d1b01a0a-e68b-4eeb-ae51-adc6b27f1dbf"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node-bootstrapper",
                    "resourceVersion": "56",
                    "uid": "b626aea2-e9e1-4e17-b32d-c047a823832e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mysql-1645559415",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559415",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:50:24Z",
                    "generation": 1,
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559415",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109521202",
                    "uid": "2c14c8f9-2f1e-4e57-80fc-80715f7bb9fe"
                },
                "spec": {
                    "podManagementPolicy": "OrderedReady",
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/component": "primary",
                            "app.kubernetes.io/instance": "mysql-1645559415",
                            "app.kubernetes.io/name": "mysql"
                        }
                    },
                    "serviceName": "mysql-1645559415",
                    "template": {
                        "metadata": {
                            "annotations": {
                                "checksum/configuration": "4cdb824597a7a6fde9a2088b2b4e1acc503811de46670e084e8bbaffca44c6e8"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/component": "primary",
                                "app.kubernetes.io/instance": "mysql-1645559415",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "mysql",
                                "helm.sh/chart": "mysql-8.8.25"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "app.kubernetes.io/component": "primary",
                                                        "app.kubernetes.io/instance": "mysql-1645559415",
                                                        "app.kubernetes.io/name": "mysql"
                                                    }
                                                },
                                                "namespaces": [
                                                    "mysql-demos"
                                                ],
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 1
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "docker.io/bitnami/mysql:8.0.28-debian-10-r15",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "BITNAMI_DEBUG",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mysql-1645559415",
                                                    "key": "mysql-root-password"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_DATABASE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "data",
                                            "mountPath": "/bitnami/mysql"
                                        },
                                        {
                                            "name": "config",
                                            "mountPath": "/opt/bitnami/mysql/conf/my.cnf",
                                            "subPath": "my.cnf"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "readinessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "startupProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 10
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 1001
                            },
                            "serviceAccount": "mysql-1645559415",
                            "serviceAccountName": "mysql-1645559415",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "mysql-1645559415"
                                    },
                                    "name": "config"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "type": "RollingUpdate"
                    },
                    "volumeClaimTemplates": [
                        {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/component": "primary",
                                    "app.kubernetes.io/instance": "mysql-1645559415",
                                    "app.kubernetes.io/name": "mysql"
                                },
                                "name": "data"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "8Gi"
                                    }
                                },
                                "volumeMode": "Filesystem"
                            },
                            "status": {
                                "phase": "Pending"
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gcp-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:gcp-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gcp-controller-manager",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:gcp-controller-manager",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gcp-controller-manager-combined",
                                "components.gke.io/component-version": "2.1.14",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gcp-controller-manager",
                            "resourceVersion": "94208521",
                            "uid": "63eb5dcd-14f6-40bf-a8f6-d469d2603fa2"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gcp-controller-manager"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:gcp-controller-manager"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gcp-controller-manager-combined",
                                "components.gke.io/component-version": "2.1.14",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gcp-controller-manager",
                            "resourceVersion": "94208520",
                            "uid": "c6780e20-2772-4a16-b880-97668a57fb0c"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "endpoints",
                                    "configmaps"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests",
                                    "certificatesigningrequests/approval",
                                    "certificatesigningrequests/status"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client",
                                    "kubernetes.io/kube-apiserver-client-kubelet",
                                    "kubernetes.io/kubelet-serving",
                                    "kubernetes.io/legacy-unknown",
                                    "pki.gke.io/istiod",
                                    "pki.gke.io/gke-oidc"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "verbs": [
                                    "approve",
                                    "sign"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:replication-controller",
                    "resourceVersion": "89",
                    "uid": "00e885bd-7596-40f3-8949-5ff6aa4035fb"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "list",
                            "patch",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-scheduler",
                    "resourceVersion": "55353001",
                    "uid": "2efb3f38-1875-474b-970a-0fa549d126e8"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resourceNames": [
                            "kube-scheduler"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "kube-scheduler"
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "bindings",
                            "pods/binding"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims",
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csinodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csidrivers"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csidrivers"
                        ],
                        "verbs": [
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csidrivers"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csistoragecapacities"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csistoragecapacities"
                        ],
                        "verbs": [
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csistoragecapacities"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-webhook-7bc799955b",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:24:57Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-webhook",
                        "pod-template-hash": "7bc799955b",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-webhook-7bc799955b",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-webhook",
                            "uid": "414bf445-a68a-4541-9cbd-3e8fdf85a52c"
                        }
                    ],
                    "resourceVersion": "96318078",
                    "uid": "ac15789d-8f41-4050-95e9-c6884bc6152f"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-webhook",
                            "pod-template-hash": "7bc799955b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "certificate": "9cd8f7096b002d194e6cd0e12b4b14c7  ca.crt"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-webhook",
                                "pod-template-hash": "7bc799955b",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-webhook",
                                    "image": "quay.io/armosec/k8s-ca-webhook-ubi:latest",
                                    "args": [
                                        "-tlsCertFile=/etc/webhook/certs/tls.crt",
                                        "-tlsKeyFile=/etc/webhook/certs/tls.key",
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "mutating-port",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_WEBHOOK_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_WEBHOOK_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_DASHBOARD_BACKEND",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "dashboard"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_LOGIN_SECRET_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_ORACLE_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "600Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "zip-download",
                                            "mountPath": "/cazips"
                                        },
                                        {
                                            "name": "ca-cluster-certificate",
                                            "readOnly": true,
                                            "mountPath": "/etc/webhook/certs"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "zip-download"
                                },
                                {
                                    "name": "ca-cluster-certificate",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-cluster-certificate"
                                    }
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:podsecuritypolicy:pdcsi-node-sa",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "gce:podsecuritypolicy:pdcsi-node-sa",
                    "namespace": "kube-system",
                    "resourceVersion": "55353599",
                    "uid": "501facdb-d564-4454-911c-d4e21e8f2ad6"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gce:podsecuritypolicy:privileged"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "pdcsi-node-sa",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mycluster",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "generation": 1,
                    "labels": {
                        "app.kubernetes.io/component": "database",
                        "app.kubernetes.io/created-by": "mysql-operator",
                        "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster",
                        "app.kubernetes.io/managed-by": "mysql-operator",
                        "app.kubernetes.io/name": "mysql-innodbcluster",
                        "mysql.oracle.com/cluster": "mycluster",
                        "tier": "mysql"
                    },
                    "name": "mycluster",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "mysql.oracle.com/v2alpha1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "InnoDBCluster",
                            "name": "mycluster",
                            "uid": "08fb6f3d-6ed6-4c18-9434-882da43f833e"
                        }
                    ],
                    "resourceVersion": "109544574",
                    "uid": "5c8ff35c-c98d-4a68-a04b-9c5539bef24e"
                },
                "spec": {
                    "podManagementPolicy": "OrderedReady",
                    "replicas": 3,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/component": "database",
                            "app.kubernetes.io/created-by": "mysql-operator",
                            "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-mysql-server",
                            "app.kubernetes.io/managed-by": "mysql-operator",
                            "app.kubernetes.io/name": "mysql-innodbcluster-mysql-server",
                            "component": "mysqld",
                            "mysql.oracle.com/cluster": "mycluster",
                            "tier": "mysql"
                        }
                    },
                    "serviceName": "mycluster-instances",
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/component": "database",
                                "app.kubernetes.io/created-by": "mysql-operator",
                                "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-mysql-server",
                                "app.kubernetes.io/managed-by": "mysql-operator",
                                "app.kubernetes.io/name": "mysql-innodbcluster-mysql-server",
                                "component": "mysqld",
                                "mysql.oracle.com/cluster": "mycluster",
                                "tier": "mysql"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "sidecar",
                                    "image": "mysql/mysql-operator:8.0.28-2.0.3",
                                    "command": [
                                        "mysqlsh",
                                        "--pym",
                                        "mysqloperator",
                                        "sidecar"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_UNIX_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "rundir",
                                            "mountPath": "/var/run/mysql"
                                        },
                                        {
                                            "name": "mycnfdata",
                                            "mountPath": "/etc/my.cnf.d",
                                            "subPath": "my.cnf.d"
                                        },
                                        {
                                            "name": "mycnfdata",
                                            "mountPath": "/etc/my.cnf",
                                            "subPath": "my.cnf"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                },
                                {
                                    "name": "mysql",
                                    "image": "mysql/mysql-server:8.0.28",
                                    "args": [
                                        "mysqld",
                                        "--user=mysql"
                                    ],
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlx",
                                            "containerPort": 33060,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "gr-xcom",
                                            "containerPort": 33061,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_UNIX_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "datadir",
                                            "mountPath": "/var/lib/mysql"
                                        },
                                        {
                                            "name": "rundir",
                                            "mountPath": "/var/run/mysql"
                                        },
                                        {
                                            "name": "mycnfdata",
                                            "mountPath": "/etc/my.cnf.d",
                                            "subPath": "my.cnf.d"
                                        },
                                        {
                                            "name": "mycnfdata",
                                            "mountPath": "/etc/my.cnf",
                                            "subPath": "my.cnf"
                                        },
                                        {
                                            "name": "initconfdir",
                                            "mountPath": "/livenessprobe.sh",
                                            "subPath": "livenessprobe.sh"
                                        },
                                        {
                                            "name": "initconfdir",
                                            "mountPath": "/readinessprobe.sh",
                                            "subPath": "readinessprobe.sh"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "exec": {
                                            "command": [
                                                "/livenessprobe.sh"
                                            ]
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 15,
                                        "successThreshold": 1,
                                        "failureThreshold": 10
                                    },
                                    "readinessProbe": {
                                        "exec": {
                                            "command": [
                                                "/readinessprobe.sh"
                                            ]
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 10000
                                    },
                                    "startupProbe": {
                                        "exec": {
                                            "command": [
                                                "/livenessprobe.sh",
                                                "8"
                                            ]
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 3,
                                        "successThreshold": 1,
                                        "failureThreshold": 10000
                                    },
                                    "lifecycle": {
                                        "preStop": {
                                            "exec": {
                                                "command": [
                                                    "sh",
                                                    "-c",
                                                    "sleep 20 \u0026\u0026 mysqladmin -ulocalroot shutdown"
                                                ]
                                            }
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "initContainers": [
                                {
                                    "command": [
                                        "mysqlsh",
                                        "--log-level=@INFO",
                                        "--pym",
                                        "mysqloperator",
                                        "init"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "image": "mysql/mysql-operator:8.0.28-2.0.3",
                                    "imagePullPolicy": "Always",
                                    "name": "initconf",
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/mnt/initconf",
                                            "name": "initconfdir",
                                            "readOnly": true
                                        },
                                        {
                                            "mountPath": "/var/lib/mysql",
                                            "name": "datadir"
                                        },
                                        {
                                            "mountPath": "/mnt/mycnfdata",
                                            "name": "mycnfdata"
                                        }
                                    ]
                                },
                                {
                                    "args": [
                                        "mysqld",
                                        "--user=mysql"
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_INITIALIZE_ONLY",
                                            "value": "1"
                                        },
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "key": "rootPassword",
                                                    "name": "mypwds"
                                                }
                                            }
                                        }
                                    ],
                                    "image": "mysql/mysql-server:8.0.28",
                                    "imagePullPolicy": "Always",
                                    "name": "initmysql",
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/var/lib/mysql",
                                            "name": "datadir"
                                        },
                                        {
                                            "mountPath": "/var/run/mysql",
                                            "name": "rundir"
                                        },
                                        {
                                            "mountPath": "/etc/my.cnf.d",
                                            "name": "mycnfdata",
                                            "subPath": "my.cnf.d"
                                        },
                                        {
                                            "mountPath": "/docker-entrypoint-initdb.d",
                                            "name": "mycnfdata",
                                            "subPath": "docker-entrypoint-initdb.d"
                                        },
                                        {
                                            "mountPath": "/etc/my.cnf",
                                            "name": "mycnfdata",
                                            "subPath": "my.cnf"
                                        }
                                    ]
                                }
                            ],
                            "readinessGates": [
                                {
                                    "conditionType": "mysql.oracle.com/configured"
                                },
                                {
                                    "conditionType": "mysql.oracle.com/ready"
                                }
                            ],
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "subdomain": "mycluster",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "emptyDir": {},
                                    "name": "mycnfdata"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "rundir"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 365,
                                        "name": "mycluster-initconf"
                                    },
                                    "name": "initconfdir"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "partition": 0
                        },
                        "type": "RollingUpdate"
                    },
                    "volumeClaimTemplates": [
                        {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "creationTimestamp": null,
                                "name": "datadir"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "2Gi"
                                    }
                                },
                                "volumeMode": "Filesystem"
                            },
                            "status": {
                                "phase": "Pending"
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-5fdcc659dc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "10",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-17T13:41:26Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "helm.sh/revision": "44",
                        "pod-template-hash": "5fdcc659dc",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-5fdcc659dc",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "108591141",
                    "uid": "aa651e20-e12d-4775-8b59-0281732a9e04"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "5fdcc659dc",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "helm.sh/revision": "44",
                                "pod-template-hash": "5fdcc659dc",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-operator/ReplicaSet/mysql-operator-869d4b4b8d",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:48:57Z",
                    "generation": 1,
                    "labels": {
                        "name": "mysql-operator",
                        "pod-template-hash": "869d4b4b8d"
                    },
                    "name": "mysql-operator-869d4b4b8d",
                    "namespace": "mysql-operator",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "mysql-operator",
                            "uid": "bd3f9b29-8add-4a4d-9fff-87a54f957d6e"
                        }
                    ],
                    "resourceVersion": "109544260",
                    "uid": "111fda5a-ff80-49a0-91b0-97ef8ea9de87"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "name": "mysql-operator",
                            "pod-template-hash": "869d4b4b8d"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "name": "mysql-operator",
                                "pod-template-hash": "869d4b4b8d"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql-operator",
                                    "image": "mysql/mysql-operator:8.0.28-2.0.3",
                                    "args": [
                                        "mysqlsh",
                                        "--log-level=@INFO",
                                        "--pym",
                                        "mysqloperator",
                                        "operator"
                                    ],
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "mysql-operator-sa",
                            "serviceAccountName": "mysql-operator-sa",
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/deprecation": "cloud-provider role is DEPRECATED in the concern of potential collisions and will be removed in 1.16. Do not use this role."
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "601",
                    "uid": "e437195c-f81a-4f52-83fb-97da0a64dd84"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "patch",
                            "update",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/gke-metrics-agent/rbac.authorization.k8s.io/v1//ClusterRole/gke-metrics-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gke-metrics-agent",
            "object": {
                "kind": "ServiceAccount",
                "name": "gke-metrics-agent",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gke-metrics-agent",
                            "resourceVersion": "438",
                            "uid": "9f42e101-701b-4e2a-ae01-573c4c1c0790"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "gke-metrics-agent"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "gke-metrics-agent",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gke-metrics-agent",
                            "resourceVersion": "437",
                            "uid": "d88dff96-817a-482d-891b-cd8a12a71a49"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resourceNames": [
                                    "gce.gke-metrics-agent"
                                ],
                                "resources": [
                                    "podsecuritypolicies"
                                ],
                                "verbs": [
                                    "use"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                    "resourceVersion": "63",
                    "uid": "670efe11-fca4-4ae1-911f-e5e11de9e35b"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests/selfnodeclient"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-controller-manager",
                    "resourceVersion": "59",
                    "uid": "7ba68f73-ba17-4620-8985-41d83975c64f"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resourceNames": [
                            "kube-controller-manager"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "kube-controller-manager"
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets",
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "namespaces",
                            "secrets",
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets",
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts/token"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-public/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "default",
                    "namespace": "kube-public",
                    "resourceVersion": "289",
                    "uid": "8a20f665-1370-4bc7-82bc-a58f32ff614f"
                },
                "secrets": [
                    {
                        "name": "default-token-rrfqt"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-5bc9c585cb",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "9",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-10T06:40:09Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "5bc9c585cb",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-5bc9c585cb",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "106479439",
                    "uid": "9cc648a5-b5e4-4f4c-97e1-05a67fca1383"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "5bc9c585cb",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "5bc9c585cb",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-vuln-scan-67bcccd874",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:24:59Z",
                    "generation": 2,
                    "labels": {
                        "app": "ca-vuln-scan",
                        "pod-template-hash": "67bcccd874",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan-67bcccd874",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-vuln-scan",
                            "uid": "ea32ecd9-cf72-4b05-8212-7e31737581d6"
                        }
                    ],
                    "resourceVersion": "57954148",
                    "uid": "6ef6cab0-6bf9-4e39-8284-b20cfeeee1ca"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-vuln-scan",
                            "pod-template-hash": "67bcccd874"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-vuln-scan",
                                "pod-template-hash": "67bcccd874",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1536Mi"
                                        },
                                        "requests": {
                                            "cpu": "500m",
                                            "memory": "1Gi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRole/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/npd-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:node-problem-detector",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "npd-binding",
                            "resourceVersion": "412",
                            "uid": "036c728c-b9c1-4df1-9cfb-82400dc628e8"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-problem-detector"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:node-problem-detector"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-problem-detector",
                            "resourceVersion": "54",
                            "uid": "917c9f1c-7079-4ced-b010-80ae6c92e4dc"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ],
                                "verbs": [
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:service-controller",
                    "resourceVersion": "93",
                    "uid": "1bb3cf9c-c592-4130-873a-83337b56e272"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/cart-redis",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:39Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "cart-redis"
                    },
                    "name": "cart-redis",
                    "namespace": "default",
                    "resourceVersion": "41559576",
                    "uid": "08468d4a-2d3e-4598-97ca-86ef9bbcd3a5"
                },
                "spec": {
                    "clusterIP": "10.40.1.41",
                    "clusterIPs": [
                        "10.40.1.41"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "redis-cart",
                            "port": 6379,
                            "protocol": "TCP",
                            "targetPort": 6379
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "cart-redis"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-56f46979df",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "6",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:53Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "46",
                        "pod-template-hash": "56f46979df",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-56f46979df",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "112886005",
                    "uid": "675e2d6a-6a7d-43b8-b1c4-f83fd189397c"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "56f46979df",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "46",
                                "pod-template-hash": "56f46979df",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-vqj9",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "6554085393570713506",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-vqj9\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-01-30T11:07:38Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "resourceVersion": "113528845",
                    "uid": "82e13fa8-4312-4c6a-8a68-209bf81b40a2"
                },
                "spec": {
                    "podCIDR": "10.36.4.0/24",
                    "podCIDRs": [
                        "10.36.4.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-vqj9"
                }
            }
        },
        {
            "resourceID": "/v1/default/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "default",
                    "resourceVersion": "277",
                    "uid": "321c267f-dcfb-4816-8a7e-be19a6f62c31"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-master-healthcheck/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-healthcheck/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-healthcheck",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:gke-master-healthcheck",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gke-master-healthcheck-rbac",
                                "components.gke.io/component-version": "1.0.2"
                            },
                            "creationTimestamp": "2021-07-29T02:29:47Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-master-healthcheck",
                            "resourceVersion": "10648234",
                            "uid": "154b92b8-5a6d-4b71-ba12-12120340cb04"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-master-healthcheck"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:gke-master-healthcheck"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gke-master-healthcheck-rbac",
                                "components.gke.io/component-version": "1.0.2"
                            },
                            "creationTimestamp": "2021-07-29T02:29:47Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-master-healthcheck",
                            "resourceVersion": "10648233",
                            "uid": "e1821d87-c591-4b9e-8ed6-1a6e90b3a1ee"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "componentstatuses"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/readyz"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/stackdriver:metadata-agent",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "stackdriver:metadata-agent",
                    "resourceVersion": "374",
                    "uid": "911ddfcd-ceb9-420e-97e5-c6f1265a8ebe"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "stackdriver:metadata-agent"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "metadata-agent",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/pdcsi-node-sa",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-node-sa",
                    "namespace": "kube-system",
                    "resourceVersion": "55353588",
                    "uid": "37f9cccf-ad29-41e1-b53c-2356fb0e7797"
                },
                "secrets": [
                    {
                        "name": "pdcsi-node-sa-token-mp98x"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/mysql-operator",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:56Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "mysql-operator"
                    },
                    "name": "mysql-operator",
                    "resourceVersion": "109544223",
                    "uid": "dfaa4219-745f-4f03-9eef-b5add0ebd049"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-vuln-scan",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "4"
                    },
                    "creationTimestamp": "2021-11-10T14:24:59Z",
                    "generation": 8,
                    "labels": {
                        "app": "ca-vuln-scan",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318036",
                    "uid": "ea32ecd9-cf72-4b05-8212-7e31737581d6"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-vuln-scan"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-vuln-scan",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1536Mi"
                                        },
                                        "requests": {
                                            "cpu": "500m",
                                            "memory": "1Gi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-oracle-54dfb75b4d",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:14Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-oracle",
                        "pod-template-hash": "54dfb75b4d",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-oracle-54dfb75b4d",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-oracle",
                            "uid": "6484c24a-d3c8-46fa-9a4d-5e2802e95767"
                        }
                    ],
                    "resourceVersion": "96318452",
                    "uid": "0ded84b8-1811-4328-9396-433993d3d6b7"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-oracle",
                            "pod-template-hash": "54dfb75b4d"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-oracle",
                                "pod-template-hash": "54dfb75b4d",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-oracle",
                                    "image": "quay.io/armosec/k8s-ca-oracle-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-oracle",
                                            "containerPort": 4000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_ORACLE_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfetmgzc",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "a0d66248-f614-4538-aff7-aeadebfeafd1"
                    },
                    "creationTimestamp": "2022-02-10T06:56:36Z",
                    "generateName": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1-",
                    "labels": {
                        "controller-uid": "a7dda6fe-e234-4a5e-8299-adf1fd2b0476",
                        "job-name": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1"
                    },
                    "name": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfetmgzc",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1",
                            "uid": "a7dda6fe-e234-4a5e-8299-adf1fd2b0476"
                        }
                    ],
                    "resourceVersion": "102364574",
                    "uid": "64d32d00-e774-4a15-8021-ce02f7a74ecd"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.143",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--enable-host-scan",
                                "--logger",
                                "debug",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-d2zvc",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-d2zvc",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-websocket-77fbb555b5-kgzn2",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:13Z",
                    "generateName": "ca-websocket-77fbb555b5-",
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "77fbb555b5",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-77fbb555b5-kgzn2",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-websocket-77fbb555b5",
                            "uid": "0c0f3a57-05ba-40c4-9234-889beb1868b7"
                        }
                    ],
                    "resourceVersion": "111262542",
                    "uid": "abcdc204-d5ed-4f14-99c0-870d6152f9c5"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-websocket",
                            "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "trigger-port",
                                    "containerPort": 4002,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "readiness-port",
                                    "containerPort": 8000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_USE_DOCKER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_VULN_SCAN_SCHEDULE",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_POSTURE_SCAN_SCHEDULE",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_DEBUG_SIGNER",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "1500m",
                                    "memory": "1000Mi"
                                },
                                "requests": {
                                    "cpu": "300m",
                                    "memory": "200Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "docker-socket-volume",
                                    "mountPath": "/var/run/docker.sock"
                                },
                                {
                                    "name": "ca-login",
                                    "readOnly": true,
                                    "mountPath": "/etc/credentials"
                                },
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-2z2ds",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/v1/readiness",
                                    "port": "readiness-port",
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/run/docker.sock",
                                "type": ""
                            },
                            "name": "docker-socket-volume"
                        },
                        {
                            "name": "ca-login",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "ca-login"
                            }
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-2z2ds",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "daemon-set-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:daemon-set-controller",
                            "resourceVersion": "113",
                            "uid": "56c1dc9e-be1d-4d61-8650-ae7e8ddb487b"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:daemon-set-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "daemon-set-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:daemon-set-controller",
                            "resourceVersion": "74",
                            "uid": "62bf147b-7839-47cc-9d69-c4b9b2d5480e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/binding"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape-recurring",
            "object": {
                "apiVersion": "batch/v1beta1",
                "kind": "CronJob",
                "metadata": {
                    "creationTimestamp": "2022-02-17T17:29:38Z",
                    "labels": {
                        "app": "armo-kubescape-recurring",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-recurring",
                    "namespace": "armo-system",
                    "resourceVersion": "112995783",
                    "uid": "9f43b386-3dc3-4616-a5de-4b922d04021c"
                },
                "spec": {
                    "concurrencyPolicy": "Allow",
                    "failedJobsHistoryLimit": 1,
                    "jobTemplate": {
                        "metadata": {
                            "creationTimestamp": null
                        },
                        "spec": {
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "armo.framework": "",
                                        "armo.jobid": "3d8035b4-18ca-42dc-955e-5c9a7631b9d9"
                                    },
                                    "creationTimestamp": null
                                },
                                "spec": {
                                    "automountServiceAccountToken": true,
                                    "containers": [
                                        {
                                            "name": "kubescape",
                                            "image": "quay.io/armosec/kubescape:v2.0.147",
                                            "command": [
                                                "kubescape"
                                            ],
                                            "args": [
                                                "scan",
                                                "--submit",
                                                "--logger",
                                                "debug",
                                                "--enable-host-scan",
                                                "--environment=dev"
                                            ],
                                            "env": [
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                                    "value": "XXXXXX"
                                                },
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                                    "value": "XXXXXX"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "500Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "name": "kubescape-config-volume",
                                                    "mountPath": "/root/.kubescape/config.json",
                                                    "subPath": "config.json"
                                                }
                                            ],
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "imagePullPolicy": "Always"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "OnFailure",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "serviceAccount": "armo-kubescape-service-account",
                                    "serviceAccountName": "armo-kubescape-service-account",
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "armo-kubescape-config"
                                            },
                                            "name": "kubescape-config-volume"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "schedule": "45 15 * * 1",
                    "successfulJobsHistoryLimit": 3,
                    "suspend": false
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-initializer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-initializer",
                    "resourceVersion": "558",
                    "uid": "4733bd6c-a679-4dfc-817e-d688ca54b3b3"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "migration.k8s.io"
                        ],
                        "resources": [
                            "storageversionmigrations"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                    "resourceVersion": "68",
                    "uid": "800fd02d-4a79-4670-876f-e0f36902c002"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kube-apiserver-client-kubelet"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:route-controller",
                    "resourceVersion": "130",
                    "uid": "9699e75d-b3e8-4e14-8946-6338e829dd4f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:route-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "route-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/cronjob-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "cronjob-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "172",
                    "uid": "e57f7b39-98a7-4fd6-ba03-0ae3de16f2b3"
                },
                "secrets": [
                    {
                        "name": "cronjob-controller-token-q6wsk"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-84b695fcd6",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "5",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-21T07:41:52Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "45",
                        "pod-template-hash": "84b695fcd6",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-84b695fcd6",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "112842370",
                    "uid": "55e28604-3bc5-460a-84c9-1dc429276b0e"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "84b695fcd6",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "45",
                                "pod-template-hash": "84b695fcd6",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-28T09:05:44Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d",
                    "namespace": "armo-system",
                    "resourceVersion": "112834971",
                    "uid": "e5600abb-5613-40fd-9cfb-6a2df2db06ac"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "e5600abb-5613-40fd-9cfb-6a2df2db06ac"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "test",
                                "armo.jobid": "e1c551d5-8da6-48dc-aa90-f8bde8e9d535"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "e5600abb-5613-40fd-9cfb-6a2df2db06ac",
                                "job-name": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.148",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "test",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-collector-78b6f8bbdd-cd4x2",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-28T12:50:12Z",
                    "generateName": "armo-collector-78b6f8bbdd-",
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "78b6f8bbdd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-78b6f8bbdd-cd4x2",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "armo-collector-78b6f8bbdd",
                            "uid": "e4125deb-ea0a-4e99-b4e1-0e3aa849100b"
                        }
                    ],
                    "resourceVersion": "113488965",
                    "uid": "17050f98-fb47-405f-a056-e010dbf15fa4"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "armo-collector",
                            "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                            "args": [
                                "-include-namespaces=armo-system",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "readiness-port",
                                    "containerPort": 8000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "accountGuid"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "PRINT_REPORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "40Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-rgh47",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/v1/readiness",
                                    "port": "readiness-port",
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-scanner-service-account",
                    "serviceAccountName": "armo-scanner-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-rgh47",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:basic-user/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:authenticated",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:basic-user",
                            "resourceVersion": "102",
                            "uid": "3fea45c3-4e7d-492e-a498-b8b48e7c4ea4"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:basic-user"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:authenticated"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:basic-user",
                            "resourceVersion": "44",
                            "uid": "605ba95e-b4aa-4f42-8d3b-239ddc8022ba"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "selfsubjectaccessreviews",
                                    "selfsubjectrulesreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "ephemeral-volume-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-11-16T07:45:06Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ephemeral-volume-controller",
                            "resourceVersion": "55353004",
                            "uid": "f6dc8dc8-b50e-4998-ae3c-d5eb2b60160c"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ephemeral-volume-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ephemeral-volume-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-11-16T07:45:05Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ephemeral-volume-controller",
                            "resourceVersion": "55353002",
                            "uid": "b396199d-5c0f-40a3-aa61-8279c0d1d3e5"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-proxy",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:kube-proxy",
                    "resourceVersion": "595",
                    "uid": "a4105161-0ad7-4319-a289-7f060b9da133"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-proxier"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kube-proxy",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/konnectivity-agent",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-11-02T02:33:45Z",
                    "generation": 10,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "konnectivity-agent"
                    },
                    "name": "konnectivity-agent",
                    "namespace": "kube-system",
                    "resourceVersion": "100755015",
                    "uid": "2831cf26-2dfe-4491-acaa-266f4dd8f26f"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 6,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.3.2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "konnectivity-agent",
                                    "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                                    "command": [
                                        "/proxy-agent"
                                    ],
                                    "args": [
                                        "--logtostderr=true",
                                        "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                        "--proxy-server-host=35.202.27.228",
                                        "--proxy-server-port=8132",
                                        "--health-server-port=8093",
                                        "--admin-server-port=8094",
                                        "--sync-interval=5s",
                                        "--probe-interval=5s",
                                        "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                        "--v=3"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 8093,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "30Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "30Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "konnectivity-agent-token",
                                            "mountPath": "/var/run/secrets/tokens"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8093,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 15,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 1000,
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent",
                            "serviceAccountName": "konnectivity-agent",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "key": "sandbox.gke.io/runtime",
                                    "operator": "Equal",
                                    "value": "gvisor"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "topologySpreadConstraints": [
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "topology.kubernetes.io/zone",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                },
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "kubernetes.io/hostname",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                }
                            ],
                            "volumes": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "projected": {
                                        "defaultMode": 420,
                                        "sources": [
                                            {
                                                "serviceAccountToken": {
                                                    "audience": "system:konnectivity-server",
                                                    "expirationSeconds": 3600,
                                                    "path": "konnectivity-agent-token"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-7dd6c777fc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "10",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-10T06:40:11Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "7dd6c777fc",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-7dd6c777fc",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "102530894",
                    "uid": "d7d60ad8-eaa8-48ef-8540-a259a08995b5"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "7dd6c777fc",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "7dd6c777fc",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:443",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:unauthenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:unauthenticated",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:public-info-viewer",
                            "resourceVersion": "103",
                            "uid": "9ccfba0d-1355-4267-8cf4-39b1acbe89b9"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:public-info-viewer"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:authenticated"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:unauthenticated"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:public-info-viewer",
                            "resourceVersion": "45",
                            "uid": "8d1a0e99-295d-452d-bd99-83e6103d1508"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/livez",
                                    "/readyz",
                                    "/version",
                                    "/version/"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1/armo-system/RoleBinding/armo-scanner-service-account-role-binding",
            "object": {
                "kind": "ServiceAccount",
                "name": "armo-scanner-service-account",
                "namespace": "armo-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2021-12-09T15:04:49Z",
                            "labels": {
                                "app": "armo-vuln-scanner",
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:meta.helm.sh/release-name": {},
                                                "f:meta.helm.sh/release-namespace": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app": {},
                                                "f:app.kubernetes.io/managed-by": {}
                                            }
                                        },
                                        "f:rules": {}
                                    },
                                    "manager": "Go-http-client",
                                    "operation": "Update",
                                    "time": "2021-12-09T15:04:49Z"
                                }
                            ],
                            "name": "armo-scanner-service-account-roles",
                            "resourceVersion": "67723554",
                            "uid": "c98b90b9-fe8f-4806-8ffa-bb73ee8e52ab"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list",
                                    "describe"
                                ]
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2022-01-20T13:36:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:meta.helm.sh/release-name": {},
                                                "f:meta.helm.sh/release-namespace": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/managed-by": {}
                                            }
                                        },
                                        "f:roleRef": {
                                            "f:apiGroup": {},
                                            "f:kind": {},
                                            "f:name": {}
                                        },
                                        "f:subjects": {}
                                    },
                                    "manager": "Go-http-client",
                                    "operation": "Update",
                                    "time": "2022-01-20T13:36:49Z"
                                }
                            ],
                            "name": "armo-scanner-service-account-role-binding",
                            "namespace": "armo-system",
                            "resourceVersion": "91066522",
                            "uid": "34792212-f18c-465e-a4a1-2d89e1332e99"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "armo-scanner-service-account-roles"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "armo-scanner-service-account",
                                "namespace": "armo-system"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/gce:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:cloud-provider",
                    "resourceVersion": "600",
                    "uid": "c70c0d34-36e6-481e-b431-be93ac3f44cf"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/master-monitoring-role-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:03Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "master-monitoring-role-binding",
                    "resourceVersion": "113529488",
                    "uid": "02006feb-562f-471f-8d1f-2e6c88f7c767"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:master-monitoring-role"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:master-prom-to-sd-monitor"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:kube-dns-autoscaler",
                    "resourceVersion": "425",
                    "uid": "8fd03d1e-b252-4a53-95d4-77db30e7ed3f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:kube-dns-autoscaler"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kube-dns-autoscaler",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-oracle",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:14Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-oracle",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-oracle",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318453",
                    "uid": "6484c24a-d3c8-46fa-9a4d-5e2802e95767"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-oracle"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-oracle",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-oracle",
                                    "image": "quay.io/armosec/k8s-ca-oracle-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-oracle",
                                            "containerPort": 4000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_ORACLE_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-78b6f8bbdd",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "14",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T12:50:12Z",
                    "generation": 1,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "78b6f8bbdd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-78b6f8bbdd",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "113488966",
                    "uid": "e4125deb-ea0a-4e99-b4e1-0e3aa849100b"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "78b6f8bbdd",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "pod-template-hash": "78b6f8bbdd",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-controller-manager",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::extension-apiserver-authentication-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "146",
                            "uid": "c356dff8-2d34-422d-9868-b49639d568dd"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "extension-apiserver-authentication-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-controller-manager"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "extension-apiserver-authentication-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "139",
                            "uid": "37c07cf8-13cd-4768-988a-1e30a2e211be"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "extension-apiserver-authentication"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:aggregate-to-view",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults",
                        "rbac.authorization.k8s.io/aggregate-to-view": "true"
                    },
                    "name": "system:aggregate-to-view",
                    "resourceVersion": "51",
                    "uid": "45eace7f-09cd-4d84-ba46-e5e49c1ade18"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "persistentvolumeclaims/status",
                            "pods",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "serviceaccounts",
                            "services",
                            "services/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "bindings",
                            "events",
                            "limitranges",
                            "namespaces/status",
                            "pods/log",
                            "pods/status",
                            "replicationcontrollers/status",
                            "resourcequotas",
                            "resourcequotas/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions",
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "statefulsets",
                            "statefulsets/scale",
                            "statefulsets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers",
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "cronjobs/status",
                            "jobs",
                            "jobs/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets",
                            "poddisruptionbudgets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-dns",
                    "resourceVersion": "106",
                    "uid": "e2eee54d-7511-47d8-8fce-d316b734ebb1"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:kube-dns"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kube-dns",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/attachdetach-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:38Z",
                    "name": "attachdetach-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "203",
                    "uid": "0ac76ebe-a77c-4975-a8d7-32dc4840cb7f"
                },
                "secrets": [
                    {
                        "name": "attachdetach-controller-token-zrlqs"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-7855647bcd",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "14",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-17T13:41:27Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "helm.sh/revision": "44",
                        "pod-template-hash": "7855647bcd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-7855647bcd",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "108591014",
                    "uid": "0538db18-bfc5-47a5-aec3-42c1964537e3"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "7855647bcd",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "helm.sh/revision": "44",
                                "pod-template-hash": "7855647bcd",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-recurring-27434385-zvs96",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "3d8035b4-18ca-42dc-955e-5c9a7631b9d9"
                    },
                    "creationTimestamp": "2022-02-28T15:45:00Z",
                    "generateName": "armo-kubescape-recurring-27434385-",
                    "labels": {
                        "controller-uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120",
                        "job-name": "armo-kubescape-recurring-27434385"
                    },
                    "name": "armo-kubescape-recurring-27434385-zvs96",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-recurring-27434385",
                            "uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120"
                        }
                    ],
                    "resourceVersion": "112995779",
                    "uid": "76b46c4b-f7bf-4e5e-b638-a3b9098732f5"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-mcnlq",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-mcnlq",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/gce:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "599",
                    "uid": "65769975-d7ac-42ed-99cf-555022f53035"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "patch",
                            "update",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-audit",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "cluster_kind": "XXXXXX",
                    "config": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:25:04Z",
                    "labels": {
                        "app": "ca-audit",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911127",
                    "uid": "548ff049-e4b6-41ef-81ba-a224e8af0282"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/replication-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "replication-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "224",
                    "uid": "cc2390ae-5cdb-42b2-8997-eae7061ec24d"
                },
                "secrets": [
                    {
                        "name": "replication-controller-token-f4nnk"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T13:54:22Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61",
                    "namespace": "armo-system",
                    "resourceVersion": "102529312",
                    "uid": "547eee4c-62cf-4907-9ddd-4825e463dc62"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "547eee4c-62cf-4907-9ddd-4825e463dc62"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "not-exists",
                                "armo.jobid": "1528ea73-fb86-47c8-8320-c618952f8b20"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "547eee4c-62cf-4907-9ddd-4825e463dc62",
                                "job-name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.146",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "not-exists",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/cyberarmor-system/ServiceAccount/ca-controller-service-account/rbac.authorization.k8s.io/v1//ClusterRole/ca-controller-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-controller-role-binding",
            "object": {
                "kind": "ServiceAccount",
                "name": "ca-controller-service-account",
                "namespace": "cyberarmor-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-11-10T14:24:47Z",
                            "labels": {
                                "app": "ca-controller-role-binding",
                                "tier": "cyberarmor-system-control-plane"
                            },
                            "name": "ca-controller-role-binding",
                            "resourceVersion": "52910956",
                            "uid": "97d7e867-1eee-47f6-b3d9-bea598950bfc"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "ca-controller-roles"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ca-controller-service-account",
                                "namespace": "cyberarmor-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-11-10T14:24:47Z",
                            "labels": {
                                "app": "ca-controller-roles",
                                "tier": "cyberarmor-system-control-plane"
                            },
                            "name": "ca-controller-roles",
                            "resourceVersion": "52910946",
                            "uid": "37d7d53d-5d32-48e9-a7fd-3ead5e2a7e37"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "pv-protection-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pv-protection-controller",
                            "resourceVersion": "137",
                            "uid": "9b762d93-b8a6-4a84-bde5-48e6d32ca994"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pv-protection-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pv-protection-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pv-protection-controller",
                            "resourceVersion": "98",
                            "uid": "4ccdee88-5c3e-4eff-8a0e-85c8bddc9ea0"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/prod-mysql",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2022-02-19T19:41:56Z",
                    "labels": {
                        "app": "mysql"
                    },
                    "name": "prod-mysql",
                    "namespace": "default",
                    "resourceVersion": "107750527",
                    "uid": "f16054c3-acd1-4cd6-a9dd-ba4a24ec0bb3"
                },
                "spec": {
                    "clusterIP": "10.40.14.31",
                    "clusterIPs": [
                        "10.40.14.31"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": 3306
                        }
                    ],
                    "selector": {
                        "app": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:replication-controller",
                    "resourceVersion": "128",
                    "uid": "e9045877-b5e4-4402-b32e-f144f9971db3"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:replication-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "replication-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/nvidia-gpu-device-plugin",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gpu-device-plugin",
                        "components.gke.io/component-version": "0.1.3",
                        "deprecated.daemonset.template.generation": "5"
                    },
                    "creationTimestamp": "2021-07-07T05:44:52Z",
                    "generation": 5,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "nvidia-gpu-device-plugin"
                    },
                    "name": "nvidia-gpu-device-plugin",
                    "namespace": "kube-system",
                    "resourceVersion": "94208524",
                    "uid": "1c06b552-2d64-4874-8785-de01ee3f0477"
                },
                "spec": {
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "nvidia-gpu-device-plugin"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gpu-device-plugin",
                                "components.gke.io/component-version": "0.1.3",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "nvidia-gpu-device-plugin"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "nodeAffinity": {
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                        "nodeSelectorTerms": [
                                            {
                                                "matchExpressions": [
                                                    {
                                                        "key": "cloud.google.com/gke-accelerator",
                                                        "operator": "Exists"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "containers": [
                                {
                                    "name": "nvidia-gpu-device-plugin",
                                    "image": "gcr.io/gke-release/nvidia-gpu-device-plugin@sha256:80a976aecbc2c4cd4bae934807474bcd6f36baed94d4c122a52f87c04152e060",
                                    "command": [
                                        "/usr/bin/nvidia-gpu-device-plugin",
                                        "-logtostderr",
                                        "--enable-container-gpu-metrics",
                                        "--enable-health-monitoring"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 2112,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "LD_LIBRARY_PATH",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "device-plugin",
                                            "mountPath": "/device-plugin"
                                        },
                                        {
                                            "name": "dev",
                                            "mountPath": "/dev"
                                        },
                                        {
                                            "name": "nvidia",
                                            "mountPath": "/usr/local/nvidia"
                                        },
                                        {
                                            "name": "pod-resources",
                                            "mountPath": "/var/lib/kubelet/pod-resources"
                                        },
                                        {
                                            "name": "proc",
                                            "mountPath": "/proc"
                                        },
                                        {
                                            "name": "nvidia-config",
                                            "mountPath": "/etc/nvidia"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "privileged": true
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/lib/kubelet/device-plugins",
                                        "type": ""
                                    },
                                    "name": "device-plugin"
                                },
                                {
                                    "hostPath": {
                                        "path": "/dev",
                                        "type": ""
                                    },
                                    "name": "dev"
                                },
                                {
                                    "hostPath": {
                                        "path": "/home/kubernetes/bin/nvidia",
                                        "type": "Directory"
                                    },
                                    "name": "nvidia"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/lib/kubelet/pod-resources",
                                        "type": ""
                                    },
                                    "name": "pod-resources"
                                },
                                {
                                    "hostPath": {
                                        "path": "/proc",
                                        "type": ""
                                    },
                                    "name": "proc"
                                },
                                {
                                    "hostPath": {
                                        "path": "/etc/nvidia",
                                        "type": ""
                                    },
                                    "name": "nvidia-config"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "maxSurge": 0,
                            "maxUnavailable": 1
                        },
                        "type": "RollingUpdate"
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-autoscaler-844c9d9448",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-07-29T02:29:45Z",
                    "generation": 1,
                    "labels": {
                        "k8s-app": "kube-dns-autoscaler",
                        "pod-template-hash": "844c9d9448"
                    },
                    "name": "kube-dns-autoscaler-844c9d9448",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns-autoscaler",
                            "uid": "e5a8c1ec-de11-4834-a4ad-e89c5b48b71f"
                        }
                    ],
                    "resourceVersion": "96317702",
                    "uid": "54a0c600-9198-46a8-a7f3-b008b6e1117f"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns-autoscaler",
                            "pod-template-hash": "844c9d9448"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns-autoscaler",
                                "pod-template-hash": "844c9d9448"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=kube-dns-autoscaler",
                                        "--target=Deployment/kube-dns",
                                        "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "20m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                },
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns-autoscaler",
                            "serviceAccountName": "kube-dns-autoscaler",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/l7-default-backend-66579f5d7",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "66579f5d7"
                    },
                    "name": "l7-default-backend-66579f5d7",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "l7-default-backend",
                            "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                        }
                    ],
                    "resourceVersion": "52905205",
                    "uid": "371c303a-dd1a-4139-9d59-a375d3b05672"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc",
                            "pod-template-hash": "66579f5d7"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc",
                                "pod-template-hash": "66579f5d7"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "k8s.gcr.io/networking/ingress-gce-404-server-with-metrics-amd64:v1.10.11",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Pod/mycluster-0",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kopf.zalando.org/on_pod_create": "{\"started\":\"2022-02-22T20:49:46.689779\",\"delayed\":\"2022-02-26T02:44:49.488826\",\"purpose\":\"create\",\"retries\":305,\"success\":false,\"failure\":false,\"message\":\"MySQL Error (1045): mysqlsh.connect_dba: Access denied for user 'mysqladmin'@'10.36.4.26' (using password: YES)\"}"
                    },
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "finalizers": [
                        "kopf.zalando.org/KopfFinalizerMarker"
                    ],
                    "generateName": "mycluster-",
                    "labels": {
                        "app.kubernetes.io/component": "database",
                        "app.kubernetes.io/created-by": "mysql-operator",
                        "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-mysql-server",
                        "app.kubernetes.io/managed-by": "mysql-operator",
                        "app.kubernetes.io/name": "mysql-innodbcluster-mysql-server",
                        "component": "mysqld",
                        "controller-revision-hash": "mycluster-68dbbff975",
                        "mysql.oracle.com/cluster": "mycluster",
                        "statefulset.kubernetes.io/pod-name": "mycluster-0",
                        "tier": "mysql"
                    },
                    "name": "mycluster-0",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "StatefulSet",
                            "name": "mycluster",
                            "uid": "5c8ff35c-c98d-4a68-a04b-9c5539bef24e"
                        }
                    ],
                    "resourceVersion": "111484426",
                    "uid": "4c8d1ec8-cee0-4208-a2a1-4e8f4f7ac85c"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "sidecar",
                            "image": "mysql/mysql-operator:8.0.28-2.0.3",
                            "command": [
                                "mysqlsh",
                                "--pym",
                                "mysqloperator",
                                "sidecar"
                            ],
                            "env": [
                                {
                                    "name": "MY_POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "MY_POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "MYSQL_UNIX_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "rundir",
                                    "mountPath": "/var/run/mysql"
                                },
                                {
                                    "name": "mycnfdata",
                                    "mountPath": "/etc/my.cnf.d",
                                    "subPath": "my.cnf.d"
                                },
                                {
                                    "name": "mycnfdata",
                                    "mountPath": "/etc/my.cnf",
                                    "subPath": "my.cnf"
                                },
                                {
                                    "name": "kube-api-access-k6wrd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        },
                        {
                            "name": "mysql",
                            "image": "mysql/mysql-server:8.0.28",
                            "args": [
                                "mysqld",
                                "--user=mysql"
                            ],
                            "ports": [
                                {
                                    "name": "mysql",
                                    "containerPort": 3306,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "mysqlx",
                                    "containerPort": 33060,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "gr-xcom",
                                    "containerPort": 33061,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "MYSQL_UNIX_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "datadir",
                                    "mountPath": "/var/lib/mysql"
                                },
                                {
                                    "name": "rundir",
                                    "mountPath": "/var/run/mysql"
                                },
                                {
                                    "name": "mycnfdata",
                                    "mountPath": "/etc/my.cnf.d",
                                    "subPath": "my.cnf.d"
                                },
                                {
                                    "name": "mycnfdata",
                                    "mountPath": "/etc/my.cnf",
                                    "subPath": "my.cnf"
                                },
                                {
                                    "name": "initconfdir",
                                    "mountPath": "/livenessprobe.sh",
                                    "subPath": "livenessprobe.sh"
                                },
                                {
                                    "name": "initconfdir",
                                    "mountPath": "/readinessprobe.sh",
                                    "subPath": "readinessprobe.sh"
                                },
                                {
                                    "name": "kube-api-access-k6wrd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        "/livenessprobe.sh"
                                    ]
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 1,
                                "periodSeconds": 15,
                                "successThreshold": 1,
                                "failureThreshold": 10
                            },
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        "/readinessprobe.sh"
                                    ]
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 10000
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        "/livenessprobe.sh",
                                        "8"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 3,
                                "successThreshold": 1,
                                "failureThreshold": 10000
                            },
                            "lifecycle": {
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            "sh",
                                            "-c",
                                            "sleep 20 \u0026\u0026 mysqladmin -ulocalroot shutdown"
                                        ]
                                    }
                                }
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostname": "mycluster-0",
                    "initContainers": [
                        {
                            "command": [
                                "mysqlsh",
                                "--log-level=@INFO",
                                "--pym",
                                "mysqloperator",
                                "init"
                            ],
                            "env": [
                                {
                                    "name": "MY_POD_NAME",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "MY_POD_NAMESPACE",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "image": "mysql/mysql-operator:8.0.28-2.0.3",
                            "imagePullPolicy": "Always",
                            "name": "initconf",
                            "resources": {},
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "volumeMounts": [
                                {
                                    "mountPath": "/mnt/initconf",
                                    "name": "initconfdir",
                                    "readOnly": true
                                },
                                {
                                    "mountPath": "/var/lib/mysql",
                                    "name": "datadir"
                                },
                                {
                                    "mountPath": "/mnt/mycnfdata",
                                    "name": "mycnfdata"
                                },
                                {
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                    "name": "kube-api-access-k6wrd",
                                    "readOnly": true
                                }
                            ]
                        },
                        {
                            "args": [
                                "mysqld",
                                "--user=mysql"
                            ],
                            "env": [
                                {
                                    "name": "MYSQL_INITIALIZE_ONLY",
                                    "value": "1"
                                },
                                {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "key": "rootPassword",
                                            "name": "mypwds"
                                        }
                                    }
                                }
                            ],
                            "image": "mysql/mysql-server:8.0.28",
                            "imagePullPolicy": "Always",
                            "name": "initmysql",
                            "resources": {},
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "volumeMounts": [
                                {
                                    "mountPath": "/var/lib/mysql",
                                    "name": "datadir"
                                },
                                {
                                    "mountPath": "/var/run/mysql",
                                    "name": "rundir"
                                },
                                {
                                    "mountPath": "/etc/my.cnf.d",
                                    "name": "mycnfdata",
                                    "subPath": "my.cnf.d"
                                },
                                {
                                    "mountPath": "/docker-entrypoint-initdb.d",
                                    "name": "mycnfdata",
                                    "subPath": "docker-entrypoint-initdb.d"
                                },
                                {
                                    "mountPath": "/etc/my.cnf",
                                    "name": "mycnfdata",
                                    "subPath": "my.cnf"
                                },
                                {
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                    "name": "kube-api-access-k6wrd",
                                    "readOnly": true
                                }
                            ]
                        }
                    ],
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "readinessGates": [
                        {
                            "conditionType": "mysql.oracle.com/configured"
                        },
                        {
                            "conditionType": "mysql.oracle.com/ready"
                        }
                    ],
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "subdomain": "mycluster-instances",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "datadir",
                            "persistentVolumeClaim": {
                                "claimName": "datadir-mycluster-0"
                            }
                        },
                        {
                            "emptyDir": {},
                            "name": "mycnfdata"
                        },
                        {
                            "emptyDir": {},
                            "name": "rundir"
                        },
                        {
                            "configMap": {
                                "defaultMode": 365,
                                "name": "mycluster-initconf"
                            },
                            "name": "initconfdir"
                        },
                        {
                            "name": "kube-api-access-k6wrd",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/snapshot-controller-leaderelection",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "snapshot-controller",
                        "components.gke.io/component-version": "0.5.6",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "snapshot-controller-leaderelection",
                    "namespace": "kube-system",
                    "resourceVersion": "94208539",
                    "uid": "99925ec0-f462-4658-83cf-712fbfbdd5ab"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "get",
                            "watch",
                            "list",
                            "delete",
                            "update",
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/konnectivity-agent-autoscaler-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ladder": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:42Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "EnsureExists",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-autoscaler-config",
                    "namespace": "kube-system",
                    "resourceVersion": "49475068",
                    "uid": "944aed46-69de-4b13-ac64-97b04f2c223e"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:kube-dns-autoscaler",
                    "resourceVersion": "424",
                    "uid": "47d2fdde-5b74-46c3-87aa-6c0b7904acfb"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "deployments/scale",
                            "replicasets/scale"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:node-problem-detector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node-problem-detector",
                    "resourceVersion": "54",
                    "uid": "917c9f1c-7079-4ced-b010-80ae6c92e4dc"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/status"
                        ],
                        "verbs": [
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-audit",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:25:05Z",
                    "labels": {
                        "app": "ca-audit",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911143",
                    "uid": "ba7901c6-07cb-4530-9119-72af3358c7be"
                },
                "spec": {
                    "clusterIP": "10.40.4.164",
                    "clusterIPs": [
                        "10.40.4.164"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 443
                        }
                    ],
                    "selector": {
                        "app": "ca-audit"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:glbc",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:controller:glbc",
                    "resourceVersion": "616",
                    "uid": "e1888ace-63b9-4fb3-8346-3228ea09ed0f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:glbc"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:controller:glbc"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/systest-ns-yza2/Deployment/demo-service-secret",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T10:52:57Z",
                    "generation": 1,
                    "labels": {
                        "app": "demo-service-secret"
                    },
                    "name": "demo-service-secret",
                    "namespace": "systest-ns-yza2",
                    "resourceVersion": "96317783",
                    "uid": "242c2e3e-c4a9-433c-ba1f-9a5846424e76"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "demo-service-secret"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "demo-service-secret"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "demo-service-secret",
                                    "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                                    "env": [
                                        {
                                            "name": "SECRET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "ARMO_TEST_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CAA_ENABLE_CRASH_REPORTER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "encrypted-credentials-volume",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "encrypted-credentials"
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/default/Service/order",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:26Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "order"
                    },
                    "name": "order",
                    "namespace": "default",
                    "resourceVersion": "41559461",
                    "uid": "9770abf1-e635-4a90-b2f8-5656aedd2590"
                },
                "spec": {
                    "clusterIP": "10.40.9.73",
                    "clusterIPs": [
                        "10.40.9.73"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-order",
                            "port": 6000,
                            "protocol": "TCP",
                            "targetPort": 6000
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "order"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:service-account-controller",
                    "resourceVersion": "131",
                    "uid": "ecd64c7c-f098-451c-a46e-71398ce4c9ca"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:service-account-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "service-account-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/kube-system",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:33Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "kube-system"
                    },
                    "name": "kube-system",
                    "resourceVersion": "4",
                    "uid": "c343d185-c8be-4754-b069-54ec85863143"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-f265193d-0995-4d3c-9d9e-cc1a7fb2",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-01-18T14:22:04Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-mitre-f265193d-0995-4d3c-9d9e-cc1a7fb2",
                    "namespace": "armo-system",
                    "resourceVersion": "89981431",
                    "uid": "463f71c7-4f25-41af-9b31-c701ac40fac5"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "463f71c7-4f25-41af-9b31-c701ac40fac5"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "MITRE",
                                "armo.jobid": "f265193d-0995-4d3c-9d9e-cc1a7fb2bb62"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "463f71c7-4f25-41af-9b31-c701ac40fac5",
                                "job-name": "armo-kubescape-on-demand-mitre-f265193d-0995-4d3c-9d9e-cc1a7fb2"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "MITRE",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape-recurring-4681143087714448482-nsa",
            "object": {
                "apiVersion": "batch/v1beta1",
                "kind": "CronJob",
                "metadata": {
                    "creationTimestamp": "2022-02-21T09:47:52Z",
                    "labels": {
                        "app": "armo-kubescape-recurring",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa",
                    "namespace": "armo-system",
                    "resourceVersion": "109427735",
                    "uid": "989af35e-5161-49be-aeab-eab2d2918235"
                },
                "spec": {
                    "concurrencyPolicy": "Allow",
                    "failedJobsHistoryLimit": 1,
                    "jobTemplate": {
                        "metadata": {
                            "creationTimestamp": null
                        },
                        "spec": {
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "armo.framework": "NSA",
                                        "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0",
                                        "armo.updatejobid": "e7b64b68-d97c-4e60-be9d-99111f25cd3d"
                                    },
                                    "creationTimestamp": null
                                },
                                "spec": {
                                    "automountServiceAccountToken": true,
                                    "containers": [
                                        {
                                            "name": "kubescape",
                                            "image": "quay.io/armosec/kubescape:v2.0.148",
                                            "command": [
                                                "kubescape"
                                            ],
                                            "args": [
                                                "scan",
                                                "framework",
                                                "NSA",
                                                "--submit",
                                                "--logger",
                                                "debug",
                                                "--enable-host-scan",
                                                "--environment=dev"
                                            ],
                                            "env": [
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                                    "value": "XXXXXX"
                                                },
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                                    "value": "XXXXXX"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "500Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "name": "kubescape-config-volume",
                                                    "mountPath": "/root/.kubescape/config.json",
                                                    "subPath": "config.json"
                                                }
                                            ],
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "imagePullPolicy": "Always"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "OnFailure",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "serviceAccount": "armo-kubescape-service-account",
                                    "serviceAccountName": "armo-kubescape-service-account",
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "armo-kubescape-config"
                                            },
                                            "name": "kubescape-config-volume"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "schedule": "3 3 3 3 *",
                    "successfulJobsHistoryLimit": 3,
                    "suspend": false
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:snapshot-controller/rbac.authorization.k8s.io/v1//ClusterRole/snapshot-controller-runner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/snapshot-controller-role",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:snapshot-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "snapshot-controller",
                                "components.gke.io/component-version": "0.5.6",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "snapshot-controller-role",
                            "resourceVersion": "94208537",
                            "uid": "20814a3c-5af3-44b2-9fbb-ad6fb23f31d3"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "snapshot-controller-runner"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:snapshot-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "snapshot-controller",
                                "components.gke.io/component-version": "0.5.6",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "snapshot-controller-runner",
                            "resourceVersion": "94208536",
                            "uid": "cc5cc8fd-d862-476f-9198-6c68894c2b14"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshots"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshots/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-attacher-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-attacher-role",
                    "resourceVersion": "55353589",
                    "uid": "a28c4e65-f336-414f-b797-dd04b1336ea9"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csinodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "volumeattachments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "volumeattachments/status"
                        ],
                        "verbs": [
                            "patch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kubestore-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "kubestore-collector-rbac-1.0.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:kubestore-collector",
                    "resourceVersion": "449",
                    "uid": "41a470b2-98a6-4e1e-b52c-5a34562d084b"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:kubestore-collector"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kubestore-collector"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-28T12:55:02Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429",
                    "namespace": "armo-system",
                    "resourceVersion": "112929727",
                    "uid": "cb8aa651-d568-4814-9355-73432d634768"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "cb8aa651-d568-4814-9355-73432d634768"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "418f87bb-95c2-4766-bc18-4bfbac102429"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "cb8aa651-d568-4814-9355-73432d634768",
                                "job-name": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:dev-v2.0.237",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--host-scan-yaml",
                                        "/root/.kubescape/host-sensor.yaml",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        },
                                        {
                                            "name": "host-sensor-definition",
                                            "mountPath": "/root/.kubescape/host-sensor.yaml",
                                            "subPath": "host-sensor-yaml"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "host-sensor-definition"
                                    },
                                    "name": "host-sensor-definition"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "replication-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:replication-controller",
                            "resourceVersion": "128",
                            "uid": "e9045877-b5e4-4402-b32e-f144f9971db3"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:replication-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "replication-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:replication-controller",
                            "resourceVersion": "89",
                            "uid": "00e885bd-7596-40f3-8949-5ff6aa4035fb"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-metrics-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-uas-metrics-reader",
                    "resourceVersion": "580",
                    "uid": "027a63a0-ee43-4e22-8d33-673e3deddc51"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "metrics.k8s.io"
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpointslice-controller",
                    "resourceVersion": "117",
                    "uid": "186c3508-0c6d-4384-af23-d8e70ab49748"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:endpointslice-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "endpointslice-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/persistent-volume-binder",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "persistent-volume-binder",
                    "namespace": "kube-system",
                    "resourceVersion": "177",
                    "uid": "c35041e0-41fc-46d1-b13e-9bf10618a1e5"
                },
                "secrets": [
                    {
                        "name": "persistent-volume-binder-token-qx84x"
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
            "object": {
                "kind": "ServiceAccount",
                "name": "generic-garbage-collector",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:generic-garbage-collector",
                            "resourceVersion": "120",
                            "uid": "54dbcba4-3c7d-41fc-b5c5-dce109b3d021"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:generic-garbage-collector"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "generic-garbage-collector",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:generic-garbage-collector",
                            "resourceVersion": "81",
                            "uid": "35280fc1-5c77-4424-951d-f8d99642dc67"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-controller-manager",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-controller-manager",
                            "namespace": "kube-system",
                            "resourceVersion": "147",
                            "uid": "152f1ec2-4ac2-4d35-9462-0c9b164c3d07"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system::leader-locking-kube-controller-manager"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-controller-manager"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-controller-manager",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-controller-manager",
                            "namespace": "kube-system",
                            "resourceVersion": "143",
                            "uid": "807aaba8-2ece-4768-b2c0-561886618061"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-controller-manager"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:node",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node",
                    "resourceVersion": "53",
                    "uid": "bd4612da-3a43-426c-96f0-47f489d4eb65"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "localsubjectaccessreviews",
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/eviction"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "secrets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims",
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "volumeattachments"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims/status"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts/token"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csidrivers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csinodes"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "node.k8s.io"
                        ],
                        "resources": [
                            "runtimeclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/systest-ns-tivl/Deployment/demo-service-secret",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T10:43:50Z",
                    "generation": 1,
                    "labels": {
                        "app": "demo-service-secret"
                    },
                    "name": "demo-service-secret",
                    "namespace": "systest-ns-tivl",
                    "resourceVersion": "96318256",
                    "uid": "1a030fc8-81f6-4fa3-b0e2-90e71fd24fb3"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "demo-service-secret"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "demo-service-secret"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "demo-service-secret",
                                    "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                                    "env": [
                                        {
                                            "name": "SECRET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "ARMO_TEST_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CAA_ENABLE_CRASH_REPORTER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "encrypted-credentials-volume",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "encrypted-credentials"
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-b5bbf996d",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "5",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-18T14:10:44Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "pod-template-hash": "b5bbf996d",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-b5bbf996d",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "91044536",
                    "uid": "797bd98a-20d1-48ba-b5fd-d5b4b84fa830"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "b5bbf996d",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "pod-template-hash": "b5bbf996d",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:latest",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c0vqtkv",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "eeeeee",
                        "armo.jobid": "6c7ef9a3-0d8d-4fda-99e6-c04ce79e66f2"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79-",
                    "labels": {
                        "controller-uid": "156064aa-9cd4-451f-aee0-f99c07626f8b",
                        "job-name": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79"
                    },
                    "name": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c0vqtkv",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79",
                            "uid": "156064aa-9cd4-451f-aee0-f99c07626f8b"
                        }
                    ],
                    "resourceVersion": "105912770",
                    "uid": "37405208-5d7f-409a-9803-81cc8ebb79b0"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "eeeeee",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-w25vv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-w25vv",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-6fsjf",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-01-30T11:07:41Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-6fsjf",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "96317577",
                    "uid": "2e539c7b-de54-4c3e-9622-64d3f295334a"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-xcp0"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-hlxcb",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-hlxcb",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-hlxcb",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-node-lease/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "kube-node-lease",
                    "resourceVersion": "293",
                    "uid": "9b0293f6-39a5-4b97-9b29-21c5d7203cac"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
            "object": {
                "kind": "ServiceAccount",
                "name": "bootstrap-signer",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-public",
                            "resourceVersion": "152",
                            "uid": "fa616426-234e-4da8-94ca-9f4dfa14fc9e"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:bootstrap-signer"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "bootstrap-signer",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-system",
                            "resourceVersion": "140",
                            "uid": "190838f4-8434-40f8-9998-8c0410325c53"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:expand-controller",
                    "resourceVersion": "80",
                    "uid": "f97264ad-d70f-42ed-8e86-4e07ee745e30"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "services"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-provisioner-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-controller-provisioner-binding",
                    "resourceVersion": "55353594",
                    "uid": "0d54b4e8-5046-48a5-a457-c9ad9b659e01"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "pdcsi-provisioner-role"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:pdcsi-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2022-02-22T19:49:39Z",
                    "name": "default",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520465",
                    "uid": "34af1efc-a206-49cc-b981-4994ce224241"
                },
                "secrets": [
                    {
                        "name": "default-token-wzjln"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-5ff5cbcb66",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "8",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-18T16:24:17Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "pod-template-hash": "5ff5cbcb66",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-5ff5cbcb66",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "91044446",
                    "uid": "4e10eff8-4065-4936-bb27-907885975dea"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "5ff5cbcb66",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "pod-template-hash": "5ff5cbcb66",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-rbac-58dc84f45-f6p42",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:15Z",
                    "generateName": "ca-rbac-58dc84f45-",
                    "labels": {
                        "app": "ca-rbac",
                        "pod-template-hash": "58dc84f45",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-rbac-58dc84f45-f6p42",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-rbac-58dc84f45",
                            "uid": "364483da-cda1-44d3-9fcf-c66e5603da53"
                        }
                    ],
                    "resourceVersion": "96318222",
                    "uid": "bb904a0a-7bc9-49fd-a1fd-ee4a7ee6cd61"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-rbac",
                            "image": "quay.io/armosec/k8s-ca-rbac-scanner-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverREST"
                                        }
                                    }
                                },
                                {
                                    "name": "S3_BUCKET",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "AWS_REGION",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "AWS_ACCESS_KEY_ID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "ca-rbac",
                                            "key": "keyid"
                                        }
                                    }
                                },
                                {
                                    "name": "AWS_SECRET_ACCESS_KEY",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "ca-rbac",
                                            "key": "keysecret"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "200m",
                                    "memory": "400Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "200Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-92xcq",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-92xcq",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pod-garbage-collector",
                    "resourceVersion": "87",
                    "uid": "5d6c4a43-b0e5-464b-a61c-bdd977069736"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "delete",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/cart",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:33Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "cart"
                    },
                    "name": "cart",
                    "namespace": "default",
                    "resourceVersion": "41559519",
                    "uid": "0e8dade6-098b-4d78-b0d4-9a506930679f"
                },
                "spec": {
                    "clusterIP": "10.40.7.171",
                    "clusterIPs": [
                        "10.40.7.171"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-cart",
                            "port": 5000,
                            "protocol": "TCP",
                            "targetPort": 5000
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "cart"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/mysql-operator-rolebinding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:56Z",
                    "name": "mysql-operator-rolebinding",
                    "resourceVersion": "109544209",
                    "uid": "f6e2d592-f8c3-42f5-8a1a-9835ee21f426"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "mysql-operator"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:serviceaccounts"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-ocimage-b596d666",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:03Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-ocimage",
                        "pod-template-hash": "b596d666",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-ocimage-b596d666",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-ocimage",
                            "uid": "02e7c434-c3b1-4fa2-902e-6bab151d8992"
                        }
                    ],
                    "resourceVersion": "96317888",
                    "uid": "49065e00-934b-4dbd-9e95-848bbd721734"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-ocimage",
                            "pod-template-hash": "b596d666"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-ocimage",
                                "pod-template-hash": "b596d666",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-ocimage",
                                    "image": "quay.io/armosec/k8s-ca-ocimage:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-ocimage-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-operator/Pod/mysql-operator-869d4b4b8d-hmclm",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:48:57Z",
                    "generateName": "mysql-operator-869d4b4b8d-",
                    "labels": {
                        "name": "mysql-operator",
                        "pod-template-hash": "869d4b4b8d"
                    },
                    "name": "mysql-operator-869d4b4b8d-hmclm",
                    "namespace": "mysql-operator",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "mysql-operator-869d4b4b8d",
                            "uid": "111fda5a-ff80-49a0-91b0-97ef8ea9de87"
                        }
                    ],
                    "resourceVersion": "109544259",
                    "uid": "3681458c-3b3c-4a88-bf1f-a2785b3acb66"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "mysql-operator",
                            "image": "mysql/mysql-operator:8.0.28-2.0.3",
                            "args": [
                                "mysqlsh",
                                "--log-level=@INFO",
                                "--pym",
                                "mysqloperator",
                                "operator"
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-mtj6k",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "mysql-operator-sa",
                    "serviceAccountName": "mysql-operator-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "kube-api-access-mtj6k",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/route-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:route-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "route-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:route-controller",
                            "resourceVersion": "130",
                            "uid": "9699e75d-b3e8-4e14-8946-6338e829dd4f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:route-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "route-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:route-controller",
                            "resourceVersion": "91",
                            "uid": "8501bc59-9fd2-42fc-a002-9c7593e795ff"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ],
                                "verbs": [
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-dns-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns-autoscaler",
            "object": {
                "kind": "ServiceAccount",
                "name": "kube-dns-autoscaler",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:kube-dns-autoscaler",
                            "resourceVersion": "425",
                            "uid": "8fd03d1e-b252-4a53-95d4-77db30e7ed3f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-dns-autoscaler"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-dns-autoscaler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:kube-dns-autoscaler",
                            "resourceVersion": "424",
                            "uid": "47d2fdde-5b74-46c3-87aa-6c0b7904acfb"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "deployments/scale",
                                    "replicasets/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/clusterrole-aggregation-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "clusterrole-aggregation-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "271",
                    "uid": "b63c3948-7ecf-4de6-a57c-be40045c0ed6"
                },
                "secrets": [
                    {
                        "name": "clusterrole-aggregation-controller-token-zks9j"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-rbac",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:01Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-rbac",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-rbac",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318224",
                    "uid": "da2af179-aa31-43c2-9cdb-77bc342d3a73"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-rbac"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-rbac",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-rbac",
                                    "image": "quay.io/armosec/k8s-ca-rbac-scanner-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "S3_BUCKET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "AWS_REGION",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "AWS_ACCESS_KEY_ID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "ca-rbac",
                                                    "key": "keyid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "AWS_SECRET_ACCESS_KEY",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "ca-rbac",
                                                    "key": "keysecret"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "200m",
                                            "memory": "400Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-67d66dd44f",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "8"
                    },
                    "creationTimestamp": "2021-11-22T15:09:42Z",
                    "generation": 2,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "67d66dd44f",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-67d66dd44f",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "58545206",
                    "uid": "78b32bbd-1ea3-4db7-bbfc-4538f7e04eb0"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "67d66dd44f"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "67d66dd44f",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/default/ConfigMap/catalog-initdb-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "seed.js": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-10-13T12:51:52Z",
                    "name": "catalog-initdb-config",
                    "namespace": "default",
                    "resourceVersion": "41559666",
                    "uid": "b937c072-a763-48ab-9438-dc1ed9ea4bd0"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-initializer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-initializer",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:storageversionmigrator",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-initializer",
                            "resourceVersion": "563",
                            "uid": "659989c2-b46f-4492-b613-7227a0962ddf"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "storage-version-migration-initializer"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:storageversionmigrator"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-initializer",
                            "resourceVersion": "558",
                            "uid": "4733bd6c-a679-4dfc-817e-d688ca54b3b3"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "migration.k8s.io"
                                ],
                                "resources": [
                                    "storageversionmigrations"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/snapshot-controller-runner",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "snapshot-controller",
                        "components.gke.io/component-version": "0.5.6",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "snapshot-controller-runner",
                    "resourceVersion": "94208536",
                    "uid": "cc5cc8fd-d862-476f-9198-6c68894c2b14"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "list",
                            "watch",
                            "create",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotcontents"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch",
                            "update",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshots"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshots/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Service/armo-notification-service",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-17T08:42:43Z",
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-notification-service",
                    "namespace": "armo-system",
                    "resourceVersion": "89296667",
                    "uid": "f667a208-7e26-4ff2-9fa0-9a963bb3d7a8"
                },
                "spec": {
                    "clusterIP": "10.40.8.59",
                    "clusterIPs": [
                        "10.40.8.59"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "websocket",
                            "port": 8001,
                            "protocol": "TCP",
                            "targetPort": 8001
                        },
                        {
                            "name": "http",
                            "port": 8002,
                            "protocol": "TCP",
                            "targetPort": 8002
                        }
                    ],
                    "selector": {
                        "app": "armo-notification-service"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/l7-default-backend-865b4c8f8b",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.13.8-gke.0",
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "3",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2021-11-16T07:46:28Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "865b4c8f8b"
                    },
                    "name": "l7-default-backend-865b4c8f8b",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "l7-default-backend",
                            "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                        }
                    ],
                    "resourceVersion": "94831376",
                    "uid": "8813bc6b-66f7-4a48-a53c-588f3abc564e"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc",
                            "pod-template-hash": "865b4c8f8b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.13.8-gke.0",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc",
                                "pod-template-hash": "865b4c8f8b"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "gcr.io/k8s-ingress-image-push/ingress-gce-404-server-with-metrics:v1.13.4",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "runAsUser": 1000,
                                        "runAsGroup": 1000,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/default/Pod/prod-mysql-7998c88786-5k7j9",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-19T19:41:56Z",
                    "generateName": "prod-mysql-7998c88786-",
                    "labels": {
                        "app": "mysql",
                        "pod-template-hash": "7998c88786"
                    },
                    "name": "prod-mysql-7998c88786-5k7j9",
                    "namespace": "default",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "prod-mysql-7998c88786",
                            "uid": "9cd126ef-2e7f-47e5-b599-31d38e089a99"
                        }
                    ],
                    "resourceVersion": "107750614",
                    "uid": "253bc0ad-13bf-4d86-a6db-e89ba5ac7e35"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "mysql",
                            "image": "mysql:5.6",
                            "ports": [
                                {
                                    "name": "mysql",
                                    "containerPort": 3306,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "prod-mysql-pass",
                                            "key": "password"
                                        }
                                    }
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "mysql-persistent-storage",
                                    "mountPath": "/var/lib/mysql"
                                },
                                {
                                    "name": "kube-api-access-skr9d",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "emptyDir": {},
                            "name": "mysql-persistent-storage"
                        },
                        {
                            "name": "kube-api-access-skr9d",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-69tpz",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-27T12:22:15Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-69tpz",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "96317854",
                    "uid": "8f0ed018-092b-4639-b61d-a8b66eaf6298"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-lhtjh",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-lhtjh",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/systest-ns-yza2/Pod/demo-service-secret-f87564df4-5n2nd",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:17Z",
                    "generateName": "demo-service-secret-f87564df4-",
                    "labels": {
                        "app": "demo-service-secret",
                        "pod-template-hash": "f87564df4"
                    },
                    "name": "demo-service-secret-f87564df4-5n2nd",
                    "namespace": "systest-ns-yza2",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "demo-service-secret-f87564df4",
                            "uid": "6b019c49-2efe-44ca-a1b0-1459815087bd"
                        }
                    ],
                    "resourceVersion": "96317781",
                    "uid": "a0aab030-ef9f-46c2-9d9f-35110b47aa8b"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "demo-service-secret",
                            "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                            "env": [
                                {
                                    "name": "SECRET",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "ARMO_TEST_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CAA_ENABLE_CRASH_REPORTER",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "mountPath": "/tmp"
                                },
                                {
                                    "name": "kube-api-access-plbl5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "encrypted-credentials-volume",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "encrypted-credentials"
                            }
                        },
                        {
                            "name": "kube-api-access-plbl5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:glbc",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.7-gke.0",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:controller:glbc",
                    "namespace": "kube-system",
                    "resourceVersion": "106360638",
                    "uid": "1318cafc-611c-4bc4-acd7-4596d1845a73"
                },
                "rules": null
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:namespace-controller",
                    "resourceVersion": "123",
                    "uid": "04e52878-1455-45f3-829c-00d4d7468c8c"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:namespace-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "namespace-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/endpointslicemirroring-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "endpointslicemirroring-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "214",
                    "uid": "c5978ab7-4f5e-4129-bd3a-0e7ad6a78eb7"
                },
                "secrets": [
                    {
                        "name": "endpointslicemirroring-controller-token-np6sn"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-posture-6c9645b685",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:11Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-posture",
                        "pod-template-hash": "6c9645b685",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-posture-6c9645b685",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-posture",
                            "uid": "987cba58-47a6-4e16-afec-219e4c13d9ee"
                        }
                    ],
                    "resourceVersion": "110639874",
                    "uid": "45bc8dc8-fb6e-4b64-8d72-b453766817fe"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-posture",
                            "pod-template-hash": "6c9645b685"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-posture",
                                "pod-template-hash": "6c9645b685",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-posture",
                                    "image": "quay.io/armosec/k8s-ca-posture-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_DASHBOARD_BACKEND",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "dashboard"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "ca-posture-score-config",
                                            "mountPath": "/resources/config"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "resourcesdict.json",
                                                "path": "resourcesdict.json"
                                            },
                                            {
                                                "key": "frameworkdict.json",
                                                "path": "frameworkdict.json"
                                            }
                                        ],
                                        "name": "ca-posture-score-config"
                                    },
                                    "name": "ca-posture-score-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-p7q9",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "ee60f254f0d17871427d5b3ad3bb8e79",
                        "kubernetes.io/config.mirror": "ee60f254f0d17871427d5b3ad3bb8e79",
                        "kubernetes.io/config.seen": "2022-01-30T11:07:35.372199301Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-01-30T11:07:39Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                            "uid": "02aaab1c-5183-4296-907d-5e53945e2200"
                        }
                    ],
                    "resourceVersion": "96317512",
                    "uid": "2f606683-043c-463d-8762-0f24e3850d4e"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/l7-default-backend-6654b9bccb",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.0-gke.1",
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "4",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-01-26T06:36:23Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "6654b9bccb"
                    },
                    "name": "l7-default-backend-6654b9bccb",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "l7-default-backend",
                            "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                        }
                    ],
                    "resourceVersion": "106360655",
                    "uid": "17ed95b1-52c0-4336-bdd5-6b125ed986a1"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc",
                            "pod-template-hash": "6654b9bccb"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.0-gke.1",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc",
                                "pod-template-hash": "6654b9bccb"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "gcr.io/k8s-ingress-image-push/ingress-gce-404-server-with-metrics:v1.13.4",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "runAsUser": 1000,
                                        "runAsGroup": 1000,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-11T11:22:37Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                    "namespace": "armo-system",
                    "resourceVersion": "103034258",
                    "uid": "b23bd888-3217-4cbb-98cb-e17798935219"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "b23bd888-3217-4cbb-98cb-e17798935219"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                "armo.jobid": "770c5a29-8010-43cd-958e-766182eec3bd"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "b23bd888-3217-4cbb-98cb-e17798935219",
                                "job-name": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-notification-server-85b7787fbc-h75wn",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:13Z",
                    "generateName": "ca-notification-server-85b7787fbc-",
                    "labels": {
                        "app": "ca-notification-server",
                        "pod-template-hash": "85b7787fbc",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-notification-server-85b7787fbc-h75wn",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-notification-server-85b7787fbc",
                            "uid": "f6fc28cf-3dc5-4638-9342-5af0f3fd3324"
                        }
                    ],
                    "resourceVersion": "96318127",
                    "uid": "1c95b139-5b59-4865-9307-b73090226ecf"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-notification-server",
                            "image": "quay.io/armosec/notification-server-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "websocket",
                                    "containerPort": 8001,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "rest-api",
                                    "containerPort": 8002,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                },
                                {
                                    "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "maserNotificationServer"
                                        }
                                    }
                                },
                                {
                                    "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-7jc27",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-7jc27",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-be-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "accountGuid": "XXXXXX",
                    "clusterData": "XXXXXX",
                    "clusterGUID": "XXXXXX",
                    "clusterName": "XXXXXX",
                    "dashboard": "XXXXXX",
                    "eventReceiverREST": "XXXXXX",
                    "eventReceiverWS": "XXXXXX",
                    "masterNotificationServer": "XXXXXX",
                    "portal": "XXXXXX",
                    "postman": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-be-config",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-be-config",
                    "namespace": "armo-system",
                    "resourceVersion": "89293148",
                    "uid": "3fe13154-5594-451f-83f2-1cdb5129abfa"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-dns/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
            "object": {
                "kind": "ServiceAccount",
                "name": "kube-dns",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-dns",
                            "resourceVersion": "106",
                            "uid": "e2eee54d-7511-47d8-8fce-d316b734ebb1"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-dns"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-dns",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-dns",
                            "resourceVersion": "60",
                            "uid": "e245c69d-15d7-4208-86ac-12e1eb6793fd"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
            "object": {
                "kind": "ServiceAccount",
                "name": "bootstrap-signer",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-public",
                            "resourceVersion": "152",
                            "uid": "fa616426-234e-4da8-94ca-9f4dfa14fc9e"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:bootstrap-signer"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "bootstrap-signer",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-public",
                            "resourceVersion": "145",
                            "uid": "b1035167-5d84-4895-a4aa-0b3f5f21d26d"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "cluster-info"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-notification-server-85b7787fbc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:12Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-notification-server",
                        "pod-template-hash": "85b7787fbc",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-notification-server-85b7787fbc",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-notification-server",
                            "uid": "f22e701d-5e4f-4354-afa7-d8f9d85c42b1"
                        }
                    ],
                    "resourceVersion": "96318128",
                    "uid": "f6fc28cf-3dc5-4638-9342-5af0f3fd3324"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-notification-server",
                            "pod-template-hash": "85b7787fbc"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-notification-server",
                                "pod-template-hash": "85b7787fbc",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-notification-server",
                                    "image": "quay.io/armosec/notification-server-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "maserNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mysql-1645559751",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "my.cnf": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559751",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:56:00Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559751",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109522948",
                    "uid": "43f090ab-0a54-4703-8ac2-9f11cdbc6b3d"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "clusterrole-aggregation-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:clusterrole-aggregation-controller",
                            "resourceVersion": "111",
                            "uid": "e580c380-1731-4e88-aeec-6355ee461f62"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:clusterrole-aggregation-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "clusterrole-aggregation-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:clusterrole-aggregation-controller",
                            "resourceVersion": "72",
                            "uid": "bfea84dc-24f4-4c2f-954f-5209cefb7cce"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "clusterroles"
                                ],
                                "verbs": [
                                    "escalate",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-common-webhooks/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-common-webhooks/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-common-webhooks",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:gke-common-webhooks",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gke-common-webhooks-rbac",
                                "components.gke.io/component-version": "1.1.2"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-common-webhooks",
                            "resourceVersion": "27262118",
                            "uid": "75ede26b-9978-4bc5-af3a-71f2440a75c6"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-common-webhooks"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:gke-common-webhooks"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "gke-common-webhooks-rbac",
                                "components.gke.io/component-version": "1.1.2"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-common-webhooks",
                            "resourceVersion": "27262117",
                            "uid": "542b6b41-110e-44f3-aede-c9ca39edbf77"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "nodes",
                                    "configmaps",
                                    "services",
                                    "ingress",
                                    "endpoint"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "admissionregistration.k8s.io"
                                ],
                                "resources": [
                                    "mutatingwebhookconfigurations",
                                    "validatingwebhookconfigurations"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "flowcontrol.apiserver.k8s.io"
                                ],
                                "resources": [
                                    "prioritylevelconfigurations"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "auto.gke.io"
                                ],
                                "resources": [
                                    "allowlistedworkloads"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "templates.gatekeeper.sh"
                                ],
                                "resources": [
                                    "constrainttemplates"
                                ],
                                "verbs": [
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
            "object": {
                "kind": "ServiceAccount",
                "name": "token-cleaner",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:token-cleaner",
                            "namespace": "kube-system",
                            "resourceVersion": "151",
                            "uid": "639c6c15-09d5-411b-875c-ae2a4c79b694"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:token-cleaner"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "token-cleaner",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:token-cleaner",
                            "namespace": "kube-system",
                            "resourceVersion": "142",
                            "uid": "f33290f4-9957-4bcc-bde8-f35fbc012167"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1//ClusterRole/gce:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:cloud-provider",
            "object": {
                "kind": "ServiceAccount",
                "name": "cloud-provider",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"gce:cloud-provider\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services/status\"],\"verbs\":[\"patch\",\"update\"]}]}\n"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:addonmanager.kubernetes.io/mode": {}
                                            }
                                        },
                                        "f:rules": {}
                                    },
                                    "manager": "kubectl",
                                    "operation": "Update",
                                    "time": "2021-07-07T05:45:02Z"
                                }
                            ],
                            "name": "gce:cloud-provider",
                            "resourceVersion": "600",
                            "uid": "c70c0d34-36e6-481e-b431-be93ac3f44cf"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"gce:cloud-provider\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"gce:cloud-provider\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"cloud-provider\",\"namespace\":\"kube-system\"}]}\n"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "managedFields": [
                                {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:addonmanager.kubernetes.io/mode": {}
                                            }
                                        },
                                        "f:roleRef": {
                                            "f:apiGroup": {},
                                            "f:kind": {},
                                            "f:name": {}
                                        },
                                        "f:subjects": {}
                                    },
                                    "manager": "kubectl",
                                    "operation": "Update",
                                    "time": "2021-07-07T05:45:02Z"
                                }
                            ],
                            "name": "gce:cloud-provider",
                            "namespace": "kube-system",
                            "resourceVersion": "597",
                            "uid": "73540b08-2e5a-496b-b386-1b9f3f7b3aa4"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "gce:cloud-provider"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cloud-provider",
                                "namespace": "kube-system"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:monitoring",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-29T02:28:25Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:monitoring",
                    "resourceVersion": "10647918",
                    "uid": "500f10f8-9481-49ea-bf62-62fa77544860"
                },
                "rules": [
                    {
                        "nonResourceURLs": [
                            "/healthz",
                            "/healthz/*",
                            "/livez",
                            "/livez/*",
                            "/metrics",
                            "/readyz",
                            "/readyz/*"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/default/Deployment/prod-mysql",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-19T19:41:56Z",
                    "generation": 1,
                    "labels": {
                        "app": "mysql"
                    },
                    "name": "prod-mysql",
                    "namespace": "default",
                    "resourceVersion": "107750618",
                    "uid": "2d19d2dd-ac42-4651-8cc5-57d66f592dc3"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "mysql"
                        }
                    },
                    "strategy": {
                        "type": "Recreate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "mysql"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "mysql:5.6",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "prod-mysql-pass",
                                                    "key": "password"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "mysql-persistent-storage",
                                            "mountPath": "/var/lib/mysql"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "emptyDir": {},
                                    "name": "mysql-persistent-storage"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-9688fc768",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "12",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-10T06:40:11Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "9688fc768",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-9688fc768",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "105770732",
                    "uid": "ce2caf54-ab60-46cf-9efb-357468c46d4a"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "9688fc768",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "9688fc768",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/konnectivity-agent-7c886949f5",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "6",
                        "deployment.kubernetes.io/max-replicas": "8",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-11-16T07:46:31Z",
                    "generation": 11,
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "konnectivity-agent",
                            "uid": "2831cf26-2dfe-4491-acaa-266f4dd8f26f"
                        }
                    ],
                    "resourceVersion": "100755014",
                    "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                },
                "spec": {
                    "replicas": 6,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent",
                            "pod-template-hash": "7c886949f5"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.3.2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent",
                                "pod-template-hash": "7c886949f5"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "konnectivity-agent",
                                    "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                                    "command": [
                                        "/proxy-agent"
                                    ],
                                    "args": [
                                        "--logtostderr=true",
                                        "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                        "--proxy-server-host=35.202.27.228",
                                        "--proxy-server-port=8132",
                                        "--health-server-port=8093",
                                        "--admin-server-port=8094",
                                        "--sync-interval=5s",
                                        "--probe-interval=5s",
                                        "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                        "--v=3"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 8093,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "30Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "30Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "konnectivity-agent-token",
                                            "mountPath": "/var/run/secrets/tokens"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8093,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 15,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 1000,
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent",
                            "serviceAccountName": "konnectivity-agent",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "key": "sandbox.gke.io/runtime",
                                    "operator": "Equal",
                                    "value": "gvisor"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "topologySpreadConstraints": [
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "topology.kubernetes.io/zone",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                },
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "kubernetes.io/hostname",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                }
                            ],
                            "volumes": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "projected": {
                                        "defaultMode": 420,
                                        "sources": [
                                            {
                                                "serviceAccountToken": {
                                                    "audience": "system:konnectivity-server",
                                                    "expirationSeconds": 3600,
                                                    "path": "konnectivity-agent-token"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/metrics-server-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "NannyConfiguration": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:53Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "EnsureExists",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metrics-server-config",
                    "namespace": "kube-system",
                    "resourceVersion": "305",
                    "uid": "65801d1a-2f5a-415c-b744-412806a940af"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet-bootstrap/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-bootstrap/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-certificate-bootstrap",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kubelet-bootstrap",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:54Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "kubelet-bootstrap-certificate-bootstrap",
                            "resourceVersion": "345",
                            "uid": "0d4da28b-9c2b-4c2a-83dc-4b61d568893a"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "gce:beta:kubelet-certificate-bootstrap"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kubelet-bootstrap"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:beta:kubelet-certificate-bootstrap",
                            "resourceVersion": "622",
                            "uid": "d8b389fd-e2a6-4605-896d-37ce98becba6"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/nodeclient"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "cronjob-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:cronjob-controller",
                            "resourceVersion": "112",
                            "uid": "75ae561a-76e7-4adb-b99f-dc0ecb74a3df"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:cronjob-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cronjob-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:cronjob-controller",
                            "resourceVersion": "73",
                            "uid": "f76fc010-1dd8-4b11-85b2-25c18fa393c2"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "delete",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "namespace-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:namespace-controller",
                            "resourceVersion": "123",
                            "uid": "04e52878-1455-45f3-829c-00d4d7468c8c"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:namespace-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "namespace-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:namespace-controller",
                            "resourceVersion": "84",
                            "uid": "ee248716-7893-4bdb-b2a4-46403497be93"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces/finalize",
                                    "namespaces/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/ingress-uid",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "provider-uid": "XXXXXX",
                    "uid": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:45:08Z",
                    "name": "ingress-uid",
                    "namespace": "kube-system",
                    "resourceVersion": "732",
                    "uid": "032ced26-0f57-4c57-ac38-b8d2149ae6f3"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-snapshotter-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-snapshotter-role",
                    "resourceVersion": "55353592",
                    "uid": "f388fb66-74c5-4b83-9d75-0924cdac135d"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "list",
                            "watch",
                            "create",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotcontents"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch",
                            "update",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotcontents/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/pos",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:35Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "pos"
                    },
                    "name": "pos",
                    "namespace": "default",
                    "resourceVersion": "41559542",
                    "uid": "1a449762-1941-4f2f-8148-5c71a2cb21b2"
                },
                "spec": {
                    "clusterIP": "10.40.13.62",
                    "clusterIPs": [
                        "10.40.13.62"
                    ],
                    "externalTrafficPolicy": "Cluster",
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-pos",
                            "nodePort": 30431,
                            "port": 7777,
                            "protocol": "TCP",
                            "targetPort": 7777
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "pos"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:persistent-volume-binder",
                    "resourceVersion": "125",
                    "uid": "2c5ac60b-6612-4c94-92d2-de6f43620608"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:persistent-volume-binder"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "persistent-volume-binder",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-7fcc6cc89b",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "0",
                        "deployment.kubernetes.io/max-replicas": "0",
                        "deployment.kubernetes.io/revision": "5",
                        "deployment.kubernetes.io/revision-history": "3"
                    },
                    "creationTimestamp": "2021-11-14T14:43:26Z",
                    "generation": 5,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "7fcc6cc89b",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-7fcc6cc89b",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "54625286",
                    "uid": "a4cb04cf-17a2-4245-b95f-cda6c0af9010"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "7fcc6cc89b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "7fcc6cc89b",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Never"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/nodelimit.config.common-webhooks.networking.gke.io",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                    "annotations": {
                        "common-webhooks.networking.gke.io/webhook-name": "nodelimit"
                    },
                    "creationTimestamp": "2021-07-07T05:45:12Z",
                    "generation": 1,
                    "labels": {
                        "networking.gke.io/common-webhooks": "true"
                    },
                    "name": "nodelimit.config.common-webhooks.networking.gke.io",
                    "resourceVersion": "55353189",
                    "uid": "d00a71b1-15cd-4c86-85d5-f808e7c90f8f"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lRQjRJcmN0NFVaS1huTHcvME9aWWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSbFpEZzJPVE5pWWkwME5UWmlMVFJsT1dFdE9UTTNaQzB3WlRsa09ESmhObVkwTUdRdwpIaGNOTWpFd056QTNNRFEwTWpFd1doY05Nall3TnpBMk1EVTBNakV3V2pBdk1TMHdLd1lEVlFRREV5UmxaRGcyCk9UTmlZaTAwTlRaaUxUUmxPV0V0T1RNM1pDMHdaVGxrT0RKaE5tWTBNR1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjNjMycnh0ekdWUDRJNzNJQXQzOVVBRkxKSGY2ckR2cXdKRDYrQlB6MwpKcHc4ZUt5clVISGdSTWJKNExUVE5XV000N2tDb1FDOVJUbzFJVGtVcS96a1dKY0pEL0swZWRRR004SitLZGYwCmgrUzJNTzEyNDRxTmlrNDlKcy92UldOWmNMZEJoaDlpWHpIenl6WDVzQnc4VEVpbkZtY1Y5dFdmTXJ5ZGlzSXoKSlRPdkhRVVhUNjJsR0hRbkZKbXIzYWhvS3lKY3FGbytsTER3bzdQbU5JaUhzMnZ1djRDTEJXV1FXOG1wcW9kYQpZZ2lncEJvYVQ5OHBTMmZZTXFGbUJGMkJxL0VyTWJPYnptYkoxdWlJcnhMa2NTS2NIbVI4ZWU4MXk3L1Qyb2R6CjI4UmYwdGJ6L21lckpZRE1iU1hkYkVzYUpsL3c5M3RCQ3puQ0FrOE9ZWGFoQWdNQkFBR2pRakJBTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmR4eG5HN1JUYWpoTgpHYXV4VHU0WFpDREMyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZEs4ZWg5dWo3TEJVQXhEbTdiNDl4azJuCkVqS2d2NXY5ZVUxUk5LOStHbFJvTjRiWmJLVHJqbjg4SE9sV0l5MjFGdldlVHgvdXpCenFub1V2Y3lxSk0velgKS2w0cGJOaENUd3dCQnR0WGtTcmwvcU9pSEVHcTJRbThjQ1BLL1QrNm5tU3RqZW1ZY09meVJtOVVJajBqS2RCego4WEZzQytIYXYzYkMrSjV1MlE1NGV3a3dhMUMzTk9lL2NFaDVpb3JjcXd0aEltOUQrS0wwYjRwVW1XMUhHdUUvCnhqclNDalFFK0U4QktodTNtUzZZUEk4S25CaDhrOE1PeXpGN0pMY3VaMHltcElFTUhaaEJ4aFlHN1Z5VjdZMG8KMkc3TEQ1SFZnazJ3QzdzMVNKQmdvdmZOb2YyOXJBYXlweWd2K1R3YitNTzV6YklhNHkxaWc4OG1tcnhtMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "url": "https://localhost:5443/webhook/nodelimit"
                        },
                        "failurePolicy": "Ignore",
                        "matchPolicy": "Exact",
                        "name": "nodelimit.common-webhooks.networking.gke.io",
                        "namespaceSelector": {},
                        "objectSelector": {},
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE"
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 30
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-recurring-27424305-95bk9",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "3d8035b4-18ca-42dc-955e-5c9a7631b9d9"
                    },
                    "creationTimestamp": "2022-02-21T15:45:00Z",
                    "generateName": "armo-kubescape-recurring-27424305-",
                    "labels": {
                        "controller-uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d",
                        "job-name": "armo-kubescape-recurring-27424305"
                    },
                    "name": "armo-kubescape-recurring-27424305-95bk9",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-recurring-27424305",
                            "uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d"
                        }
                    ],
                    "resourceVersion": "108818772",
                    "uid": "6149ef2d-0865-4e1f-a458-008b772c4e99"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-f5vkc",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-f5vkc",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/gke-common-webhook-heartbeat",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "1646145635710567577": "XXXXXX",
                    "1646145665700413486": "XXXXXX",
                    "1646145695702553187": "XXXXXX",
                    "1646145725699692189": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-11-16T07:45:08Z",
                    "name": "gke-common-webhook-heartbeat",
                    "namespace": "kube-system",
                    "resourceVersion": "113529534",
                    "uid": "c073a412-7672-4626-8191-41a294fe179f"
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-646b578964",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "7",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T11:04:46Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "47",
                        "pod-template-hash": "646b578964",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-646b578964",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "112927116",
                    "uid": "b4e21519-3467-4cff-a5e6-e76f405f8fd4"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "646b578964",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "47",
                                "pod-template-hash": "646b578964",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-audit-644dccb557",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:06Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-audit",
                        "pod-template-hash": "644dccb557",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit-644dccb557",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-audit",
                            "uid": "3861f968-6c03-428d-bf48-77683707bfb9"
                        }
                    ],
                    "resourceVersion": "96318430",
                    "uid": "6554a411-7d46-4f13-956d-f8cb6b4b00b5"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-audit",
                            "pod-template-hash": "644dccb557"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-audit",
                                "pod-template-hash": "644dccb557",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-audit",
                                    "image": "quay.io/armosec/k8s-ca-auditlog-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-audit-port",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CONFIG_FILES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SERVER_TYPE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "ca-audit",
                                                    "key": "cluster_kind"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "ca-audit",
                                            "readOnly": true,
                                            "mountPath": "/config"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-audit",
                            "serviceAccountName": "ca-audit",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "config",
                                                "path": "config.json"
                                            }
                                        ],
                                        "name": "ca-audit"
                                    },
                                    "name": "ca-audit"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-80xg",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "5ce379f53d4f8c36431e02b568314ff0",
                        "kubernetes.io/config.mirror": "5ce379f53d4f8c36431e02b568314ff0",
                        "kubernetes.io/config.seen": "2022-02-07T10:40:18.348440608Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-02-07T10:40:22Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                            "uid": "be56530b-2576-492f-bbb3-024714794254"
                        }
                    ],
                    "resourceVersion": "100755050",
                    "uid": "b056a213-a41b-4bd8-879d-3624a33aa13f"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/pdcsi-leaderelection",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-leaderelection",
                    "namespace": "kube-system",
                    "resourceVersion": "55353597",
                    "uid": "d5116119-c18f-4972-b8cd-250cf3aefab0"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "get",
                            "watch",
                            "list",
                            "delete",
                            "update",
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/Role/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/konnectivity-agent-cpha",
            "object": {
                "kind": "ServiceAccount",
                "name": "konnectivity-agent-cpha",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "konnectivity-agent-cpha",
                            "namespace": "kube-system",
                            "resourceVersion": "49475075",
                            "uid": "02be0ff3-066d-4319-8be7-ccf8490d39e3"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "konnectivity-agent-cpha"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "konnectivity-agent-cpha",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "konnectivity-agent-cpha",
                            "namespace": "kube-system",
                            "resourceVersion": "49475074",
                            "uid": "75059763-4e50-477f-ae19-c709106ce750"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:deployment-controller",
                    "resourceVersion": "75",
                    "uid": "f2fd77bf-5202-4e91-ac0c-7335ad533a14"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:root-ca-cert-publisher",
                    "resourceVersion": "99",
                    "uid": "19734c37-e12b-407a-976d-8a73dd7a2352"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/endpoint-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "endpoint-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "194",
                    "uid": "2aa62eaa-42d9-4f70-9af4-6b1c794e208d"
                },
                "secrets": [
                    {
                        "name": "endpoint-controller-token-mbn9s"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-b8d8bf846",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:24:54Z",
                    "generation": 2,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "b8d8bf846",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-b8d8bf846",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "54584136",
                    "uid": "05ef3037-a353-4457-9532-a9d7149bbd0e"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "b8d8bf846"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "b8d8bf846",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-kubescape-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-kubescape-service-account-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-kubescape-service-account-role-binding",
            "object": {
                "kind": "ServiceAccount",
                "name": "armo-kubescape-service-account",
                "namespace": "armo-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2021-12-09T15:04:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-kubescape-service-account-role-binding",
                            "resourceVersion": "67723556",
                            "uid": "485ebea9-2eee-4f8a-92a4-7ad7f6cb8053"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "armo-kubescape-service-account-roles"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "armo-kubescape-service-account",
                                "namespace": "armo-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2021-12-09T15:04:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-kubescape-service-account-roles",
                            "resourceVersion": "102375099",
                            "uid": "7928ce24-6cd9-45ee-b9b5-0ea7ab987dcc"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "describe",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "apps"
                                ],
                                "resources": [
                                    "namespaces",
                                    "daemonsets"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/flowcontrol-guardrails.config.common-webhooks.networking.gke.io",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                    "creationTimestamp": "2021-07-29T02:28:45Z",
                    "generation": 1,
                    "labels": {
                        "networking.gke.io/common-webhooks": "true"
                    },
                    "name": "flowcontrol-guardrails.config.common-webhooks.networking.gke.io",
                    "resourceVersion": "55353188",
                    "uid": "113dcb3e-b52f-4899-876d-c8aacb6c961e"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lRQjRJcmN0NFVaS1huTHcvME9aWWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSbFpEZzJPVE5pWWkwME5UWmlMVFJsT1dFdE9UTTNaQzB3WlRsa09ESmhObVkwTUdRdwpIaGNOTWpFd056QTNNRFEwTWpFd1doY05Nall3TnpBMk1EVTBNakV3V2pBdk1TMHdLd1lEVlFRREV5UmxaRGcyCk9UTmlZaTAwTlRaaUxUUmxPV0V0T1RNM1pDMHdaVGxrT0RKaE5tWTBNR1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjNjMycnh0ekdWUDRJNzNJQXQzOVVBRkxKSGY2ckR2cXdKRDYrQlB6MwpKcHc4ZUt5clVISGdSTWJKNExUVE5XV000N2tDb1FDOVJUbzFJVGtVcS96a1dKY0pEL0swZWRRR004SitLZGYwCmgrUzJNTzEyNDRxTmlrNDlKcy92UldOWmNMZEJoaDlpWHpIenl6WDVzQnc4VEVpbkZtY1Y5dFdmTXJ5ZGlzSXoKSlRPdkhRVVhUNjJsR0hRbkZKbXIzYWhvS3lKY3FGbytsTER3bzdQbU5JaUhzMnZ1djRDTEJXV1FXOG1wcW9kYQpZZ2lncEJvYVQ5OHBTMmZZTXFGbUJGMkJxL0VyTWJPYnptYkoxdWlJcnhMa2NTS2NIbVI4ZWU4MXk3L1Qyb2R6CjI4UmYwdGJ6L21lckpZRE1iU1hkYkVzYUpsL3c5M3RCQ3puQ0FrOE9ZWGFoQWdNQkFBR2pRakJBTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmR4eG5HN1JUYWpoTgpHYXV4VHU0WFpDREMyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZEs4ZWg5dWo3TEJVQXhEbTdiNDl4azJuCkVqS2d2NXY5ZVUxUk5LOStHbFJvTjRiWmJLVHJqbjg4SE9sV0l5MjFGdldlVHgvdXpCenFub1V2Y3lxSk0velgKS2w0cGJOaENUd3dCQnR0WGtTcmwvcU9pSEVHcTJRbThjQ1BLL1QrNm5tU3RqZW1ZY09meVJtOVVJajBqS2RCego4WEZzQytIYXYzYkMrSjV1MlE1NGV3a3dhMUMzTk9lL2NFaDVpb3JjcXd0aEltOUQrS0wwYjRwVW1XMUhHdUUvCnhqclNDalFFK0U4QktodTNtUzZZUEk4S25CaDhrOE1PeXpGN0pMY3VaMHltcElFTUhaaEJ4aFlHN1Z5VjdZMG8KMkc3TEQ1SFZnazJ3QzdzMVNKQmdvdmZOb2YyOXJBYXlweWd2K1R3YitNTzV6YklhNHkxaWc4OG1tcnhtMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "url": "https://localhost:5443/webhook/flowcontrol-guardrails"
                        },
                        "failurePolicy": "Ignore",
                        "matchPolicy": "Equivalent",
                        "name": "flowcontrol-guardrails.common-webhooks.networking.gke.io",
                        "namespaceSelector": {},
                        "objectSelector": {},
                        "rules": [
                            {
                                "apiGroups": [
                                    "flowcontrol.apiserver.k8s.io"
                                ],
                                "apiVersions": [
                                    "v1beta1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE",
                                    "DELETE"
                                ],
                                "resources": [
                                    "prioritylevelconfigurations",
                                    "flowschemas"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 10
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7wnmh",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "8fa99a92-3c44-4e5e-930c-8a4b23bb7d83"
                    },
                    "creationTimestamp": "2022-02-10T13:56:23Z",
                    "generateName": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83-",
                    "labels": {
                        "controller-uid": "1d7c5507-2e16-490e-beaf-0ca4fa21dcb5",
                        "job-name": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83"
                    },
                    "name": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7wnmh",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83",
                            "uid": "1d7c5507-2e16-490e-beaf-0ca4fa21dcb5"
                        }
                    ],
                    "resourceVersion": "102529568",
                    "uid": "cf20ad64-1863-432c-89bc-853142d8306c"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-xcvvr",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-xcvvr",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslice-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpointslice-controller",
                    "resourceVersion": "78",
                    "uid": "adf82ef3-b9b2-401d-bbae-a3e46c1cbdbb"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes",
                            "pods",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "discovery.k8s.io"
                        ],
                        "resources": [
                            "endpointslices"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-29T02:28:25Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:monitoring",
                    "resourceVersion": "10647920",
                    "uid": "d09f6ec3-e184-42a8-9c37-8763da0ab329"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:monitoring"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:monitoring"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e2cw7xp",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "qwe",
                        "armo.jobid": "6693003c-0d5a-4f91-9ecd-f85e24904364"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043-",
                    "labels": {
                        "controller-uid": "3624e1e1-78dd-4088-b006-d1863f50af24",
                        "job-name": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043"
                    },
                    "name": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e2cw7xp",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043",
                            "uid": "3624e1e1-78dd-4088-b006-d1863f50af24"
                        }
                    ],
                    "resourceVersion": "105912613",
                    "uid": "5aacda8f-4d8a-4248-9cb1-1a9c09e65b57"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "qwe",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-2chp5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-2chp5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-vuln-scan-944f4b7",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "3"
                    },
                    "creationTimestamp": "2021-11-21T11:00:12Z",
                    "generation": 5,
                    "labels": {
                        "app": "ca-vuln-scan",
                        "pod-template-hash": "944f4b7",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan-944f4b7",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-vuln-scan",
                            "uid": "ea32ecd9-cf72-4b05-8212-7e31737581d6"
                        }
                    ],
                    "resourceVersion": "58542600",
                    "uid": "120efc2e-9944-45ad-85cf-45f199f5cc68"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-vuln-scan",
                            "pod-template-hash": "944f4b7"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-vuln-scan",
                                "pod-template-hash": "944f4b7",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1536Mi"
                                        },
                                        "requests": {
                                            "cpu": "500m",
                                            "memory": "1Gi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/konnectivity-agent-cpha",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-cpha",
                    "resourceVersion": "49475070",
                    "uid": "0171dd85-b459-4b95-a2a0-144521e3f356"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslicemirroring-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpointslicemirroring-controller",
                    "resourceVersion": "79",
                    "uid": "55a458d0-a863-4ada-9e6e-014dc0f16d34"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "discovery.k8s.io"
                        ],
                        "resources": [
                            "endpointslices"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-common-webhooks",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gke-common-webhooks-rbac",
                        "components.gke.io/component-version": "1.1.2"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-common-webhooks",
                    "resourceVersion": "27262117",
                    "uid": "542b6b41-110e-44f3-aede-c9ca39edbf77"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "nodes",
                            "configmaps",
                            "services",
                            "ingress",
                            "endpoint"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "admissionregistration.k8s.io"
                        ],
                        "resources": [
                            "mutatingwebhookconfigurations",
                            "validatingwebhookconfigurations"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "flowcontrol.apiserver.k8s.io"
                        ],
                        "resources": [
                            "prioritylevelconfigurations"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "auto.gke.io"
                        ],
                        "resources": [
                            "allowlistedworkloads"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apiextensions.k8s.io"
                        ],
                        "resources": [
                            "customresourcedefinitions"
                        ],
                        "verbs": [
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            "templates.gatekeeper.sh"
                        ],
                        "resources": [
                            "constrainttemplates"
                        ],
                        "verbs": [
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "list",
                            "get",
                            "watch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mycluster",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "labels": {
                        "mysql.oracle.com/cluster": "mycluster",
                        "tier": "mysql"
                    },
                    "name": "mycluster",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "mysql.oracle.com/v2alpha1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "InnoDBCluster",
                            "name": "mycluster",
                            "uid": "08fb6f3d-6ed6-4c18-9434-882da43f833e"
                        }
                    ],
                    "resourceVersion": "109544577",
                    "uid": "61cede8c-8d21-49bb-be7d-daae21614014"
                },
                "spec": {
                    "clusterIP": "10.40.6.180",
                    "clusterIPs": [
                        "10.40.6.180"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 6446,
                            "protocol": "TCP",
                            "targetPort": 6446
                        },
                        {
                            "name": "mysqlx",
                            "port": 6448,
                            "protocol": "TCP",
                            "targetPort": 6448
                        },
                        {
                            "name": "mysql-ro",
                            "port": 6447,
                            "protocol": "TCP",
                            "targetPort": 6447
                        },
                        {
                            "name": "mysqlx-ro",
                            "port": 6449,
                            "protocol": "TCP",
                            "targetPort": 6449
                        }
                    ],
                    "selector": {
                        "component": "mysqlrouter",
                        "mysql.oracle.com/cluster": "mycluster",
                        "tier": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-user-npd-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kubelet-user-npd-binding",
                    "resourceVersion": "411",
                    "uid": "391cbe37-1f05-4452-b700-be2023913dcb"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-problem-detector"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kubelet"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:daemon-set-controller",
                    "resourceVersion": "113",
                    "uid": "56c1dc9e-be1d-4d61-8650-ae7e8ddb487b"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:daemon-set-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "daemon-set-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-notification-server",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:12Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-notification-server",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-notification-server",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318130",
                    "uid": "f22e701d-5e4f-4354-afa7-d8f9d85c42b1"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-notification-server"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-notification-server",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-notification-server",
                                    "image": "quay.io/armosec/notification-server-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "maserNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-recurring-4681143087714448482-nsa-27425639",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-22T13:59:00Z",
                    "labels": {
                        "controller-uid": "32104f87-4d84-4de6-9de0-510e6326df96",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa",
                            "uid": "989af35e-5161-49be-aeab-eab2d2918235"
                        }
                    ],
                    "resourceVersion": "109384096",
                    "uid": "32104f87-4d84-4de6-9de0-510e6326df96"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "32104f87-4d84-4de6-9de0-510e6326df96"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "NSA",
                                "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "32104f87-4d84-4de6-9de0-510e6326df96",
                                "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.148",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "NSA",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system::leader-locking-kube-scheduler",
                    "namespace": "kube-system",
                    "resourceVersion": "148",
                    "uid": "c781c0ba-74d9-4323-b344-85a57d4a2afa"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system::leader-locking-kube-scheduler"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-scheduler"
                    },
                    {
                        "kind": "ServiceAccount",
                        "name": "kube-scheduler",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-web-socket-6bb4d88cd6-jg25k",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-28T12:50:14Z",
                    "generateName": "armo-web-socket-6bb4d88cd6-",
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "6bb4d88cd6",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-6bb4d88cd6-jg25k",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "armo-web-socket-6bb4d88cd6",
                            "uid": "eb0fbc3b-004f-4f7a-a971-c0ac54d65c16"
                        }
                    ],
                    "resourceVersion": "112927254",
                    "uid": "a037d64d-9509-48be-967f-9e27c529eb6f"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "armo-web-socket",
                            "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "trigger-port",
                                    "containerPort": 4002,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "readiness-port",
                                    "containerPort": 8000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_NAMESPACE",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_VULN_SCAN_SCHEDULE",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_POSTURE_SCAN_SCHEDULE",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_SYSTEM_MODE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "300Mi"
                                },
                                "requests": {
                                    "cpu": "50m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-ktdfp",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/v1/readiness",
                                    "port": "readiness-port",
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-scanner-service-account",
                    "serviceAccountName": "armo-scanner-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-ktdfp",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kubelet",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "kubelet-bootstrap",
                            "resourceVersion": "624",
                            "uid": "652f7d7f-6d7b-4792-a2ef-d75e9684d315"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-bootstrapper"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kubelet"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-bootstrapper",
                            "resourceVersion": "56",
                            "uid": "b626aea2-e9e1-4e17-b32d-c047a823832e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:clustermetrics/rbac.authorization.k8s.io/v1//ClusterRole/system:clustermetrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:clustermetrics",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:clustermetrics",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "clustermetrics-rbac",
                                "components.gke.io/component-version": "1.4.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:clustermetrics",
                            "resourceVersion": "427",
                            "uid": "ef1de196-8e47-44bb-b491-ef8251b28ba7"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:clustermetrics"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:clustermetrics"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "clustermetrics-rbac",
                                "components.gke.io/component-version": "1.4.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:57Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:clustermetrics",
                            "resourceVersion": "426",
                            "uid": "08397185-b744-4f9c-8779-948002401e58"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "componentstatuses",
                                    "namespaces",
                                    "nodes",
                                    "pods",
                                    "resourcequotas"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "admissionregistration.k8s.io"
                                ],
                                "resources": [
                                    "mutatingwebhookconfigurations"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "deployments",
                                    "replicasets",
                                    "statefulsets",
                                    "daemonsets"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
            "object": {
                "kind": "ServiceAccount",
                "name": "kube-controller-manager",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-controller-manager",
                            "namespace": "kube-system",
                            "resourceVersion": "147",
                            "uid": "152f1ec2-4ac2-4d35-9462-0c9b164c3d07"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system::leader-locking-kube-controller-manager"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-controller-manager"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-controller-manager",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-controller-manager",
                            "namespace": "kube-system",
                            "resourceVersion": "143",
                            "uid": "807aaba8-2ece-4768-b2c0-561886618061"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-controller-manager"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:persistent-volume-provisioner",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:persistent-volume-provisioner",
                    "resourceVersion": "61",
                    "uid": "13751d8c-4bde-4f10-be64-d3084f761020"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mysql-1645559415-headless",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "mysql-1645559415",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:50:24Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559415-headless",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520761",
                    "uid": "ee005ae3-3d02-44a9-88a3-ae3d7f739086"
                },
                "spec": {
                    "clusterIP": "None",
                    "clusterIPs": [
                        "None"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": "mysql"
                        }
                    ],
                    "publishNotReadyAddresses": true,
                    "selector": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/name": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-collector",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "14",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-21T08:52:16Z",
                    "generation": 14,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector",
                    "namespace": "armo-system",
                    "resourceVersion": "113488967",
                    "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/l7-default-backend",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/revision": "5",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "generation": 5,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "glbc",
                        "kubernetes.io/cluster-service": "true",
                        "kubernetes.io/name": "GLBC"
                    },
                    "name": "l7-default-backend",
                    "namespace": "kube-system",
                    "resourceVersion": "106360656",
                    "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "gke.gcr.io/ingress-gce-404-server-with-metrics:v1.13.4",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "runAsUser": 1000,
                                        "runAsGroup": 1000,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kubescape-job-template",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "jobTemplate": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-17T08:33:40Z",
                    "labels": {
                        "app": "armo-be-config",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "kubescape-job-template",
                    "namespace": "armo-system",
                    "resourceVersion": "112885808",
                    "uid": "95cb35cd-7d66-451e-92af-6edeff9e2ac4"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1//ClusterRole/gce:cloud-provider/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:cloud-provider",
            "object": {
                "kind": "ServiceAccount",
                "name": "cloud-provider",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:cloud-provider",
                            "resourceVersion": "598",
                            "uid": "bc69f459-4482-4120-82b5-7acd39d43064"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "gce:cloud-provider"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cloud-provider",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:cloud-provider",
                            "resourceVersion": "600",
                            "uid": "c70c0d34-36e6-481e-b431-be93ac3f44cf"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/system:node-problem-detector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-user-npd-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kubelet",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "kubelet-user-npd-binding",
                            "resourceVersion": "411",
                            "uid": "391cbe37-1f05-4452-b700-be2023913dcb"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-problem-detector"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kubelet"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-problem-detector",
                            "resourceVersion": "54",
                            "uid": "917c9f1c-7079-4ced-b010-80ae6c92e4dc"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ],
                                "verbs": [
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:statefulset-controller",
                    "resourceVersion": "94",
                    "uid": "118f7137-3019-403d-83fa-5f00f5f2f7ac"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "create",
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/zipkin",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:43Z",
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "zipkin",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "name": "zipkin",
                    "namespace": "default",
                    "resourceVersion": "41559612",
                    "uid": "6cf80d1e-ec83-4eee-948c-68f1c0ffe912"
                },
                "spec": {
                    "clusterIP": "None",
                    "clusterIPs": [
                        "None"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "jaeger-collector-zipkin",
                            "port": 9411,
                            "protocol": "TCP",
                            "targetPort": 9411
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-operator/Deployment/mysql-operator",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:48:57Z",
                    "generation": 1,
                    "labels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/created-by": "mysql-operator",
                        "app.kubernetes.io/instance": "mysql-operator",
                        "app.kubernetes.io/managed-by": "mysql-operator",
                        "app.kubernetes.io/name": "mysql-operator",
                        "app.kubernetes.io/version": "8.0.28-2.0.3",
                        "version": "1.0"
                    },
                    "name": "mysql-operator",
                    "namespace": "mysql-operator",
                    "resourceVersion": "109544261",
                    "uid": "bd3f9b29-8add-4a4d-9fff-87a54f957d6e"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "name": "mysql-operator"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "name": "mysql-operator"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql-operator",
                                    "image": "mysql/mysql-operator:8.0.28-2.0.3",
                                    "args": [
                                        "mysqlsh",
                                        "--log-level=@INFO",
                                        "--pym",
                                        "mysqloperator",
                                        "operator"
                                    ],
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "mysql-operator-sa",
                            "serviceAccountName": "mysql-operator-sa",
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2022-02-22T19:49:39Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520461",
                    "uid": "f60cc2fa-fa2b-4990-9ae2-a4fb6a09cbf7"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/external-metrics-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/uas-hpa-external-metrics-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "uas-hpa-external-metrics-reader",
                            "resourceVersion": "577",
                            "uid": "17c228db-1510-4e05-bcf2-b61e9b5e8aba"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "external-metrics-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "external-metrics-reader",
                            "resourceVersion": "576",
                            "uid": "76c6196a-816b-4b0d-a4bf-6a12685b26a8"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "external.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-11-16T07:45:05Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ttl-after-finished-controller",
                    "resourceVersion": "55353003",
                    "uid": "403f79e3-dcec-458f-a8ae-03fe9f4b7457"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/metrics-server:system:auth-delegator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metrics-server:system:auth-delegator",
                    "resourceVersion": "386",
                    "uid": "02b2ad15-2f6f-4734-acdc-e92f5583d346"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:auth-delegator"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "metrics-server",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-968dbfc8",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "4",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-17T13:41:27Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "helm.sh/revision": "44",
                        "pod-template-hash": "968dbfc8",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-968dbfc8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "108591112",
                    "uid": "4b932d08-46e9-4484-ab5c-6af9626bf0b2"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "968dbfc8",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "helm.sh/revision": "44",
                                "pod-template-hash": "968dbfc8",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-vuln-scan-587b6df79-bhzfn",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-28T12:50:13Z",
                    "generateName": "armo-vuln-scan-587b6df79-",
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "587b6df79",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-587b6df79-bhzfn",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "armo-vuln-scan-587b6df79",
                            "uid": "36bb4829-c6f4-4f93-9c00-9427250ec89e"
                        }
                    ],
                    "resourceVersion": "112927091",
                    "uid": "ad3e5c55-8b42-4a2b-a332-a1fe5f6b7027"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "armo-vuln-scan",
                            "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:117",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "vuln-scan-port",
                                    "containerPort": 8080,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "OCIMAGE_URL",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "EVENT_RECEIVER_URL",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "1500m",
                                    "ephemeral-storage": "8Gi",
                                    "memory": "1000Mi"
                                },
                                "requests": {
                                    "cpu": "300m",
                                    "ephemeral-storage": "2Gi",
                                    "memory": "200Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-s9vlw",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-scanner-service-account",
                    "serviceAccountName": "armo-scanner-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-s9vlw",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:bootstrap-signer",
                    "namespace": "kube-public",
                    "resourceVersion": "145",
                    "uid": "b1035167-5d84-4895-a4aa-0b3f5f21d26d"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "cluster-info"
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "resourcequota-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:resourcequota-controller",
                            "resourceVersion": "129",
                            "uid": "09f26131-e22a-45e5-86cf-90625e5c90ce"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:resourcequota-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "resourcequota-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:resourcequota-controller",
                            "resourceVersion": "90",
                            "uid": "e0fa5c55-2fcd-4ac9-bd8a-50c54915e937"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "resourcequotas/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:kube-apiserver-client-approver",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                    "resourceVersion": "67",
                    "uid": "dd1df195-e13c-46e3-b2bc-9eace0dc77a1"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kube-apiserver-client"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-trigger",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-trigger",
                    "resourceVersion": "561",
                    "uid": "08ae39db-a8e9-4ec5-a1c3-b7415028a46f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "storage-version-migration-trigger"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:storageversionmigrator"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/cloud-provider",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "171",
                    "uid": "727b31f2-9b31-4060-9336-56c759038e5a"
                },
                "secrets": [
                    {
                        "name": "cloud-provider-token-485fr"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-587b6df79",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "18",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T12:50:13Z",
                    "generation": 1,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "587b6df79",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-587b6df79",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "112927092",
                    "uid": "36bb4829-c6f4-4f93-9c00-9427250ec89e"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "587b6df79",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "pod-template-hash": "587b6df79",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:117",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/ca-validate-cfg",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                    "creationTimestamp": "2021-11-10T14:25:17Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-validate-cfg",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-validate-cfg",
                    "resourceVersion": "55353187",
                    "uid": "0c2b56ca-e481-47d0-8235-10356c4d613d"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/validate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.validate.v1",
                        "namespaceSelector": {},
                        "objectSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.attach",
                                    "operator": "In",
                                    "values": [
                                        "true",
                                        "false"
                                    ]
                                }
                            ]
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "scope": "Namespaced"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 30
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-scan-scheduler",
            "object": {
                "apiVersion": "batch/v1beta1",
                "kind": "CronJob",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:50Z",
                    "labels": {
                        "app": "armo-scan-scheduler",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-scan-scheduler",
                    "namespace": "armo-system",
                    "resourceVersion": "113187436",
                    "uid": "b9150dc3-678a-4279-bd82-90da97902a0e"
                },
                "spec": {
                    "concurrencyPolicy": "Allow",
                    "failedJobsHistoryLimit": 1,
                    "jobTemplate": {
                        "metadata": {
                            "creationTimestamp": null
                        },
                        "spec": {
                            "template": {
                                "metadata": {
                                    "creationTimestamp": null
                                },
                                "spec": {
                                    "automountServiceAccountToken": false,
                                    "containers": [
                                        {
                                            "name": "armo-scan-scheduler",
                                            "image": "curlimages/curl:latest",
                                            "command": [
                                                "/bin/sh",
                                                "-c"
                                            ],
                                            "args": [
                                                "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                                            ],
                                            "resources": {},
                                            "volumeMounts": [
                                                {
                                                    "name": "armo-scan-scheduler-volume",
                                                    "readOnly": true,
                                                    "mountPath": "/home/curl_user/trigger-script.sh",
                                                    "subPath": "trigger-script.sh"
                                                }
                                            ],
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "imagePullPolicy": "IfNotPresent"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Never",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 511,
                                                "name": "armo-scan-scheduler-config"
                                            },
                                            "name": "armo-scan-scheduler-volume"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "schedule": "0 0 * * *",
                    "successfulJobsHistoryLimit": 3,
                    "suspend": false
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-attacher-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-attacher-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:pdcsi-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-controller-attacher-binding",
                            "resourceVersion": "55353593",
                            "uid": "e1ad4c52-ebab-46c8-bd93-9030dd027e87"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "pdcsi-attacher-role"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:pdcsi-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-attacher-role",
                            "resourceVersion": "55353589",
                            "uid": "a28c4e65-f336-414f-b797-dd04b1336ea9"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments/status"
                                ],
                                "verbs": [
                                    "patch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:resource-tracker/rbac.authorization.k8s.io/v1//ClusterRole/system:resource-tracker/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:resource-tracker",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:resource-tracker",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "resource-tracker-rbac-1.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:resource-tracker",
                            "resourceVersion": "497",
                            "uid": "29134a96-e0c3-4717-b748-88dcc94ee0dc"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:resource-tracker"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:resource-tracker"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "resource-tracker-rbac-1.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:resource-tracker",
                            "resourceVersion": "496",
                            "uid": "c22f87d9-8b97-4a34-a543-cecb8fcc4fa6"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "persistentvolumeclaims",
                                    "persistentvolumes",
                                    "pods",
                                    "services",
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/portforward"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pv-protection-controller",
                    "resourceVersion": "137",
                    "uid": "9b762d93-b8a6-4a84-bde5-48e6d32ca994"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:pv-protection-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "pv-protection-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/expand-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:38Z",
                    "name": "expand-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "206",
                    "uid": "6cb538d1-b553-464b-a520-38bbaf2cb766"
                },
                "secrets": [
                    {
                        "name": "expand-controller-token-4qdc8"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/metrics-server-auth-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metrics-server-auth-reader",
                    "namespace": "kube-system",
                    "resourceVersion": "388",
                    "uid": "25987c50-f2c2-4f60-9c3d-2c6689c55162"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "extension-apiserver-authentication-reader"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "metrics-server",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-recurring-4681143087714448482-nsa-27425638-4978z",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "NSA",
                        "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                    },
                    "creationTimestamp": "2022-02-22T13:58:00Z",
                    "generateName": "armo-kubescape-recurring-4681143087714448482-nsa-27425638-",
                    "labels": {
                        "controller-uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638-4978z",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638",
                            "uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a"
                        }
                    ],
                    "resourceVersion": "109383540",
                    "uid": "15560234-adf4-4c07-bf9e-96afb5c7cb1c"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.148",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "NSA",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-rmzkq",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-rmzkq",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Pod/prod-mysql-7998c88786-ts4s6",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:13:39Z",
                    "generateName": "prod-mysql-7998c88786-",
                    "labels": {
                        "app": "mysql",
                        "pod-template-hash": "7998c88786"
                    },
                    "name": "prod-mysql-7998c88786-ts4s6",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "prod-mysql-7998c88786",
                            "uid": "c1843b03-af51-4c92-a4b5-38f00c28102d"
                        }
                    ],
                    "resourceVersion": "109530139",
                    "uid": "f68f36ea-5ce6-450d-b1a8-467d9c432071"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "mysql",
                            "image": "mysql:5.6",
                            "ports": [
                                {
                                    "name": "mysql",
                                    "containerPort": 3306,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "prod-mysql-pass",
                                            "key": "password"
                                        }
                                    }
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "mysql-persistent-storage",
                                    "mountPath": "/var/lib/mysql"
                                },
                                {
                                    "name": "kube-api-access-glt96",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "emptyDir": {},
                            "name": "mysql-persistent-storage"
                        },
                        {
                            "name": "kube-api-access-glt96",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-controller",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-controller",
                            "resourceVersion": "573",
                            "uid": "b8ca8eb1-d5af-4c3e-9495-380db7510e58"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-controller"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-controller",
                            "resourceVersion": "572",
                            "uid": "6455b7e7-937e-404f-8b24-0092feffab04"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "vpa-recommender"
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "get",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "597",
                    "uid": "73540b08-2e5a-496b-b386-1b9f3f7b3aa4"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "gce:cloud-provider"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "cloud-provider",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/mysql-sidecar",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:55Z",
                    "name": "mysql-sidecar",
                    "resourceVersion": "109544207",
                    "uid": "9a7b7e23-11ec-48ea-ae14-d0894fc258ac"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets",
                            "configmaps",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "update",
                            "create",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            "mysql.oracle.com"
                        ],
                        "resources": [
                            "innodbclusters"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:master-monitoring-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:03Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:master-monitoring-role",
                    "resourceVersion": "113529487",
                    "uid": "0499a3d6-f2ad-4a65-b0eb-46bbc5949240"
                },
                "rules": [
                    {
                        "nonResourceURLs": [
                            "/metrics",
                            "/metrics/*"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:certificate-controller",
                    "resourceVersion": "135",
                    "uid": "b9a9cc6e-b602-4007-a95f-51b3024f2e2c"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:certificate-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "certificate-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:disruption-controller",
                    "resourceVersion": "115",
                    "uid": "a7fca892-36a0-4e3b-9e2a-eedfb772cba2"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:disruption-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "disruption-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:job-controller",
                    "resourceVersion": "122",
                    "uid": "ad0b5770-516a-49fe-a8da-708cff56490f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:job-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "job-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/pod-garbage-collector",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "pod-garbage-collector",
                    "namespace": "kube-system",
                    "resourceVersion": "182",
                    "uid": "890c912f-f241-4820-94b3-79a70be66682"
                },
                "secrets": [
                    {
                        "name": "pod-garbage-collector-token-vsfr5"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/statefulset-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "statefulset-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "226",
                    "uid": "f1fc1395-5b6a-4921-a5aa-4e8e34b39e20"
                },
                "secrets": [
                    {
                        "name": "statefulset-controller-token-484t6"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/pdcsi-leaderelection-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-leaderelection-binding",
                    "namespace": "kube-system",
                    "resourceVersion": "55353598",
                    "uid": "cda4c210-b15b-4a6a-857f-86b44af21416"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "pdcsi-leaderelection"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:pdcsi-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system::extension-apiserver-authentication-reader",
                    "namespace": "kube-system",
                    "resourceVersion": "146",
                    "uid": "c356dff8-2d34-422d-9868-b49639d568dd"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "extension-apiserver-authentication-reader"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-controller-manager"
                    },
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-scheduler"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:master-prom-to-sd-monitor/rbac.authorization.k8s.io/v1//ClusterRole/system:master-monitoring-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/master-monitoring-role-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:master-prom-to-sd-monitor",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:03Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "master-monitoring-role-binding",
                            "resourceVersion": "113529488",
                            "uid": "02006feb-562f-471f-8d1f-2e6c88f7c767"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:master-monitoring-role"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:master-prom-to-sd-monitor"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:03Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:master-monitoring-role",
                            "resourceVersion": "113529487",
                            "uid": "0499a3d6-f2ad-4a65-b0eb-46bbc5949240"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics",
                                    "/metrics/*"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-provisioner-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-provisioner-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:pdcsi-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-controller-provisioner-binding",
                            "resourceVersion": "55353594",
                            "uid": "0d54b4e8-5046-48a5-a457-c9ad9b659e01"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "pdcsi-provisioner-role"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:pdcsi-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-provisioner-role",
                            "resourceVersion": "55353590",
                            "uid": "025c4329-ba56-4af8-ac93-eb2039bfa1c8"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshots"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:certificate-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:certificate-controller",
                    "resourceVersion": "96",
                    "uid": "b79c64f1-b897-4f22-b3f7-085823fe5c2c"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests/approval",
                            "certificatesigningrequests/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kube-apiserver-client-kubelet"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kube-apiserver-client",
                            "kubernetes.io/kube-apiserver-client-kubelet",
                            "kubernetes.io/kubelet-serving",
                            "kubernetes.io/legacy-unknown"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "sign"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:basic-user",
                    "resourceVersion": "102",
                    "uid": "3fea45c3-4e7d-492e-a498-b8b48e7c4ea4"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:basic-user"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:authenticated"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:statefulset-controller",
                    "resourceVersion": "133",
                    "uid": "21a722b6-06ed-405e-85aa-fcd23a780c2e"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:statefulset-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "statefulset-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/event-exporter-sa",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "event-exporter",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "event-exporter-sa",
                    "namespace": "kube-system",
                    "resourceVersion": "349",
                    "uid": "7b0c94d2-84f5-43c0-aae2-b7dc59ba62fa"
                },
                "secrets": [
                    {
                        "name": "event-exporter-sa-token-44btl"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/pdcsi-node-windows",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deprecated.daemonset.template.generation": "3"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "generation": 3,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-node-windows",
                    "namespace": "kube-system",
                    "resourceVersion": "55353608",
                    "uid": "6485264f-cebc-4ecd-aa3e-124b1c911854"
                },
                "spec": {
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "csi-driver-registrar",
                                    "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                                    "args": [
                                        "--v=5",
                                        "--csi-address=unix://C:\\\\csi\\\\csi.sock",
                                        "--kubelet-registration-path=C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\pd.csi.storage.gke.io\\\\csi.sock"
                                    ],
                                    "env": [
                                        {
                                            "name": "KUBE_NODE_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "spec.nodeName"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "200Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "plugin-dir",
                                            "mountPath": "/csi"
                                        },
                                        {
                                            "name": "registration-dir",
                                            "mountPath": "/registration"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "gce-pd-driver",
                                    "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                                    "args": [
                                        "--v=5",
                                        "--endpoint=unix:/csi/csi.sock",
                                        "--run-controller-service=false"
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubelet-dir",
                                            "mountPath": "C:\\var\\lib\\kubelet",
                                            "mountPropagation": "None"
                                        },
                                        {
                                            "name": "plugin-dir",
                                            "mountPath": "C:\\csi"
                                        },
                                        {
                                            "name": "csi-proxy-disk-pipe",
                                            "mountPath": "\\\\.\\pipe\\csi-proxy-disk-v1beta2"
                                        },
                                        {
                                            "name": "csi-proxy-volume-pipe",
                                            "mountPath": "\\\\.\\pipe\\csi-proxy-volume-v1beta1"
                                        },
                                        {
                                            "name": "csi-proxy-filesystem-pipe",
                                            "mountPath": "\\\\.\\pipe\\csi-proxy-filesystem-v1beta1"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "windows"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "pdcsi-node-sa",
                            "serviceAccountName": "pdcsi-node-sa",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "\\\\.\\pipe\\csi-proxy-disk-v1beta2",
                                        "type": ""
                                    },
                                    "name": "csi-proxy-disk-pipe"
                                },
                                {
                                    "hostPath": {
                                        "path": "\\\\.\\pipe\\csi-proxy-volume-v1beta1",
                                        "type": ""
                                    },
                                    "name": "csi-proxy-volume-pipe"
                                },
                                {
                                    "hostPath": {
                                        "path": "\\\\.\\pipe\\csi-proxy-filesystem-v1beta1",
                                        "type": ""
                                    },
                                    "name": "csi-proxy-filesystem-pipe"
                                },
                                {
                                    "hostPath": {
                                        "path": "\\var\\lib\\kubelet\\plugins_registry",
                                        "type": "Directory"
                                    },
                                    "name": "registration-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "\\var\\lib\\kubelet",
                                        "type": "Directory"
                                    },
                                    "name": "kubelet-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io",
                                        "type": "DirectoryOrCreate"
                                    },
                                    "name": "plugin-dir"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "maxSurge": 0,
                            "maxUnavailable": "10%"
                        },
                        "type": "RollingUpdate"
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T06:53:27Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f",
                    "namespace": "armo-system",
                    "resourceVersion": "102363519",
                    "uid": "e766e3c2-b00b-4750-9336-80acf84b3eba"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "e766e3c2-b00b-4750-9336-80acf84b3eba"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "e766e3c2-b00b-4750-9336-80acf84b3eba",
                                "job-name": "armo-kubescape-on-demand--a2fbf4da-bc27-497e-8a4d-ab27ca0bc74f"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.143",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-jz77w",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-27T12:22:15Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-jz77w",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "96318030",
                    "uid": "bbef8ee3-de6a-4601-8f28-3393fdcee964"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-c42cp",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-c42cp",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/gke-metrics-agent",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gke-metrics-agent",
                    "resourceVersion": "438",
                    "uid": "9f42e101-701b-4e2a-ae01-573c4c1c0790"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gke-metrics-agent"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "gke-metrics-agent",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c4ts9jc",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "werwer",
                        "armo.jobid": "d0c905c1-9848-40ff-afc6-c409422db1f2"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422-",
                    "labels": {
                        "controller-uid": "24537315-a803-4db0-9a0e-5e62294f4318",
                        "job-name": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422"
                    },
                    "name": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c4ts9jc",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-werwer-d0c905c1-9848-40ff-afc6-c409422",
                            "uid": "24537315-a803-4db0-9a0e-5e62294f4318"
                        }
                    ],
                    "resourceVersion": "105912671",
                    "uid": "1ba72f7d-54d0-4bdf-bfff-7e4cffa6869d"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "werwer",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-k4ffx",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-k4ffx",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/metadata-agent-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "NannyConfiguration": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:52Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "EnsureExists",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metadata-agent-config",
                    "namespace": "kube-system",
                    "resourceVersion": "304",
                    "uid": "251e8702-b904-4d5b-9059-953f74978ceb"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:gke-master-resourcequota/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-resourcequota/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-resourcequota",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:gke-master-resourcequota",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "resourcequota-rbac-1.0.1"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-master-resourcequota",
                            "resourceVersion": "499",
                            "uid": "bf028702-5849-4072-a6fb-506e013800a7"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-master-resourcequota"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:gke-master-resourcequota"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "resourcequota-rbac-1.0.1"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-master-resourcequota",
                            "resourceVersion": "498",
                            "uid": "3014fae0-198f-4431-a63b-393de47bc05a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "resourcequotas"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:authenticated",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:discovery",
                            "resourceVersion": "101",
                            "uid": "5e43a6b1-75b2-4642-8de6-ee643300bea9"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:discovery"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:authenticated"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:discovery",
                            "resourceVersion": "43",
                            "uid": "3b70d23a-be70-4387-bceb-e8ad74b9ff36"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/api",
                                    "/api/*",
                                    "/apis",
                                    "/apis/*",
                                    "/healthz",
                                    "/livez",
                                    "/openapi",
                                    "/openapi/*",
                                    "/readyz",
                                    "/version",
                                    "/version/"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:discovery",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:discovery",
                    "resourceVersion": "43",
                    "uid": "3b70d23a-be70-4387-bceb-e8ad74b9ff36"
                },
                "rules": [
                    {
                        "nonResourceURLs": [
                            "/api",
                            "/api/*",
                            "/apis",
                            "/apis/*",
                            "/healthz",
                            "/livez",
                            "/openapi",
                            "/openapi/*",
                            "/readyz",
                            "/version",
                            "/version/"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-migrator-v2",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-migrator-v2",
                    "resourceVersion": "559",
                    "uid": "b4bd5564-6745-4540-a946-cdead61ec150"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "cluster-admin"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:storageversionmigrator"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-64966b589b",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "17",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T11:04:47Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "47",
                        "pod-template-hash": "64966b589b",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-64966b589b",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "112927098",
                    "uid": "5f7cc6ab-ca32-474d-9d10-c4859c258742"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "64966b589b",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "47",
                                "pod-template-hash": "64966b589b",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26ds4pfb",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "46d6e38e-9ba9-4323-8b8c-70eff26d3843"
                    },
                    "creationTimestamp": "2022-02-14T15:46:58Z",
                    "generateName": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843-",
                    "labels": {
                        "controller-uid": "88df8956-13df-4100-bae4-383249972bf4",
                        "job-name": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843"
                    },
                    "name": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26ds4pfb",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843",
                            "uid": "88df8956-13df-4100-bae4-383249972bf4"
                        }
                    ],
                    "resourceVersion": "104834119",
                    "uid": "45198af7-86d5-4131-b2e5-301369d58875"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-qr6kb",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-qr6kb",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-bljhb",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-02-07T10:40:21Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-bljhb",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "100755066",
                    "uid": "ddcccaa3-9ecb-4c3d-9d3f-a9a09c525dda"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-80xg"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-675v5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-675v5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-675v5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-resizer-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-controller-resizer-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:pdcsi-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-controller-resizer-binding",
                            "resourceVersion": "55353595",
                            "uid": "44285ab0-6384-4315-a337-ffb929434c70"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "pdcsi-resizer-role"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:pdcsi-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-resizer-role",
                            "resourceVersion": "55353591",
                            "uid": "42a82d15-cf82-4b2d-ae01-55a9353a746e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ],
                                "verbs": [
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metadata-agent/rbac.authorization.k8s.io/v1//ClusterRole/stackdriver:metadata-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/stackdriver:metadata-agent",
            "object": {
                "kind": "ServiceAccount",
                "name": "metadata-agent",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "stackdriver:metadata-agent",
                            "resourceVersion": "374",
                            "uid": "911ddfcd-ceb9-420e-97e5-c6f1265a8ebe"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "stackdriver:metadata-agent"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metadata-agent",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "stackdriver:metadata-agent",
                            "resourceVersion": "373",
                            "uid": "55df6789-82a7-4f60-b353-086ad88b9ad7"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "namespaces",
                                    "nodes",
                                    "pods",
                                    "replicationcontrollers",
                                    "services"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "jobs"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:glbc",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.7-gke.0",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:controller:glbc",
                    "resourceVersion": "106360639",
                    "uid": "b045bd54-2120-4927-b9ec-e25a655f18b7"
                },
                "rules": null
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-controller",
                    "resourceVersion": "573",
                    "uid": "b8ca8eb1-d5af-4c3e-9495-380db7510e58"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-controller"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-68f467b88f",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "4",
                        "deployment.kubernetes.io/revision-history": "2",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-21T10:26:03Z",
                    "generation": 4,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "pod-template-hash": "68f467b88f",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-68f467b88f",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "89977043",
                    "uid": "70f7ef99-4ec9-4d80-bb68-412c112d73dc"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "68f467b88f",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "pod-template-hash": "68f467b88f",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:latest",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/default/ReplicaSet/jaeger-6f6b5d8689",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "1",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-10-13T12:52:08Z",
                    "generation": 1,
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger",
                        "pod-template-hash": "6f6b5d8689"
                    },
                    "name": "jaeger-6f6b5d8689",
                    "namespace": "default",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "jaeger",
                            "uid": "39307a24-c846-4d64-bc2d-629db4188315"
                        }
                    ],
                    "resourceVersion": "96318390",
                    "uid": "4519409e-c423-4af8-ade4-1f90098f433b"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "jaeger",
                            "app.kubernetes.io/component": "all-in-one",
                            "app.kubernetes.io/name": "jaeger",
                            "pod-template-hash": "6f6b5d8689"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "prometheus.io/port": "16686",
                                "prometheus.io/scrape": "true"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app": "jaeger",
                                "app.kubernetes.io/component": "all-in-one",
                                "app.kubernetes.io/name": "jaeger",
                                "pod-template-hash": "6f6b5d8689"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "jaeger",
                                    "image": "jaegertracing/all-in-one",
                                    "ports": [
                                        {
                                            "containerPort": 5775,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 6831,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 6832,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 5778,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "containerPort": 16686,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "containerPort": 9411,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/",
                                            "port": 14269,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1/kube-system/Role/pdcsi-leaderelection/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/pdcsi-leaderelection-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:pdcsi-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-leaderelection-binding",
                            "namespace": "kube-system",
                            "resourceVersion": "55353598",
                            "uid": "cda4c210-b15b-4a6a-857f-86b44af21416"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "pdcsi-leaderelection"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:pdcsi-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-leaderelection",
                            "namespace": "kube-system",
                            "resourceVersion": "55353597",
                            "uid": "d5116119-c18f-4972-b8cd-250cf3aefab0"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list",
                                    "delete",
                                    "update",
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:volume-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-scheduler",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:volume-scheduler",
                            "resourceVersion": "108",
                            "uid": "e1316cf7-63dc-4f81-9bb9-36931de822b0"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:volume-scheduler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:volume-scheduler",
                            "resourceVersion": "64",
                            "uid": "a1da563a-84e8-4c89-8c79-4b3c0ea7e4ef"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ephemeral-volume-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-11-16T07:45:05Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ephemeral-volume-controller",
                    "resourceVersion": "55353002",
                    "uid": "b396199d-5c0f-40a3-aa61-8279c0d1d3e5"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:volume-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:volume-scheduler",
                    "resourceVersion": "64",
                    "uid": "a1da563a-84e8-4c89-8c79-4b3c0ea7e4ef"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/jaeger-query",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:44Z",
                    "finalizers": [
                        "service.kubernetes.io/load-balancer-cleanup"
                    ],
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "query",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "name": "jaeger-query",
                    "namespace": "default",
                    "resourceVersion": "52905994",
                    "uid": "3e21b9a9-2006-4a63-aee7-5972e0234a94"
                },
                "spec": {
                    "clusterIP": "10.40.6.168",
                    "clusterIPs": [
                        "10.40.6.168"
                    ],
                    "externalTrafficPolicy": "Cluster",
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "query-http",
                            "nodePort": 31497,
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 16686
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "sessionAffinity": "None",
                    "type": "LoadBalancer"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Service/default-http-backend",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "glbc",
                        "kubernetes.io/cluster-service": "true",
                        "kubernetes.io/name": "GLBCDefaultBackend"
                    },
                    "name": "default-http-backend",
                    "namespace": "kube-system",
                    "resourceVersion": "106360605",
                    "uid": "78ab01c8-1cf8-4f4c-906d-722728a7f638"
                },
                "spec": {
                    "clusterIP": "10.40.14.151",
                    "clusterIPs": [
                        "10.40.14.151"
                    ],
                    "externalTrafficPolicy": "Cluster",
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http",
                            "nodePort": 32096,
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 8080
                        }
                    ],
                    "selector": {
                        "k8s-app": "glbc"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-scan-scheduler-27432000",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-27T00:00:00Z",
                    "labels": {
                        "controller-uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0",
                        "job-name": "armo-scan-scheduler-27432000"
                    },
                    "name": "armo-scan-scheduler-27432000",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-scan-scheduler",
                            "uid": "b9150dc3-678a-4279-bd82-90da97902a0e"
                        }
                    ],
                    "resourceVersion": "112022016",
                    "uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0",
                                "job-name": "armo-scan-scheduler-27432000"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-scan-scheduler",
                                    "image": "curlimages/curl:latest",
                                    "command": [
                                        "/bin/sh",
                                        "-c"
                                    ],
                                    "args": [
                                        "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "armo-scan-scheduler-volume",
                                            "readOnly": true,
                                            "mountPath": "/home/curl_user/trigger-script.sh",
                                            "subPath": "trigger-script.sh"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 511,
                                        "name": "armo-scan-scheduler-config"
                                    },
                                    "name": "armo-scan-scheduler-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-rs7j",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "eeb34ea8c2d9afd6ae5cc50d1078094b",
                        "kubernetes.io/config.mirror": "eeb34ea8c2d9afd6ae5cc50d1078094b",
                        "kubernetes.io/config.seen": "2022-01-30T11:07:35.202027296Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-01-30T11:07:38Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                            "uid": "3ee86af2-0ce3-48e9-9142-58fc9e695d4e"
                        }
                    ],
                    "resourceVersion": "96317510",
                    "uid": "6866c417-d630-4d33-afe0-8cd3e0eace24"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
            "object": {
                "kind": "ServiceAccount",
                "name": "pod-garbage-collector",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pod-garbage-collector",
                            "resourceVersion": "126",
                            "uid": "1e8262e0-8536-4075-83f2-4650568cadab"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pod-garbage-collector"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pod-garbage-collector",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pod-garbage-collector",
                            "resourceVersion": "87",
                            "uid": "5d6c4a43-b0e5-464b-a61c-bdd977069736"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "delete",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/order-postgres",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:37Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "order-db"
                    },
                    "name": "order-postgres",
                    "namespace": "default",
                    "resourceVersion": "41559555",
                    "uid": "f9ed3641-8c2a-4feb-9f29-2d1abeaf98fa"
                },
                "spec": {
                    "clusterIP": "10.40.6.212",
                    "clusterIPs": [
                        "10.40.6.212"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "postgres-order",
                            "port": 5432,
                            "protocol": "TCP",
                            "targetPort": 5432
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "order-db"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/pv-protection-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "pv-protection-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "179",
                    "uid": "f7c708f2-7e68-4f9e-a2cb-f5f61a4d2250"
                },
                "secrets": [
                    {
                        "name": "pv-protection-controller-token-vkpn6"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-12-09T15:04:48Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "armo-system",
                    "resourceVersion": "67723533",
                    "uid": "a64fc44e-1f83-4ef3-b8d5-263fd57c84b0"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:aggregate-to-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults",
                        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                    },
                    "name": "system:aggregate-to-admin",
                    "resourceVersion": "49",
                    "uid": "d73b79e4-4932-40ef-8ccf-2962e46bd894"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "localsubjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "rbac.authorization.k8s.io"
                        ],
                        "resources": [
                            "rolebindings",
                            "roles"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpoint-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpoint-controller",
                    "resourceVersion": "77",
                    "uid": "82c0a1c0-5ad5-4e02-a773-53ece10b1b62"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints/restricted"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/service-account-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:49Z",
                    "name": "service-account-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "255",
                    "uid": "1d96651e-52cd-4edc-bea3-8708673bff22"
                },
                "secrets": [
                    {
                        "name": "service-account-controller-token-xqz54"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "extension-apiserver-authentication-reader",
                    "namespace": "kube-system",
                    "resourceVersion": "139",
                    "uid": "37c07cf8-13cd-4768-988a-1e30a2e211be"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "extension-apiserver-authentication"
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/systest-ns-yza2/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:52:43Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "systest-ns-yza2",
                    "resourceVersion": "110051",
                    "uid": "ee79a635-29d2-4739-9a3c-bcad27bc3784"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-collection-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-collection-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-uas-collection-reader",
                            "resourceVersion": "587",
                            "uid": "eb65db0e-8bb4-4c66-87d4-83201b4e8198"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-uas-collection-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-uas-collection-reader",
                            "resourceVersion": "585",
                            "uid": "9ff5354e-35a9-4852-b056-572b70056f7e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs",
                                    "cronjobs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "cluster-admin",
                    "resourceVersion": "42",
                    "uid": "1b7dd6d7-6ea3-4b5c-a930-c46053971e4a"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "nonResourceURLs": [
                            "*"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:legacy-unknown-approver",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:legacy-unknown-approver",
                    "resourceVersion": "65",
                    "uid": "ca1e725a-353c-4b46-80a6-83b13a26b473"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/legacy-unknown"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pv-protection-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pv-protection-controller",
                    "resourceVersion": "98",
                    "uid": "4ccdee88-5c3e-4eff-8a0e-85c8bddc9ea0"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:glbc-status",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.7-gke.0",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:glbc-status",
                    "resourceVersion": "106360636",
                    "uid": "185b790e-443c-4055-869a-13a3b514c67f"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status",
                            "services/status",
                            "services"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "create",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes",
                            "namespaces",
                            "endpoints",
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.gke.io"
                        ],
                        "resources": [
                            "managedcertificates",
                            "frontendconfigs",
                            "servicenetworkendpointgroups",
                            "gcpingressparams",
                            "serviceattachments"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses/status",
                            "ingressclasses",
                            "ingresses"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "discovery.k8s.io"
                        ],
                        "resources": [
                            "endpointslices"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "extensions"
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "events",
                            "ingresses",
                            "ingresses/status"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apiextensions.k8s.io"
                        ],
                        "resources": [
                            "customresourcedefinitions"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "create",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "cloud.google.com"
                        ],
                        "resources": [
                            "backendconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "create",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io"
                        ],
                        "resources": [
                            "destinationrules"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:cronjob-controller",
                    "resourceVersion": "112",
                    "uid": "75ae561a-76e7-4adb-b99f-dc0ecb74a3df"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:cronjob-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "cronjob-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:service-controller",
                    "resourceVersion": "132",
                    "uid": "d06fd61e-6171-460e-abd1-514f24b573d4"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:service-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "service-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/konnectivity-agent-cpha",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-cpha",
                    "namespace": "kube-system",
                    "resourceVersion": "49475074",
                    "uid": "75059763-4e50-477f-ae19-c709106ce750"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments/scale"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-posture",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:25:10Z",
                    "labels": {
                        "app": "ca-posture",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-posture",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911195",
                    "uid": "1d53b642-90ef-4cda-8039-c1234f780a95"
                },
                "spec": {
                    "clusterIP": "10.40.0.174",
                    "clusterIPs": [
                        "10.40.0.174"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 4001,
                            "protocol": "TCP",
                            "targetPort": 4001
                        }
                    ],
                    "selector": {
                        "app": "ca-posture"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:expand-controller",
                    "resourceVersion": "119",
                    "uid": "fd085575-586f-4c12-8b3a-b1164f951e2b"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:expand-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "expand-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/namespace-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "namespace-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "268",
                    "uid": "ab53b5fb-9180-415d-a267-4c7344db58f0"
                },
                "secrets": [
                    {
                        "name": "namespace-controller-token-b5hgw"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-vuln-scan-7f49c5d94-wnmfj",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-16T15:30:03Z",
                    "generateName": "ca-vuln-scan-7f49c5d94-",
                    "labels": {
                        "app": "ca-vuln-scan",
                        "pod-template-hash": "7f49c5d94",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan-7f49c5d94-wnmfj",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-vuln-scan-7f49c5d94",
                            "uid": "bb9b8409-5af3-45fd-b861-060d7aabe574"
                        }
                    ],
                    "resourceVersion": "96318033",
                    "uid": "d1f2f450-ec9d-45f6-87f8-3d8954e5e4d4"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-vuln-scan",
                            "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "EVENT_RECEIVER_URL",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "1",
                                    "memory": "1536Mi"
                                },
                                "requests": {
                                    "cpu": "500m",
                                    "memory": "1Gi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-gmrvf",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-gmrvf",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/metrics-server-v0.4.4-64df5f9879-xjrh9",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-02-07T10:40:46Z",
                    "generateName": "metrics-server-v0.4.4-64df5f9879-",
                    "labels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "64df5f9879",
                        "version": "v0.4.4"
                    },
                    "name": "metrics-server-v0.4.4-64df5f9879-xjrh9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "metrics-server-v0.4.4-64df5f9879",
                            "uid": "8787464f-6958-4633-a54c-0004783d7029"
                        }
                    ],
                    "resourceVersion": "100755320",
                    "uid": "139d1e86-1ec5-4b82-a694-9c1b36bbdbe2"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "metrics-server",
                            "image": "k8s.gcr.io/metrics-server/metrics-server:v0.4.4",
                            "command": [
                                "/metrics-server",
                                "--metric-resolution=30s",
                                "--kubelet-port=10255",
                                "--deprecated-kubelet-completely-insecure=true",
                                "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                "--cert-dir=/tmp",
                                "--secure-port=443"
                            ],
                            "ports": [
                                {
                                    "name": "https",
                                    "containerPort": 443,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "44m",
                                    "memory": "63Mi"
                                },
                                "requests": {
                                    "cpu": "44m",
                                    "memory": "63Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "tmp-dir",
                                    "mountPath": "/tmp"
                                },
                                {
                                    "name": "kube-api-access-tkkgf",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "metrics-server-nanny",
                            "image": "gke.gcr.io/addon-resizer:1.8.13-gke.0",
                            "command": [
                                "/pod_nanny",
                                "--config-dir=/etc/config",
                                "--cpu=40m",
                                "--extra-cpu=0.5m",
                                "--memory=35Mi",
                                "--extra-memory=4Mi",
                                "--threshold=5",
                                "--deployment=metrics-server-v0.4.4",
                                "--container=metrics-server",
                                "--poll-period=30000",
                                "--estimator=exponential",
                                "--scale-down-delay=24h",
                                "--minClusterSize=5",
                                "--use-metrics=true"
                            ],
                            "env": [
                                {
                                    "name": "MY_POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "MY_POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "300Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "50Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "metrics-server-config-volume",
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-tkkgf",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "seccompProfile": {
                            "type": "RuntimeDefault"
                        }
                    },
                    "serviceAccount": "metrics-server",
                    "serviceAccountName": "metrics-server",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "metrics-server-config"
                            },
                            "name": "metrics-server-config-volume"
                        },
                        {
                            "emptyDir": {},
                            "name": "tmp-dir"
                        },
                        {
                            "name": "kube-api-access-tkkgf",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:managed-certificate-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "managedcertificates",
                        "components.gke.io/component-version": "2.2.1",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:managed-certificate-controller",
                    "resourceVersion": "94208531",
                    "uid": "b2d15bdd-0cdc-4c5c-9824-5adcfe7652ed"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.gke.io"
                        ],
                        "resources": [
                            "managedcertificates"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "extensions"
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "events"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-recurring-27424305",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-21T15:45:00Z",
                    "labels": {
                        "controller-uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d",
                        "job-name": "armo-kubescape-recurring-27424305"
                    },
                    "name": "armo-kubescape-recurring-27424305",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape-recurring",
                            "uid": "9f43b386-3dc3-4616-a5de-4b922d04021c"
                        }
                    ],
                    "resourceVersion": "108818774",
                    "uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "3d8035b4-18ca-42dc-955e-5c9a7631b9d9"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "12a0f2c8-23f3-4d52-a717-154b5b94dd4d",
                                "job-name": "armo-kubescape-recurring-27424305"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-1",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-01-13T15:02:32Z",
                    "labels": {
                        "app": "ks-test-1"
                    },
                    "name": "ks-test-1",
                    "namespace": "armo-system",
                    "resourceVersion": "87231116",
                    "uid": "668843d6-bade-4427-b2d4-540c7563eac9"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "668843d6-bade-4427-b2d4-540c7563eac9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "668843d6-bade-4427-b2d4-540c7563eac9",
                                "job-name": "ks-test-1"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "/bin/sh",
                                        "-c"
                                    ],
                                    "args": [
                                        "kubescape scan --submit --environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c9blgq",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "5d89d4a1-9a5f-4d39-b365-4b7d389c02cf"
                    },
                    "creationTimestamp": "2022-02-10T07:03:16Z",
                    "generateName": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf-",
                    "labels": {
                        "controller-uid": "1d3e37d5-ce39-4542-a959-a9bf5c4b0653",
                        "job-name": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf"
                    },
                    "name": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c9blgq",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf",
                            "uid": "1d3e37d5-ce39-4542-a959-a9bf5c4b0653"
                        }
                    ],
                    "resourceVersion": "102367504",
                    "uid": "eaf70dc3-6f6b-4c67-bc49-424011142a29"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-ctgnq",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-ctgnq",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ttl-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "ttl-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ttl-controller",
                            "resourceVersion": "134",
                            "uid": "97f636e1-622b-4abc-958e-8679380b9832"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ttl-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ttl-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ttl-controller",
                            "resourceVersion": "95",
                            "uid": "537be3d1-c4e9-42d6-b23e-37e90a2aac0c"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:managed-certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:managed-certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:managed-certificate-controller",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:managed-certificate-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "managedcertificates",
                                "components.gke.io/component-version": "2.2.1",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:managed-certificate-controller",
                            "resourceVersion": "94208533",
                            "uid": "b8f6baeb-4324-4dbc-9d2c-ac2773e3d0b7"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:managed-certificate-controller"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:managed-certificate-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "managedcertificates",
                                "components.gke.io/component-version": "2.2.1",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:managed-certificate-controller",
                            "resourceVersion": "94208531",
                            "uid": "b2d15bdd-0cdc-4c5c-9824-5adcfe7652ed"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.gke.io"
                                ],
                                "resources": [
                                    "managedcertificates"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "extensions"
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "events"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/systest-ns-yza2",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:52:43Z",
                    "labels": {
                        "armo.secret": "protect",
                        "kubernetes.io/metadata.name": "systest-ns-yza2"
                    },
                    "name": "systest-ns-yza2",
                    "resourceVersion": "5883597",
                    "uid": "aade650d-3a10-49e9-be5b-e865c1e17a61"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kube-apiserver/rbac.authorization.k8s.io/v1//ClusterRole/kubelet-api-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kube-apiserver-kubelet-api-admin",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kube-apiserver",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "kube-apiserver-kubelet-api-admin",
                            "resourceVersion": "617",
                            "uid": "f9435933-21ee-48bb-a142-1fed1e708cab"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "kubelet-api-admin"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kube-apiserver"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "kubelet-api-admin",
                            "resourceVersion": "618",
                            "uid": "f98ce1bf-afa0-48ff-8955-e8c792e4ccba"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/proxy",
                                    "nodes/log",
                                    "nodes/stats",
                                    "nodes/metrics",
                                    "nodes/spec"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:glbc",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:controller:glbc",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:controller:glbc",
                            "resourceVersion": "616",
                            "uid": "e1888ace-63b9-4fb3-8346-3228ea09ed0f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:glbc"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:controller:glbc"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:controller:glbc",
                            "resourceVersion": "106360639",
                            "uid": "b045bd54-2120-4927-b9ec-e25a655f18b7"
                        },
                        "rules": null
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/frontend",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:25Z",
                    "finalizers": [
                        "service.kubernetes.io/load-balancer-cleanup"
                    ],
                    "labels": {
                        "app": "acmefit",
                        "service": "frontend"
                    },
                    "name": "frontend",
                    "namespace": "default",
                    "resourceVersion": "52906147",
                    "uid": "c96ac5a7-a020-464d-9dc0-d2aacd2bd19b"
                },
                "spec": {
                    "clusterIP": "10.40.1.178",
                    "clusterIPs": [
                        "10.40.1.178"
                    ],
                    "externalTrafficPolicy": "Cluster",
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-frontend",
                            "nodePort": 30226,
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 3000
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "frontend"
                    },
                    "sessionAffinity": "None",
                    "type": "LoadBalancer"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-controller-manager",
                    "resourceVersion": "105",
                    "uid": "a3bdfb77-04db-4591-ad28-59de8eb23c57"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:kube-controller-manager"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-controller-manager"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-9fc5b4b79",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "6",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T12:39:28Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "pod-template-hash": "9fc5b4b79",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-9fc5b4b79",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "98559615",
                    "uid": "90181a88-29f1-40cc-9514-3c19a01604d3"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "9fc5b4b79",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "pod-template-hash": "9fc5b4b79",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:183",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-8c6c699b7",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "13",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-17T13:41:28Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "helm.sh/revision": "44",
                        "pod-template-hash": "8c6c699b7",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-8c6c699b7",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "108591314",
                    "uid": "b25c296f-a8b0-4024-bbdb-b19a2c5b0ad3"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "8c6c699b7",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "helm.sh/revision": "44",
                                "pod-template-hash": "8c6c699b7",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043",
                    "namespace": "armo-system",
                    "resourceVersion": "105912616",
                    "uid": "3624e1e1-78dd-4088-b006-d1863f50af24"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "3624e1e1-78dd-4088-b006-d1863f50af24"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "qwe",
                                "armo.jobid": "6693003c-0d5a-4f91-9ecd-f85e24904364"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "3624e1e1-78dd-4088-b006-d1863f50af24",
                                "job-name": "armo-kubescape-on-demand-qwe-6693003c-0d5a-4f91-9ecd-f85e249043"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "qwe",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-mskb5",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-02-07T10:40:22Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-mskb5",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "100755013",
                    "uid": "9afbe434-dd9b-4788-9e4d-fa6a778e7309"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-z5glx",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-z5glx",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "statefulset-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:statefulset-controller",
                            "resourceVersion": "133",
                            "uid": "21a722b6-06ed-405e-85aa-fcd23a780c2e"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:statefulset-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "statefulset-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:statefulset-controller",
                            "resourceVersion": "94",
                            "uid": "118f7137-3019-403d-83fa-5f00f5f2f7ac"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "create",
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-actor",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-hpa-actor",
                    "resourceVersion": "55353611",
                    "uid": "ea3cc8f1-5936-4a66-b6fa-854122f45b9f"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers"
                        ],
                        "verbs": [
                            "list",
                            "get",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*/scale"
                        ],
                        "verbs": [
                            "get",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "metrics.k8s.io",
                            "v1",
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "custom.metrics.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "list",
                            "get",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/replicaset-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:49Z",
                    "name": "replicaset-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "258",
                    "uid": "c9304839-0b4a-4b35-88dc-ecec4090f666"
                },
                "secrets": [
                    {
                        "name": "replicaset-controller-token-wkhp5"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/systest-ns-tivl",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:43:35Z",
                    "labels": {
                        "armo.secret": "protect",
                        "kubernetes.io/metadata.name": "systest-ns-tivl"
                    },
                    "name": "systest-ns-tivl",
                    "resourceVersion": "5883596",
                    "uid": "e7da4589-3d21-4764-8532-2706c661983e"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/konnectivity-agent-autoscaler-5c49cb58bb",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-11-16T07:46:28Z",
                    "generation": 1,
                    "labels": {
                        "k8s-app": "konnectivity-agent-autoscaler",
                        "pod-template-hash": "5c49cb58bb"
                    },
                    "name": "konnectivity-agent-autoscaler-5c49cb58bb",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "konnectivity-agent-autoscaler",
                            "uid": "7826cb7c-7f4f-40cc-9e0b-7867cada7921"
                        }
                    ],
                    "resourceVersion": "96317672",
                    "uid": "dcd90706-b41a-4cb4-b0da-eae7a8c0f1f0"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent-autoscaler",
                            "pod-template-hash": "5c49cb58bb"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.3.2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent-autoscaler",
                                "pod-template-hash": "5c49cb58bb"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler:1.8.4-gke.1",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=konnectivity-agent-autoscaler-config",
                                        "--target=deployment/konnectivity-agent",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10M"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent-cpha",
                            "serviceAccountName": "konnectivity-agent-cpha",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bdxrtk8",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "test",
                        "armo.jobid": "e1c551d5-8da6-48dc-aa90-f8bde8e9d535"
                    },
                    "creationTimestamp": "2022-02-28T09:05:44Z",
                    "generateName": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d-",
                    "labels": {
                        "controller-uid": "e5600abb-5613-40fd-9cfb-6a2df2db06ac",
                        "job-name": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d"
                    },
                    "name": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bdxrtk8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-test-e1c551d5-8da6-48dc-aa90-f8bde8e9d",
                            "uid": "e5600abb-5613-40fd-9cfb-6a2df2db06ac"
                        }
                    ],
                    "resourceVersion": "112834968",
                    "uid": "cbaa1136-573d-4989-b088-3084dc3522ca"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.148",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "test",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-c7hk5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-c7hk5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Pod/mysql-1645559751-0",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "checksum/configuration": "2b7e24da26569507a239f4d2075d2526da2e19d4467a57d97ed7b723f4485d3c"
                    },
                    "creationTimestamp": "2022-02-22T19:56:01Z",
                    "generateName": "mysql-1645559751-",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "controller-revision-hash": "mysql-1645559751-57cfdc4f5",
                        "helm.sh/chart": "mysql-8.8.25",
                        "statefulset.kubernetes.io/pod-name": "mysql-1645559751-0"
                    },
                    "name": "mysql-1645559751-0",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "StatefulSet",
                            "name": "mysql-1645559751",
                            "uid": "6edfc3a9-62dc-4321-a6a4-e9d0f7fa565d"
                        }
                    ],
                    "resourceVersion": "109523392",
                    "uid": "812e7fa6-cbc5-4658-9b9f-215e429e804c"
                },
                "spec": {
                    "affinity": {
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "primary",
                                                "app.kubernetes.io/instance": "mysql-1645559751",
                                                "app.kubernetes.io/name": "mysql"
                                            }
                                        },
                                        "namespaces": [
                                            "mysql-demos"
                                        ],
                                        "topologyKey": "kubernetes.io/hostname"
                                    },
                                    "weight": 1
                                }
                            ]
                        }
                    },
                    "containers": [
                        {
                            "name": "mysql",
                            "image": "docker.io/bitnami/mysql:8.0.28-debian-10-r15",
                            "ports": [
                                {
                                    "name": "mysql",
                                    "containerPort": 3306,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "BITNAMI_DEBUG",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "mysql-1645559751",
                                            "key": "mysql-root-password"
                                        }
                                    }
                                },
                                {
                                    "name": "MYSQL_DATABASE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "data",
                                    "mountPath": "/bitnami/mysql"
                                },
                                {
                                    "name": "config",
                                    "mountPath": "/opt/bitnami/mysql/conf/my.cnf",
                                    "subPath": "my.cnf"
                                },
                                {
                                    "name": "kube-api-access-sf6fd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 10
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostname": "mysql-1645559751-0",
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1001
                    },
                    "serviceAccount": "mysql-1645559751",
                    "serviceAccountName": "mysql-1645559751",
                    "subdomain": "mysql-1645559751",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "data",
                            "persistentVolumeClaim": {
                                "claimName": "data-mysql-1645559751-0"
                            }
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "mysql-1645559751"
                            },
                            "name": "config"
                        },
                        {
                            "name": "kube-api-access-sf6fd",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-11-10T14:24:45Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52910924",
                    "uid": "91ff0159-eac7-4d9f-b9cd-34f37630c345"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/cluster-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-16T07:46:30Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "cluster-autoscaler",
                    "resourceVersion": "55353529",
                    "uid": "b4163985-fe01-413f-97f0-0afdf6961740"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "coordination.k8s.io"
                        ],
                        "resourceNames": [
                            "cluster-autoscaler"
                        ],
                        "resources": [
                            "leases"
                        ],
                        "verbs": [
                            "get",
                            "update",
                            "patch",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/eviction"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services",
                            "replicationcontrollers",
                            "persistentvolumes",
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "replicasets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses",
                            "csinodes",
                            "csistoragecapacities",
                            "csidrivers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "nodemanagement.gke.io"
                        ],
                        "resources": [
                            "updateinfos"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "cluster-autoscaler-status"
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "update",
                            "patch",
                            "delete"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:replicaset-controller",
                    "resourceVersion": "88",
                    "uid": "839c7535-d058-4619-80ba-d2a52e90f071"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "list",
                            "patch",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-notification-server",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:25:12Z",
                    "labels": {
                        "app": "ca-notification-server",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-notification-server",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911222",
                    "uid": "a6b7ca68-7fd8-48b9-b4d1-911c2e29426d"
                },
                "spec": {
                    "clusterIP": "10.40.5.38",
                    "clusterIPs": [
                        "10.40.5.38"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "websocket",
                            "port": 8001,
                            "protocol": "TCP",
                            "targetPort": 8001
                        },
                        {
                            "name": "rest-api",
                            "port": 8002,
                            "protocol": "TCP",
                            "targetPort": 8002
                        }
                    ],
                    "selector": {
                        "app": "ca-notification-server"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mysql-1645559751",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "mysql-1645559751",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:56:01Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559751",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109522953",
                    "uid": "61127700-4049-495d-b10b-19791fca159a"
                },
                "spec": {
                    "clusterIP": "10.40.9.201",
                    "clusterIPs": [
                        "10.40.9.201"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": "mysql"
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/name": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-common-webhooks",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gke-common-webhooks-rbac",
                        "components.gke.io/component-version": "1.1.2"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-common-webhooks",
                    "resourceVersion": "27262118",
                    "uid": "75ede26b-9978-4bc5-af3a-71f2440a75c6"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-common-webhooks"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:gke-common-webhooks"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/systest-ns-yza2/ReplicaSet/demo-service-secret-f87564df4",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T10:52:57Z",
                    "generation": 1,
                    "labels": {
                        "app": "demo-service-secret",
                        "pod-template-hash": "f87564df4"
                    },
                    "name": "demo-service-secret-f87564df4",
                    "namespace": "systest-ns-yza2",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "demo-service-secret",
                            "uid": "242c2e3e-c4a9-433c-ba1f-9a5846424e76"
                        }
                    ],
                    "resourceVersion": "96317782",
                    "uid": "6b019c49-2efe-44ca-a1b0-1459815087bd"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "demo-service-secret",
                            "pod-template-hash": "f87564df4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "demo-service-secret",
                                "pod-template-hash": "f87564df4"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "demo-service-secret",
                                    "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                                    "env": [
                                        {
                                            "name": "SECRET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "ARMO_TEST_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CAA_ENABLE_CRASH_REPORTER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "encrypted-credentials-volume",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "encrypted-credentials"
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-2421728663191761958-nsa-qfkgt",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "NSA",
                        "armo.jobid": "a33149f4-41d7-4c6e-b8e9-cd9044635933"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-2421728663191761958-nsa-",
                    "labels": {
                        "controller-uid": "534a4844-1612-4e52-b55f-582f3163c984",
                        "job-name": "armo-kubescape-on-demand-2421728663191761958-nsa"
                    },
                    "name": "armo-kubescape-on-demand-2421728663191761958-nsa-qfkgt",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-2421728663191761958-nsa",
                            "uid": "534a4844-1612-4e52-b55f-582f3163c984"
                        }
                    ],
                    "resourceVersion": "105912871",
                    "uid": "88203d4d-b002-4b9a-a961-9fda3cc760da"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "NSA",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-m7dkz",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-m7dkz",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-v2wwz",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-01-30T11:07:40Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-v2wwz",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "96317699",
                    "uid": "7971387e-ea0c-4764-bc37-b74d316ac7ec"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-p7q9"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-pzwkl",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-pzwkl",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-pzwkl",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/read-updateinfo",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "updateinfo-crd",
                        "components.gke.io/component-version": "1.1.0"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "read-updateinfo",
                    "resourceVersion": "10648264",
                    "uid": "dcfcc342-3c53-4a61-a007-7889fc0639cd"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "nodemanagement.gke.io"
                        ],
                        "resources": [
                            "updateinfos"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:clusterrole-aggregation-controller",
                    "resourceVersion": "111",
                    "uid": "e580c380-1731-4e88-aeec-6355ee461f62"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:clusterrole-aggregation-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "clusterrole-aggregation-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-resourcequota",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "resourcequota-rbac-1.0.1"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-master-resourcequota",
                    "resourceVersion": "499",
                    "uid": "bf028702-5849-4072-a6fb-506e013800a7"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-master-resourcequota"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:gke-master-resourcequota"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-hpa-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-uas-hpa-controller",
                    "resourceVersion": "588",
                    "uid": "ba40f5f7-3eb9-4f05-ae1a-7da1e25b7bfe"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:horizontal-pod-autoscaler"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-5c8b65b4cd",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "12",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:53Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "46",
                        "pod-template-hash": "5c8b65b4cd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-5c8b65b4cd",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "112886112",
                    "uid": "6abbc6d3-a939-47e2-9852-fdf7012d644d"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "5c8b65b4cd",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "46",
                                "pod-template-hash": "5c8b65b4cd",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-655f4ff485",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "8",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-08T13:54:17Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "pod-template-hash": "655f4ff485",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-655f4ff485",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "102358136",
                    "uid": "1bf2bf24-b37f-49be-848e-09de98285b91"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "655f4ff485",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "pod-template-hash": "655f4ff485",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-ab7dec83-5ae7-4cce-87dc-4aac7aa9",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-01-18T15:04:35Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-mitre-ab7dec83-5ae7-4cce-87dc-4aac7aa9",
                    "namespace": "armo-system",
                    "resourceVersion": "89998018",
                    "uid": "bae09d37-1542-4d0f-8744-6f001c6c1de1"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "bae09d37-1542-4d0f-8744-6f001c6c1de1"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "MITRE",
                                "armo.jobid": "ab7dec83-5ae7-4cce-87dc-4aac7aa97f90"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "bae09d37-1542-4d0f-8744-6f001c6c1de1",
                                "job-name": "armo-kubescape-on-demand-mitre-ab7dec83-5ae7-4cce-87dc-4aac7aa9"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "MITRE",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mycluster-initconf",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "00-basic.cnf": "XXXXXX",
                    "01-group_replication.cnf": "XXXXXX",
                    "99-extra.cnf": "XXXXXX",
                    "initdb-localroot.sql": "XXXXXX",
                    "livenessprobe.sh": "XXXXXX",
                    "my.cnf.in": "XXXXXX",
                    "readinessprobe.sh": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "name": "mycluster-initconf",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "mysql.oracle.com/v2alpha1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "InnoDBCluster",
                            "name": "mycluster",
                            "uid": "08fb6f3d-6ed6-4c18-9434-882da43f833e"
                        }
                    ],
                    "resourceVersion": "109544557",
                    "uid": "e802af8d-9a56-49f6-a3d4-a09e5a973f82"
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-notification-service-64484fb4b7-bmtjg",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-28T12:50:12Z",
                    "generateName": "armo-notification-service-64484fb4b7-",
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "64484fb4b7",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-64484fb4b7-bmtjg",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "armo-notification-service-64484fb4b7",
                            "uid": "bc8e1f3c-6663-4a2e-8ed5-54ed53c406d7"
                        }
                    ],
                    "resourceVersion": "112927106",
                    "uid": "a7a5fb10-59f4-49f1-b55a-bf11cae83253"
                },
                "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                        {
                            "name": "armo-notification-service",
                            "image": "quay.io/armosec/notification-server-ubi:89",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "websocket",
                                    "containerPort": 8001,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "rest-api",
                                    "containerPort": 8002,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "accountGuid"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "masterNotificationServer"
                                        }
                                    }
                                },
                                {
                                    "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "10Mi"
                                }
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/admin",
            "object": {
                "aggregationRule": {
                    "clusterRoleSelectors": [
                        {
                            "matchLabels": {
                                "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                            }
                        }
                    ]
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "admin",
                    "resourceVersion": "292",
                    "uid": "cb11480c-be5f-459b-89c8-c1abcd549ab9"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy",
                            "secrets",
                            "services/proxy"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "impersonate"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "secrets",
                            "serviceaccounts",
                            "services",
                            "services/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "replicasets",
                            "replicasets/scale",
                            "statefulsets",
                            "statefulsets/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "ingresses",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "persistentvolumeclaims/status",
                            "pods",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "serviceaccounts",
                            "services",
                            "services/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "bindings",
                            "events",
                            "limitranges",
                            "namespaces/status",
                            "pods/log",
                            "pods/status",
                            "replicationcontrollers/status",
                            "resourcequotas",
                            "resourcequotas/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions",
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "statefulsets",
                            "statefulsets/scale",
                            "statefulsets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers",
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "cronjobs/status",
                            "jobs",
                            "jobs/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets",
                            "poddisruptionbudgets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "localsubjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "rbac.authorization.k8s.io"
                        ],
                        "resources": [
                            "rolebindings",
                            "roles"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-crd-creator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-crd-creator",
                    "resourceVersion": "557",
                    "uid": "6d4704b2-3c39-4a45-b889-a9217bcfe3ca"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "apiextensions.k8s.io"
                        ],
                        "resources": [
                            "customresourcedefinitions"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:cronjob-controller",
                    "resourceVersion": "73",
                    "uid": "f76fc010-1dd8-4b11-85b2-25c18fa393c2"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "delete",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/jaeger-agent",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:29Z",
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "agent",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "name": "jaeger-agent",
                    "namespace": "default",
                    "resourceVersion": "41559481",
                    "uid": "861531ad-f123-4c73-bd86-fa37d8a4def3"
                },
                "spec": {
                    "clusterIP": "None",
                    "clusterIPs": [
                        "None"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "agent-zipkin-thrift",
                            "port": 5775,
                            "protocol": "UDP",
                            "targetPort": 5775
                        },
                        {
                            "name": "agent-compact",
                            "port": 6831,
                            "protocol": "UDP",
                            "targetPort": 6831
                        },
                        {
                            "name": "agent-binary",
                            "port": 6832,
                            "protocol": "UDP",
                            "targetPort": 6832
                        },
                        {
                            "name": "agent-configs",
                            "port": 5778,
                            "protocol": "TCP",
                            "targetPort": 5778
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/konnectivity-agent-cpha",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-cpha",
                    "resourceVersion": "49475072",
                    "uid": "2b702d2f-1a51-4dfb-8a69-39a6662497e4"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "konnectivity-agent-cpha"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "konnectivity-agent-cpha",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/ServiceAccount/armo-scanner-service-account",
            "object": {
                "apiVersion": "v1",
                "automountServiceAccountToken": false,
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-vuln-scanner",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-scanner-service-account",
                    "namespace": "armo-system",
                    "resourceVersion": "90028418",
                    "uid": "06eeaf02-c9ae-4baf-9e5d-e83454061e38"
                },
                "secrets": [
                    {
                        "name": "armo-scanner-service-account-token-sm7vz"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-75cdf88455",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "11",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-21T07:41:51Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "45",
                        "pod-template-hash": "75cdf88455",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-75cdf88455",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "112842408",
                    "uid": "0d94b696-bc45-4203-aaf9-6973bf5017a6"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "75cdf88455",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "45",
                                "pod-template-hash": "75cdf88455",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-autoscaler-5c49cb58bb-7nvp6",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-27T12:22:16Z",
                    "generateName": "konnectivity-agent-autoscaler-5c49cb58bb-",
                    "labels": {
                        "k8s-app": "konnectivity-agent-autoscaler",
                        "pod-template-hash": "5c49cb58bb"
                    },
                    "name": "konnectivity-agent-autoscaler-5c49cb58bb-7nvp6",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-autoscaler-5c49cb58bb",
                            "uid": "dcd90706-b41a-4cb4-b0da-eae7a8c0f1f0"
                        }
                    ],
                    "resourceVersion": "96317671",
                    "uid": "09ed904a-858f-43ba-9db7-bbb8d8298566"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "autoscaler",
                            "image": "gke.gcr.io/cluster-proportional-autoscaler:1.8.4-gke.1",
                            "command": [
                                "/cluster-proportional-autoscaler",
                                "--namespace=kube-system",
                                "--configmap=konnectivity-agent-autoscaler-config",
                                "--target=deployment/konnectivity-agent",
                                "--logtostderr=true",
                                "--v=2"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "10M"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-7lh5h",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent-cpha",
                    "serviceAccountName": "konnectivity-agent-cpha",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "kube-api-access-7lh5h",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:pdcsi-controller/rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-snapshotter-role/rbac.authorization.k8s.io/v1//ClusterRoleBinding/pdcsi-snapshotter-binding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:pdcsi-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-snapshotter-binding",
                            "resourceVersion": "55353596",
                            "uid": "78ada90a-fc48-4d1e-ba32-8a4142db418b"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "pdcsi-snapshotter-role"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:pdcsi-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            },
                            "name": "pdcsi-snapshotter-role",
                            "resourceVersion": "55353592",
                            "uid": "f388fb66-74c5-4b83-9d75-0924cdac135d"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "delete",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
            "object": {
                "kind": "ServiceAccount",
                "name": "kube-scheduler",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-scheduler",
                            "namespace": "kube-system",
                            "resourceVersion": "148",
                            "uid": "c781c0ba-74d9-4323-b344-85a57d4a2afa"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system::leader-locking-kube-scheduler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-scheduler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-scheduler",
                            "namespace": "kube-system",
                            "resourceVersion": "144",
                            "uid": "4c6a0fb3-da0f-42ce-b7fe-ecdbf9a8354f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-scheduler"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-actor",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-hpa-actor",
                    "resourceVersion": "575",
                    "uid": "b3044624-a79a-4ed5-9521-5bd504dcc297"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-hpa-actor"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/kube-dns-autoscaler",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "kube-dns-autoscaler",
                    "namespace": "kube-system",
                    "resourceVersion": "423",
                    "uid": "485b4b1d-a326-47dd-a927-fc0fad42aaf0"
                },
                "secrets": [
                    {
                        "name": "kube-dns-autoscaler-token-9n9mz"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/metadata-agent",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metadata-agent",
                    "namespace": "kube-system",
                    "resourceVersion": "372",
                    "uid": "385e6b50-06d8-4fc3-99ea-46ad48b98deb"
                },
                "secrets": [
                    {
                        "name": "metadata-agent-token-nm9rg"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-76c4b47ddd",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "11",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-10T14:01:08Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "76c4b47ddd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-76c4b47ddd",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "104729607",
                    "uid": "c73aed21-d4b6-4cdd-9a05-c67f7f86aaf3"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "76c4b47ddd",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "76c4b47ddd",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:446",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-2421728663191761958-nsa",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-2421728663191761958-nsa",
                    "namespace": "armo-system",
                    "resourceVersion": "105912873",
                    "uid": "534a4844-1612-4e52-b55f-582f3163c984"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "534a4844-1612-4e52-b55f-582f3163c984"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "NSA",
                                "armo.jobid": "a33149f4-41d7-4c6e-b8e9-cd9044635933"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "534a4844-1612-4e52-b55f-582f3163c984",
                                "job-name": "armo-kubescape-on-demand-2421728663191761958-nsa"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "NSA",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-jcwqz",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "ArmoBest",
                        "armo.jobid": "3c5ad6c6-2835-4afd-8d6e-1b525c1641cd"
                    },
                    "creationTimestamp": "2022-02-09T16:44:19Z",
                    "generateName": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525-",
                    "labels": {
                        "controller-uid": "5f45d190-a061-451c-bac3-faf8f23a5cd9",
                        "job-name": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525"
                    },
                    "name": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-jcwqz",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525",
                            "uid": "5f45d190-a061-451c-bac3-faf8f23a5cd9"
                        }
                    ],
                    "resourceVersion": "102029619",
                    "uid": "fdeeebd7-caa9-4c00-bb10-a0bd82f414fd"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.143",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "ArmoBest",
                                "--submit",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-tf6b6",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-tf6b6",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-832p2zv8",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "not-exists",
                        "armo.jobid": "1528ea73-fb86-47c8-8320-c618952f8b20"
                    },
                    "creationTimestamp": "2022-02-10T13:56:06Z",
                    "generateName": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61-",
                    "labels": {
                        "controller-uid": "547eee4c-62cf-4907-9ddd-4825e463dc62",
                        "job-name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-832p2zv8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61",
                            "uid": "547eee4c-62cf-4907-9ddd-4825e463dc62"
                        }
                    ],
                    "resourceVersion": "102529242",
                    "uid": "1544e25f-21bf-428d-bf2f-9e40c3bcd0bf"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "not-exists",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-wc5qg",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-wc5qg",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:kubelet-serving-approver",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:certificates.k8s.io:kubelet-serving-approver",
                    "resourceVersion": "66",
                    "uid": "175da4e3-acd2-4cc9-b657-d9cf6d76d972"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kubelet-serving"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:clusterrole-aggregation-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:clusterrole-aggregation-controller",
                    "resourceVersion": "72",
                    "uid": "bfea84dc-24f4-4c2f-954f-5209cefb7cce"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "rbac.authorization.k8s.io"
                        ],
                        "resources": [
                            "clusterroles"
                        ],
                        "verbs": [
                            "escalate",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-master-healthcheck",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gke-master-healthcheck-rbac",
                        "components.gke.io/component-version": "1.0.2"
                    },
                    "creationTimestamp": "2021-07-29T02:29:47Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-master-healthcheck",
                    "resourceVersion": "10648234",
                    "uid": "154b92b8-5a6d-4b71-ba12-12120340cb04"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-master-healthcheck"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:gke-master-healthcheck"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-794dd879d9",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "9",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T12:39:29Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "pod-template-hash": "794dd879d9",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-794dd879d9",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "98565178",
                    "uid": "ab28a3b6-7eb6-4db4-80fe-2c55a383b8e0"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "794dd879d9",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "pod-template-hash": "794dd879d9",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:110",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/gke-metrics-agent",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gke-metrics-agent",
                    "resourceVersion": "437",
                    "uid": "d88dff96-817a-482d-891b-cd8a12a71a49"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resourceNames": [
                            "gce.gke-metrics-agent"
                        ],
                        "resources": [
                            "podsecuritypolicies"
                        ],
                        "verbs": [
                            "use"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:daemon-set-controller",
                    "resourceVersion": "74",
                    "uid": "62bf147b-7839-47cc-9d69-c4b9b2d5480e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "list",
                            "patch",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/binding"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gcp-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gcp-controller-manager-combined",
                        "components.gke.io/component-version": "2.1.14",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gcp-controller-manager",
                    "resourceVersion": "94208520",
                    "uid": "c6780e20-2772-4a16-b880-97668a57fb0c"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts",
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes",
                            "endpoints",
                            "configmaps"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests",
                            "certificatesigningrequests/approval",
                            "certificatesigningrequests/status"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resourceNames": [
                            "kubernetes.io/kube-apiserver-client",
                            "kubernetes.io/kube-apiserver-client-kubelet",
                            "kubernetes.io/kubelet-serving",
                            "kubernetes.io/legacy-unknown",
                            "pki.gke.io/istiod",
                            "pki.gke.io/gke-oidc"
                        ],
                        "resources": [
                            "signers"
                        ],
                        "verbs": [
                            "approve",
                            "sign"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:slo-monitor",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "slo-monitor-rbac-1.0.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:slo-monitor",
                    "resourceVersion": "500",
                    "uid": "bdf2c8ba-ad89-404a-9ad7-f268aab7dc96"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "events"
                        ],
                        "verbs": [
                            "get",
                            "watch",
                            "list"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-dd4c66695",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "14",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-21T07:41:53Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "45",
                        "pod-template-hash": "dd4c66695",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-dd4c66695",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "112842570",
                    "uid": "d4eb249f-8f42-4fa1-899b-38b19e5e7357"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "dd4c66695",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "45",
                                "pod-template-hash": "dd4c66695",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-80xg",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "4533992644483565575",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-80xg\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-02-07T10:40:21Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "resourceVersion": "113528356",
                    "uid": "be56530b-2576-492f-bbb3-024714794254"
                },
                "spec": {
                    "podCIDR": "10.36.5.0/24",
                    "podCIDRs": [
                        "10.36.5.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-80xg"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "attachdetach-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:attachdetach-controller",
                            "resourceVersion": "110",
                            "uid": "ef135132-ca8b-4d03-8fe5-897cc618098a"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:attachdetach-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "attachdetach-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:attachdetach-controller",
                            "resourceVersion": "71",
                            "uid": "842a41f1-e9e5-49d8-afed-074ded3eb599"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims",
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-webhook",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:24:55Z",
                    "labels": {
                        "app": "ca-webhook"
                    },
                    "name": "ca-webhook",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911020",
                    "uid": "bd68a90f-ed0a-4a7f-b0ba-e2a1bb803315"
                },
                "spec": {
                    "clusterIP": "10.40.5.216",
                    "clusterIPs": [
                        "10.40.5.216"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mutating-port",
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 443
                        }
                    ],
                    "selector": {
                        "app": "ca-webhook"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-collection-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-uas-collection-reader",
                    "resourceVersion": "587",
                    "uid": "eb65db0e-8bb4-4c66-87d4-83201b4e8198"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gke-uas-collection-reader"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-kubescape-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "accountID": "XXXXXX",
                    "adminMail": "XXXXXX",
                    "clusterName": "XXXXXX",
                    "config.json": "XXXXXX",
                    "customerGUID": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-kubescape",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-config",
                    "namespace": "armo-system",
                    "resourceVersion": "108640424",
                    "uid": "0188296e-a770-4b49-aa1c-b6d6f8de866a"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/clustermetrics",
            "object": {
                "apiVersion": "v1",
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-a609d8f1a06a4e518784-db5b-7300-vm\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2022-02-26T02:29:44Z\",\"renewTime\":\"2022-03-01T14:42:31Z\",\"leaderTransitions\":19}"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "name": "clustermetrics",
                    "namespace": "kube-system",
                    "resourceVersion": "113529691",
                    "uid": "ff72052b-5b4f-4bbd-a0a1-24d741ec4dd1"
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/prod-mysql",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2022-02-22T20:13:39Z",
                    "labels": {
                        "app": "mysql"
                    },
                    "name": "prod-mysql",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109530045",
                    "uid": "64a25c3b-4d57-465f-92e5-4d44a9f268de"
                },
                "spec": {
                    "clusterIP": "10.40.2.80",
                    "clusterIPs": [
                        "10.40.2.80"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": 3306
                        }
                    ],
                    "selector": {
                        "app": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-kubescape-service-account-role-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-kubescape-service-account-role-binding",
                    "resourceVersion": "67723556",
                    "uid": "485ebea9-2eee-4f8a-92a4-7ad7f6cb8053"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "armo-kubescape-service-account-roles"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "armo-kubescape-service-account",
                        "namespace": "armo-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-vuln-scan",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "18",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:50Z",
                    "generation": 18,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan",
                    "namespace": "armo-system",
                    "resourceVersion": "112927102",
                    "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:117",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-9d55bbcc4",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "12",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-14T11:22:05Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "9d55bbcc4",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-9d55bbcc4",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "106479492",
                    "uid": "c341f235-63f9-4540-9290-553478838c57"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "9d55bbcc4",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "9d55bbcc4",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac10w5p5x",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "418f87bb-95c2-4766-bc18-4bfbac102429"
                    },
                    "creationTimestamp": "2022-02-28T12:55:02Z",
                    "generateName": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429-",
                    "labels": {
                        "controller-uid": "cb8aa651-d568-4814-9355-73432d634768",
                        "job-name": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429"
                    },
                    "name": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac10w5p5x",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--418f87bb-95c2-4766-bc18-4bfbac102429",
                            "uid": "cb8aa651-d568-4814-9355-73432d634768"
                        }
                    ],
                    "resourceVersion": "112929725",
                    "uid": "93d3d9c1-911c-40f3-ade0-98ab9518773f"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:dev-v2.0.237",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--host-scan-yaml",
                                "/root/.kubescape/host-sensor.yaml",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "host-sensor-definition",
                                    "mountPath": "/root/.kubescape/host-sensor.yaml",
                                    "subPath": "host-sensor-yaml"
                                },
                                {
                                    "name": "kube-api-access-mkxl7",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "host-sensor-definition"
                            },
                            "name": "host-sensor-definition"
                        },
                        {
                            "name": "kube-api-access-mkxl7",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/ca-cr-actor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-cr",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:cluster-autoscaler",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-16T07:46:30Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "ca-cr",
                            "resourceVersion": "55353535",
                            "uid": "2be296fd-d36e-47d5-b40e-c441d3b67f3f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "ca-cr-actor"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:cluster-autoscaler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-16T07:46:30Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "ca-cr-actor",
                            "resourceVersion": "55353534",
                            "uid": "5da96627-387d-45d5-ac89-20060bd00036"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "internal.autoscaling.gke.io"
                                ],
                                "resources": [
                                    "capacityrequests"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "job-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:job-controller",
                            "resourceVersion": "122",
                            "uid": "ad0b5770-516a-49fe-a8da-708cff56490f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:job-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "job-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:job-controller",
                            "resourceVersion": "83",
                            "uid": "85df3f96-3cd1-4429-af15-eb9f8d9a8f5b"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kubestore-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "kubestore-collector-rbac-1.0.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:kubestore-collector",
                    "resourceVersion": "448",
                    "uid": "2df61987-c51d-4dc1-9dc7-adb1212058b0"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "events"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79",
                    "namespace": "armo-system",
                    "resourceVersion": "105912772",
                    "uid": "156064aa-9cd4-451f-aee0-f99c07626f8b"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "156064aa-9cd4-451f-aee0-f99c07626f8b"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "eeeeee",
                                "armo.jobid": "6c7ef9a3-0d8d-4fda-99e6-c04ce79e66f2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "156064aa-9cd4-451f-aee0-f99c07626f8b",
                                "job-name": "armo-kubescape-on-demand-eeeeee-6c7ef9a3-0d8d-4fda-99e6-c04ce79"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "eeeeee",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-4",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-01-13T15:09:13Z",
                    "labels": {
                        "app": "ks-test-1"
                    },
                    "name": "ks-test-4",
                    "namespace": "armo-system",
                    "resourceVersion": "87233773",
                    "uid": "9549aed4-580d-421b-bed2-50eea16cedbe"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "9549aed4-580d-421b-bed2-50eea16cedbe"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "9549aed4-580d-421b-bed2-50eea16cedbe",
                                "job-name": "ks-test-4"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/l7-default-backend-69fb9fd9f9-tsbdw",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.7-gke.0",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-02-17T08:39:16Z",
                    "generateName": "l7-default-backend-69fb9fd9f9-",
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "69fb9fd9f9"
                    },
                    "name": "l7-default-backend-69fb9fd9f9-tsbdw",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "l7-default-backend-69fb9fd9f9",
                            "uid": "329ec77a-6681-4ce0-9a9f-109bd7803afa"
                        }
                    ],
                    "resourceVersion": "106360644",
                    "uid": "78532bd7-0378-49d3-8753-9b257faf2b08"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "default-http-backend",
                            "image": "gke.gcr.io/ingress-gce-404-server-with-metrics:v1.13.4",
                            "ports": [
                                {
                                    "containerPort": 8080,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "20Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-tzb45",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 30,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "runAsUser": 1000,
                                "runAsGroup": 1000,
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "seccompProfile": {
                            "type": "RuntimeDefault"
                        }
                    },
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "kube-api-access-tzb45",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-hzzl8",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-01-30T11:07:41Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-hzzl8",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "96317676",
                    "uid": "3ade430d-0c66-404a-9380-12f70251d832"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-vfd8"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-km54k",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-km54k",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-km54k",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/cluster-autoscaler-status",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "status": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/last-updated": "2022-03-01 14:42:28.155775349 +0000 UTC"
                    },
                    "creationTimestamp": "2021-11-16T07:46:44Z",
                    "name": "cluster-autoscaler-status",
                    "namespace": "kube-system",
                    "resourceVersion": "113529675",
                    "uid": "679a01ac-573a-4d14-94c0-5b7809842ea3"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/kubelet-api-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "kubelet-api-admin",
                    "resourceVersion": "618",
                    "uid": "f98ce1bf-afa0-48ff-8955-e8c792e4ccba"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/proxy",
                            "nodes/log",
                            "nodes/stats",
                            "nodes/metrics",
                            "nodes/spec"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/certificate-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "certificate-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "229",
                    "uid": "396bc9d9-f517-46e2-876e-8e9af7086d47"
                },
                "secrets": [
                    {
                        "name": "certificate-controller-token-6vws2"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ServiceAccount/mysql-1645559415",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559415",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:50:23Z",
                    "labels": {
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559415",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520752",
                    "uid": "abde1832-0eea-41ba-9539-7cf7bd7fd98c"
                },
                "secrets": [
                    {
                        "name": "mysql-1645559415"
                    },
                    {
                        "name": "mysql-1645559415-token-fgxkw"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-posture",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:11Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-posture",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-posture",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "110639877",
                    "uid": "987cba58-47a6-4e16-afec-219e4c13d9ee"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-posture"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-posture",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-posture",
                                    "image": "quay.io/armosec/k8s-ca-posture-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_DASHBOARD_BACKEND",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "dashboard"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "ca-posture-score-config",
                                            "mountPath": "/resources/config"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "resourcesdict.json",
                                                "path": "resourcesdict.json"
                                            },
                                            {
                                                "key": "frameworkdict.json",
                                                "path": "frameworkdict.json"
                                            }
                                        ],
                                        "name": "ca-posture-score-config"
                                    },
                                    "name": "ca-posture-score-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/cluster-kubestore",
            "object": {
                "apiVersion": "v1",
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-a609d8f1a06a4e518784-db5b-7300-vm\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2022-02-26T02:29:46Z\",\"renewTime\":\"2022-03-01T14:42:31Z\",\"leaderTransitions\":19}"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "name": "cluster-kubestore",
                    "namespace": "kube-system",
                    "resourceVersion": "113529694",
                    "uid": "4ec0cb3c-3ee8-4dec-b093-07be62e55fc6"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-hpa-controller",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-uas-hpa-controller",
                            "resourceVersion": "588",
                            "uid": "ba40f5f7-3eb9-4f05-ae1a-7da1e25b7bfe"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:horizontal-pod-autoscaler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:horizontal-pod-autoscaler",
                            "resourceVersion": "82",
                            "uid": "91ddf68c-0907-48bf-be54-e0ae52e7eeee"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "http:heapster:",
                                    "https:heapster:"
                                ],
                                "resources": [
                                    "services/proxy"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "custom.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-6c7b8dc9f9",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "2",
                        "deployment.kubernetes.io/max-replicas": "3",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "generation": 4,
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "6c7b8dc9f9"
                    },
                    "name": "kube-dns-6c7b8dc9f9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns",
                            "uid": "f901e82b-2298-4f3f-b895-a7811979d002"
                        }
                    ],
                    "resourceVersion": "39471",
                    "uid": "416be7bc-60da-48ab-8618-10067c16bb67"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6c7b8dc9f9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "scheduler.alpha.kubernetes.io/critical-pod": "",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns",
                                "pod-template-hash": "6c7b8dc9f9"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "k8s-app",
                                                            "operator": "In",
                                                            "values": [
                                                                "kube-dns"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 100
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "kubedns",
                                    "image": "gke.gcr.io/k8s-dns-kube-dns-amd64:1.17.3-gke.0",
                                    "args": [
                                        "--domain=cluster.local.",
                                        "--dns-port=10053",
                                        "--config-dir=/kube-dns-config",
                                        "--v=2"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-local",
                                            "containerPort": 10053,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp-local",
                                            "containerPort": 10053,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "metrics",
                                            "containerPort": 10055,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "PROMETHEUS_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "210Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "70Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/kube-dns-config"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/kubedns",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/readiness",
                                            "port": 8081,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 3,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "dnsmasq",
                                    "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.17.3-gke.0",
                                    "args": [
                                        "-v=2",
                                        "-logtostderr",
                                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                        "-restartDnsmasq=true",
                                        "--",
                                        "-k",
                                        "--cache-size=1000",
                                        "--no-negcache",
                                        "--dns-forward-max=1500",
                                        "--log-facility=-",
                                        "--server=/cluster.local/127.0.0.1#10053",
                                        "--server=/in-addr.arpa/127.0.0.1#10053",
                                        "--server=/ip6.arpa/127.0.0.1#10053"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns",
                                            "containerPort": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp",
                                            "containerPort": 53,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "150m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/dnsmasq",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "NET_BIND_SERVICE",
                                                "SETGID"
                                            ],
                                            "drop": [
                                                "all"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "sidecar",
                                    "image": "gke.gcr.io/k8s-dns-sidecar-amd64:1.17.3-gke.0",
                                    "args": [
                                        "--v=2",
                                        "--logtostderr",
                                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 10054,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/metrics",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "prometheus-to-sd",
                                    "image": "gke.gcr.io/prometheus-to-sd:v0.4.2",
                                    "command": [
                                        "/monitor",
                                        "--source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits",
                                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                        "--api-override=https://monitoring.googleapis.com/",
                                        "--pod-id=$(POD_NAME)",
                                        "--namespace-id=$(POD_NAMESPACE)",
                                        "--v=2"
                                    ],
                                    "env": [
                                        {
                                            "name": "POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns",
                            "serviceAccountName": "kube-dns",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-dns",
                                        "optional": true
                                    },
                                    "name": "kube-dns-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:route-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:route-controller",
                    "resourceVersion": "91",
                    "uid": "8501bc59-9fd2-42fc-a002-9c7593e795ff"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/status"
                        ],
                        "verbs": [
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-crd-creator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-crd-creator",
                    "resourceVersion": "562",
                    "uid": "d8a685fd-a187-44ac-b148-a5a9563608fc"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "storage-version-migration-crd-creator"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:storageversionmigrator"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:clustermetrics",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "clustermetrics-rbac",
                        "components.gke.io/component-version": "1.4.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:clustermetrics",
                    "resourceVersion": "427",
                    "uid": "ef1de196-8e47-44bb-b491-ef8251b28ba7"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:clustermetrics"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:clustermetrics"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/uas-hpa-external-metrics-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "uas-hpa-external-metrics-reader",
                    "resourceVersion": "577",
                    "uid": "17c228db-1510-4e05-bcf2-b61e9b5e8aba"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "external-metrics-reader"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:vpa-recommender",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "default",
                    "namespace": "default",
                    "resourceVersion": "275",
                    "uid": "b2869082-749d-4924-ba57-dc350636decd"
                },
                "secrets": [
                    {
                        "name": "default-token-5n6j2"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-web-socket",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "17",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:50Z",
                    "generation": 17,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket",
                    "namespace": "armo-system",
                    "resourceVersion": "112927265",
                    "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-7c5966549",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-11-14T14:43:24Z",
                    "generation": 2,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "7c5966549",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-7c5966549",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "54597353",
                    "uid": "27b3a73e-d366-4963-b555-dd7ddbebec35"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "7c5966549"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "7c5966549",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Never"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/ReplicaSet/prod-mysql-7998c88786",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "1",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:13:39Z",
                    "generation": 1,
                    "labels": {
                        "app": "mysql",
                        "pod-template-hash": "7998c88786"
                    },
                    "name": "prod-mysql-7998c88786",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "prod-mysql",
                            "uid": "a93b978e-a185-4f6f-894d-274d127d0c4b"
                        }
                    ],
                    "resourceVersion": "109530140",
                    "uid": "c1843b03-af51-4c92-a4b5-38f00c28102d"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "mysql",
                            "pod-template-hash": "7998c88786"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "mysql",
                                "pod-template-hash": "7998c88786"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "mysql:5.6",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "prod-mysql-pass",
                                                    "key": "password"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "mysql-persistent-storage",
                                            "mountPath": "/var/lib/mysql"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "emptyDir": {},
                                    "name": "mysql-persistent-storage"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-scan-scheduler-27433440",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-28T00:00:00Z",
                    "labels": {
                        "controller-uid": "1b00959b-7b98-49b7-b8dc-a3281416012e",
                        "job-name": "armo-scan-scheduler-27433440"
                    },
                    "name": "armo-scan-scheduler-27433440",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-scan-scheduler",
                            "uid": "b9150dc3-678a-4279-bd82-90da97902a0e"
                        }
                    ],
                    "resourceVersion": "112622196",
                    "uid": "1b00959b-7b98-49b7-b8dc-a3281416012e"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "1b00959b-7b98-49b7-b8dc-a3281416012e"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "1b00959b-7b98-49b7-b8dc-a3281416012e",
                                "job-name": "armo-scan-scheduler-27433440"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-scan-scheduler",
                                    "image": "curlimages/curl:latest",
                                    "command": [
                                        "/bin/sh",
                                        "-c"
                                    ],
                                    "args": [
                                        "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "armo-scan-scheduler-volume",
                                            "readOnly": true,
                                            "mountPath": "/home/curl_user/trigger-script.sh",
                                            "subPath": "trigger-script.sh"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 511,
                                        "name": "armo-scan-scheduler-config"
                                    },
                                    "name": "armo-scan-scheduler-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-service-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-hpa-service-reader",
                    "resourceVersion": "578",
                    "uid": "e55e6271-79c1-49f6-bcf0-1a6d1998fe40"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-initializer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-initializer",
                    "resourceVersion": "563",
                    "uid": "659989c2-b46f-4492-b613-7227a0962ddf"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "storage-version-migration-initializer"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:storageversionmigrator"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-7c87c76cfb",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "2",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T12:39:28Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "pod-template-hash": "7c87c76cfb",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-7c87c76cfb",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "102358065",
                    "uid": "85f68962-2f29-40db-97c9-13cde804aecf"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "7c87c76cfb",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "pod-template-hash": "7c87c76cfb",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-rbac-58dc84f45",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:01Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-rbac",
                        "pod-template-hash": "58dc84f45",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-rbac-58dc84f45",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-rbac",
                            "uid": "da2af179-aa31-43c2-9cdb-77bc342d3a73"
                        }
                    ],
                    "resourceVersion": "96318223",
                    "uid": "364483da-cda1-44d3-9fcf-c66e5603da53"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-rbac",
                            "pod-template-hash": "58dc84f45"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-rbac",
                                "pod-template-hash": "58dc84f45",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-rbac",
                                    "image": "quay.io/armosec/k8s-ca-rbac-scanner-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "S3_BUCKET",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "AWS_REGION",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "AWS_ACCESS_KEY_ID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "ca-rbac",
                                                    "key": "keyid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "AWS_SECRET_ACCESS_KEY",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "ca-rbac",
                                                    "key": "keysecret"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "200m",
                                            "memory": "400Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:bootstrap-signer",
                    "namespace": "kube-system",
                    "resourceVersion": "140",
                    "uid": "190838f4-8434-40f8-9998-8c0410325c53"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-actor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-actor",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-hpa-actor",
                            "resourceVersion": "575",
                            "uid": "b3044624-a79a-4ed5-9521-5bd504dcc297"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-hpa-actor"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-hpa-actor",
                            "resourceVersion": "55353611",
                            "uid": "ea3cc8f1-5936-4a66-b6fa-854122f45b9f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "metrics.k8s.io",
                                    "v1",
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "custom.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:glbc/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:glbc",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:controller:glbc",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:controller:glbc",
                            "namespace": "kube-system",
                            "resourceVersion": "615",
                            "uid": "6be4a92a-70f5-4352-90db-210d0ca44876"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:glbc"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:controller:glbc"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:controller:glbc",
                            "namespace": "kube-system",
                            "resourceVersion": "106360638",
                            "uid": "1318cafc-611c-4bc4-acd7-4596d1845a73"
                        },
                        "rules": null
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:generic-garbage-collector",
                    "resourceVersion": "120",
                    "uid": "54dbcba4-3c7d-41fc-b5c5-dce109b3d021"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:generic-garbage-collector"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "generic-garbage-collector",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/fluentbit-gke",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "fluentbit-gke",
                    "namespace": "kube-system",
                    "resourceVersion": "365",
                    "uid": "ca809348-96c7-4c8a-ad02-3394674fb693"
                },
                "secrets": [
                    {
                        "name": "fluentbit-gke-token-rntxd"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/systest-ns-yza2/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:52:43Z",
                    "name": "default",
                    "namespace": "systest-ns-yza2",
                    "resourceVersion": "110053",
                    "uid": "f0380325-9923-411c-97dd-3d9fe92603e8"
                },
                "secrets": [
                    {
                        "name": "default-token-hhk7n"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-699f6b4f94",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "10",
                        "deployment.kubernetes.io/revision-history": "7"
                    },
                    "creationTimestamp": "2021-11-16T16:24:09Z",
                    "generation": 4,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "699f6b4f94",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-699f6b4f94",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "58928422",
                    "uid": "f5777b0d-40a4-47f4-88dc-3f21c9b97a0a"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "699f6b4f94"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "699f6b4f94",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-27435360",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-03-01T08:00:00Z",
                    "labels": {
                        "app": "armo-kubescape",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-kubescape",
                        "controller-uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "job-name": "armo-kubescape-27435360",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-27435360",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape",
                            "uid": "7b696788-5e23-410c-95e1-b573e12e456e"
                        }
                    ],
                    "resourceVersion": "113373631",
                    "uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-kubescape",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-kubescape",
                                "controller-uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "job-name": "armo-kubescape-27435360",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:dev-v2.0.237",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--host-scan-yaml",
                                        "/root/.kubescape/host-sensor.yaml",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        },
                                        {
                                            "name": "host-sensor-definition",
                                            "mountPath": "/root/.kubescape/host-sensor.yaml",
                                            "subPath": "host-sensor-yaml"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "host-sensor-definition"
                                    },
                                    "name": "host-sensor-definition"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-all-3bbfeaf0-4d91-4d92-bfaa-b704ed3f54",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-01-20T13:37:06Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-all-3bbfeaf0-4d91-4d92-bfaa-b704ed3f54",
                    "namespace": "armo-system",
                    "resourceVersion": "91066817",
                    "uid": "d2dd504c-5c79-4c7f-a752-b7e75abac99c"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "d2dd504c-5c79-4c7f-a752-b7e75abac99c"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "all",
                                "armo.jobid": "3bbfeaf0-4d91-4d92-bfaa-b704ed3f54c8"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "d2dd504c-5c79-4c7f-a752-b7e75abac99c",
                                "job-name": "armo-kubescape-on-demand-all-3bbfeaf0-4d91-4d92-bfaa-b704ed3f54"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.141",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "all",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/konnectivity-agent-cpha",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-cpha",
                    "namespace": "kube-system",
                    "resourceVersion": "49475075",
                    "uid": "02be0ff3-066d-4319-8be7-ccf8490d39e3"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "konnectivity-agent-cpha"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "konnectivity-agent-cpha",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-metrics-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-uas-metrics-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-uas-metrics-reader",
                            "resourceVersion": "586",
                            "uid": "8e4b883b-0161-4e4c-8df6-a3a42346ac38"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-uas-metrics-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-uas-metrics-reader",
                            "resourceVersion": "580",
                            "uid": "027a63a0-ee43-4e22-8d33-673e3deddc51"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:persistent-volume-binder",
                    "resourceVersion": "86",
                    "uid": "d1b01a0a-e68b-4eeb-ae51-adc6b27f1dbf"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "services"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:glbc-status",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "l7-lb-controller-combined",
                        "components.gke.io/component-version": "1.14.7-gke.0",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:glbc-status",
                    "resourceVersion": "106360637",
                    "uid": "2f1cd35d-fb53-4746-8153-087b29a18629"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:glbc-status"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:controller:glbc"
                    },
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:l7-lb-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-ocimage",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:03Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-ocimage",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-ocimage",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96317890",
                    "uid": "02e7c434-c3b1-4fa2-902e-6bab151d8992"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-ocimage"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-ocimage",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-ocimage",
                                    "image": "quay.io/armosec/k8s-ca-ocimage:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-ocimage-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-09T16:46:08Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046",
                    "namespace": "armo-system",
                    "resourceVersion": "102030848",
                    "uid": "fa78b287-7a24-4685-8424-af8de4c08831"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "fa78b287-7a24-4685-8424-af8de4c08831"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "MITRE",
                                "armo.jobid": "7b9cddc9-39e9-41ea-9246-f243d0460c70"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "fa78b287-7a24-4685-8424-af8de4c08831",
                                "job-name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.143",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "MITRE",
                                        "--submit",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-ocimage-b596d666-r7sxd",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:13Z",
                    "generateName": "ca-ocimage-b596d666-",
                    "labels": {
                        "app": "ca-ocimage",
                        "pod-template-hash": "b596d666",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-ocimage-b596d666-r7sxd",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-ocimage-b596d666",
                            "uid": "49065e00-934b-4dbd-9e95-848bbd721734"
                        }
                    ],
                    "resourceVersion": "96317887",
                    "uid": "70636526-0c8c-4417-acad-fb8ec894389a"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-ocimage",
                            "image": "quay.io/armosec/k8s-ca-ocimage:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "ca-ocimage-port",
                                    "containerPort": 8080,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "1",
                                    "memory": "1000Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "50Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-g5t6t",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-g5t6t",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "141",
                    "uid": "20736afd-2989-40c0-9bce-ff900c59ffe4"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/gke-common-webhook-lock",
            "object": {
                "apiVersion": "v1",
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-a609d8f1a06a4e518784-db5b-7300-vm_dcdb\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2022-02-26T02:29:52Z\",\"renewTime\":\"2022-03-01T14:42:31Z\",\"leaderTransitions\":19}"
                    },
                    "creationTimestamp": "2021-07-07T05:45:00Z",
                    "name": "gke-common-webhook-lock",
                    "namespace": "kube-system",
                    "resourceVersion": "113529692",
                    "uid": "b7a6b522-60a3-4089-8486-4cf4d67b9ad3"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:konnectivity-server/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:konnectivity-server",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:konnectivity-server",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.3.2",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-02T02:33:45Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:konnectivity-server",
                            "resourceVersion": "55353540",
                            "uid": "d017a8c1-9fbd-4327-930c-ab699418cb30"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:auth-delegator"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:konnectivity-server"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:auth-delegator",
                            "resourceVersion": "57",
                            "uid": "efcb51cd-c62c-44ed-8575-35c241b7595a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:public-info-viewer",
                    "resourceVersion": "45",
                    "uid": "8d1a0e99-295d-452d-bd99-83e6103d1508"
                },
                "rules": [
                    {
                        "nonResourceURLs": [
                            "/healthz",
                            "/livez",
                            "/readyz",
                            "/version",
                            "/version/"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-websocket",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:24:53Z",
                    "labels": {
                        "app": "ca-websocket"
                    },
                    "name": "ca-websocket",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52910986",
                    "uid": "f85333fa-b6a8-41e6-bc09-8bc0771d3f6c"
                },
                "spec": {
                    "clusterIP": "10.40.8.79",
                    "clusterIPs": [
                        "10.40.8.79"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "trigger-port",
                            "port": 4002,
                            "protocol": "TCP",
                            "targetPort": 4002
                        }
                    ],
                    "selector": {
                        "app": "ca-websocket"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet-bootstrap/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-node-bootstrapper",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kubelet-bootstrap",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:54Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "kubelet-bootstrap-node-bootstrapper",
                            "resourceVersion": "344",
                            "uid": "fd3bce65-265c-467c-be57-b30baff0d135"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-bootstrapper"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kubelet-bootstrap"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-bootstrapper",
                            "resourceVersion": "56",
                            "uid": "b626aea2-e9e1-4e17-b32d-c047a823832e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "expand-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:expand-controller",
                            "resourceVersion": "119",
                            "uid": "fd085575-586f-4c12-8b3a-b1164f951e2b"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:expand-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "expand-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:expand-controller",
                            "resourceVersion": "80",
                            "uid": "f97264ad-d70f-42ed-8e86-4e07ee745e30"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ttl-controller",
                    "resourceVersion": "134",
                    "uid": "97f636e1-622b-4abc-958e-8679380b9832"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:ttl-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "ttl-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:managed-certificate-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "managedcertificates",
                        "components.gke.io/component-version": "2.2.1",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:managed-certificate-controller",
                    "resourceVersion": "94208533",
                    "uid": "b8f6baeb-4324-4dbc-9d2c-ac2773e3d0b7"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:managed-certificate-controller"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:managed-certificate-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-node-lease/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "default",
                    "namespace": "kube-node-lease",
                    "resourceVersion": "291",
                    "uid": "d0eea1e5-df26-48f8-a6f4-169063ff807a"
                },
                "secrets": [
                    {
                        "name": "default-token-tzxml"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/generic-garbage-collector",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:39Z",
                    "name": "generic-garbage-collector",
                    "namespace": "kube-system",
                    "resourceVersion": "217",
                    "uid": "6f747887-2639-499d-8e10-80537bdb675a"
                },
                "secrets": [
                    {
                        "name": "generic-garbage-collector-token-8jmgv"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:bootstrap-signer",
                    "namespace": "kube-system",
                    "resourceVersion": "149",
                    "uid": "1101dec6-edbe-4f27-a181-af349c3287e6"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system:controller:bootstrap-signer"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "bootstrap-signer",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/host-sensor-definition",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "host-sensor-yaml": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:46Z",
                    "labels": {
                        "app": "armo-be-config",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "host-sensor-definition",
                    "namespace": "armo-system",
                    "resourceVersion": "112928906",
                    "uid": "5fd82e91-3fc6-4536-a20e-3284b7a2ef6a"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:basic-user",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:basic-user",
                    "resourceVersion": "44",
                    "uid": "605ba95e-b4aa-4f42-8d3b-239ddc8022ba"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "selfsubjectaccessreviews",
                            "selfsubjectrulesreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-controller-role-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:24:47Z",
                    "labels": {
                        "app": "ca-controller-role-binding",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-controller-role-binding",
                    "resourceVersion": "52910956",
                    "uid": "97d7e867-1eee-47f6-b3d9-bea598950bfc"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "ca-controller-roles"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "ca-controller-service-account",
                        "namespace": "cyberarmor-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/pdcsi-node",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deprecated.daemonset.template.generation": "3"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "generation": 3,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-node",
                    "namespace": "kube-system",
                    "resourceVersion": "100755067",
                    "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                },
                "spec": {
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "pdcsi",
                                "components.gke.io/component-version": "0.10.5"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "csi-driver-registrar",
                                    "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                                    "args": [
                                        "--v=5",
                                        "--csi-address=/csi/csi.sock",
                                        "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                                    ],
                                    "env": [
                                        {
                                            "name": "KUBE_NODE_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "spec.nodeName"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "plugin-dir",
                                            "mountPath": "/csi"
                                        },
                                        {
                                            "name": "registration-dir",
                                            "mountPath": "/registration"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "gce-pd-driver",
                                    "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                                    "args": [
                                        "--v=5",
                                        "--endpoint=unix:/csi/csi.sock",
                                        "--run-controller-service=false"
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubelet-dir",
                                            "mountPath": "/var/lib/kubelet",
                                            "mountPropagation": "Bidirectional"
                                        },
                                        {
                                            "name": "plugin-dir",
                                            "mountPath": "/csi"
                                        },
                                        {
                                            "name": "device-dir",
                                            "mountPath": "/dev"
                                        },
                                        {
                                            "name": "udev-rules-etc",
                                            "mountPath": "/etc/udev"
                                        },
                                        {
                                            "name": "udev-rules-lib",
                                            "mountPath": "/lib/udev"
                                        },
                                        {
                                            "name": "udev-socket",
                                            "mountPath": "/run/udev"
                                        },
                                        {
                                            "name": "sys",
                                            "mountPath": "/sys"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "privileged": true
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "hostNetwork": true,
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "pdcsi-node-sa",
                            "serviceAccountName": "pdcsi-node-sa",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/lib/kubelet/plugins_registry/",
                                        "type": "Directory"
                                    },
                                    "name": "registration-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/lib/kubelet",
                                        "type": "Directory"
                                    },
                                    "name": "kubelet-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                        "type": "DirectoryOrCreate"
                                    },
                                    "name": "plugin-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "/dev",
                                        "type": "Directory"
                                    },
                                    "name": "device-dir"
                                },
                                {
                                    "hostPath": {
                                        "path": "/etc/udev",
                                        "type": "Directory"
                                    },
                                    "name": "udev-rules-etc"
                                },
                                {
                                    "hostPath": {
                                        "path": "/lib/udev",
                                        "type": "Directory"
                                    },
                                    "name": "udev-rules-lib"
                                },
                                {
                                    "hostPath": {
                                        "path": "/run/udev",
                                        "type": "Directory"
                                    },
                                    "name": "udev-socket"
                                },
                                {
                                    "hostPath": {
                                        "path": "/sys",
                                        "type": "Directory"
                                    },
                                    "name": "sys"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "maxSurge": 0,
                            "maxUnavailable": "10%"
                        },
                        "type": "RollingUpdate"
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-27435360-lvvqw",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-03-01T08:00:00Z",
                    "generateName": "armo-kubescape-27435360-",
                    "labels": {
                        "app": "armo-kubescape",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-kubescape",
                        "controller-uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "job-name": "armo-kubescape-27435360",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-27435360-lvvqw",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-27435360",
                            "uid": "d741d2ce-72f5-4f14-835d-9eac06ad1081"
                        }
                    ],
                    "resourceVersion": "113373629",
                    "uid": "f315702c-3dea-4572-856b-c1c8ce9987e3"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:dev-v2.0.237",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--host-scan-yaml",
                                "/root/.kubescape/host-sensor.yaml",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "host-sensor-definition",
                                    "mountPath": "/root/.kubescape/host-sensor.yaml",
                                    "subPath": "host-sensor-yaml"
                                },
                                {
                                    "name": "kube-api-access-6hkfb",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "host-sensor-definition"
                            },
                            "name": "host-sensor-definition"
                        },
                        {
                            "name": "kube-api-access-6hkfb",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/cluster-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:cluster-autoscaler",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-16T07:46:30Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "cluster-autoscaler",
                            "resourceVersion": "55353530",
                            "uid": "ee9d1787-aba4-41ac-83f8-bf605465e781"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "cluster-autoscaler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:cluster-autoscaler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-16T07:46:30Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "cluster-autoscaler",
                            "resourceVersion": "55353529",
                            "uid": "b4163985-fe01-413f-97f0-0afdf6961740"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resourceNames": [
                                    "cluster-autoscaler"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services",
                                    "replicationcontrollers",
                                    "persistentvolumes",
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "replicasets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses",
                                    "csinodes",
                                    "csistoragecapacities",
                                    "csidrivers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "nodemanagement.gke.io"
                                ],
                                "resources": [
                                    "updateinfos"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "cluster-autoscaler-status"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update",
                                    "patch",
                                    "delete"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:l7-lb-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:glbc-status/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:glbc-status",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:l7-lb-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:glbc-status",
                            "resourceVersion": "106360637",
                            "uid": "2f1cd35d-fb53-4746-8153-087b29a18629"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:glbc-status"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:controller:glbc"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:l7-lb-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:glbc-status",
                            "resourceVersion": "106360636",
                            "uid": "185b790e-443c-4055-869a-13a3b514c67f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status",
                                    "services/status",
                                    "services"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "namespaces",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.gke.io"
                                ],
                                "resources": [
                                    "managedcertificates",
                                    "frontendconfigs",
                                    "servicenetworkendpointgroups",
                                    "gcpingressparams",
                                    "serviceattachments"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses/status",
                                    "ingressclasses",
                                    "ingresses"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "extensions"
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "events",
                                    "ingresses",
                                    "ingresses/status"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "cloud.google.com"
                                ],
                                "resources": [
                                    "backendconfigs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.istio.io"
                                ],
                                "resources": [
                                    "destinationrules"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/stackdriver:metadata-agent",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "stackdriver:metadata-agent",
                    "resourceVersion": "373",
                    "uid": "55df6789-82a7-4f60-b353-086ad88b9ad7"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "namespaces",
                            "nodes",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "ingresses"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "nonResourceURLs": [
                            "/metrics"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db5x48fw",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "",
                        "armo.jobid": "dd5aeb56-0ae7-4d4e-9163-3a402db55994"
                    },
                    "creationTimestamp": "2022-02-10T14:18:24Z",
                    "generateName": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994-",
                    "labels": {
                        "controller-uid": "5bab3608-9fd6-4106-9004-95611c3de3c9",
                        "job-name": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994"
                    },
                    "name": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db5x48fw",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994",
                            "uid": "5bab3608-9fd6-4106-9004-95611c3de3c9"
                        }
                    ],
                    "resourceVersion": "102538510",
                    "uid": "32f0878b-3da2-4a59-a580-4fc251eed04e"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-r42nb",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-r42nb",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-xcp0",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "c804593423f0644c7cc89e83e5128699",
                        "kubernetes.io/config.mirror": "c804593423f0644c7cc89e83e5128699",
                        "kubernetes.io/config.seen": "2022-01-30T11:07:36.371383185Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-01-30T11:07:39Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                            "uid": "bafcb6fc-8dae-4bb4-a584-b888e6cc0622"
                        }
                    ],
                    "resourceVersion": "96317516",
                    "uid": "f4c969f9-53d4-4e0f-a5b1-5afee3d6054d"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1//ClusterRole/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-scanner-service-account-role-binding",
            "object": {
                "kind": "ServiceAccount",
                "name": "armo-scanner-service-account",
                "namespace": "armo-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2021-12-09T15:04:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-scanner-service-account-role-binding",
                            "resourceVersion": "67723555",
                            "uid": "24f6fa59-f0f4-4d61-87a9-f02e5c10e00e"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "armo-scanner-service-account-roles"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "armo-scanner-service-account",
                                "namespace": "armo-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2021-12-09T15:04:49Z",
                            "labels": {
                                "app": "armo-vuln-scanner",
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-scanner-service-account-roles",
                            "resourceVersion": "67723554",
                            "uid": "c98b90b9-fe8f-4806-8ffa-bb73ee8e52ab"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list",
                                    "describe"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwbfbnw",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                        "armo.jobid": "770c5a29-8010-43cd-958e-766182eec3bd"
                    },
                    "creationTimestamp": "2022-02-11T11:22:37Z",
                    "generateName": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww-",
                    "labels": {
                        "controller-uid": "b23bd888-3217-4cbb-98cb-e17798935219",
                        "job-name": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
                    },
                    "name": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwbfbnw",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                            "uid": "b23bd888-3217-4cbb-98cb-e17798935219"
                        }
                    ],
                    "resourceVersion": "103034255",
                    "uid": "dfa55e99-6f10-481e-b5f4-935bb1bc1bd2"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-pbkct",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-pbkct",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "cluster-admin",
                    "resourceVersion": "100",
                    "uid": "069ee84e-6e0c-4049-b336-f60f36e1acd0"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "cluster-admin"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:masters"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:horizontal-pod-autoscaler",
                    "resourceVersion": "121",
                    "uid": "b4bca159-d05b-4f36-a7f5-415d2a1ac523"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:horizontal-pod-autoscaler"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "horizontal-pod-autoscaler",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:konnectivity-server",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:45Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:konnectivity-server",
                    "resourceVersion": "55353540",
                    "uid": "d017a8c1-9fbd-4327-930c-ab699418cb30"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:auth-delegator"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:konnectivity-server"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/kube-proxy",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "kube-proxy",
                    "namespace": "kube-system",
                    "resourceVersion": "594",
                    "uid": "22b33316-029f-485a-8e22-097394278296"
                },
                "secrets": [
                    {
                        "name": "kube-proxy-token-qclsf"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/metadata-proxy",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "metadata-proxy",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metadata-proxy",
                    "namespace": "kube-system",
                    "resourceVersion": "383",
                    "uid": "ffd750fa-89db-4d1b-9d3a-d5373eb888b7"
                },
                "secrets": [
                    {
                        "name": "metadata-proxy-token-jk5gt"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/konnectivity-agent-autoscaler-6cb774c9cc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-02T02:33:48Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "konnectivity-agent-autoscaler",
                        "pod-template-hash": "6cb774c9cc"
                    },
                    "name": "konnectivity-agent-autoscaler-6cb774c9cc",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "konnectivity-agent-autoscaler",
                            "uid": "7826cb7c-7f4f-40cc-9e0b-7867cada7921"
                        }
                    ],
                    "resourceVersion": "55353651",
                    "uid": "057c1bf1-04ed-4431-a14d-6cfac601a7b2"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent-autoscaler",
                            "pod-template-hash": "6cb774c9cc"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.2.10"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent-autoscaler",
                                "pod-template-hash": "6cb774c9cc"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler:1.8.4-gke.1",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=konnectivity-agent-autoscaler-config",
                                        "--target=deployment/konnectivity-agent",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent-cpha",
                            "serviceAccountName": "konnectivity-agent-cpha",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww",
                    "namespace": "armo-system",
                    "resourceVersion": "105912703",
                    "uid": "cc702f9d-9042-48c4-b334-8df830b915ab"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "cc702f9d-9042-48c4-b334-8df830b915ab"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                "armo.jobid": "200a7faf-98ad-48b3-a10d-555da7ee4089"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "cc702f9d-9042-48c4-b334-8df830b915ab",
                                "job-name": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-bootstrap",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:beta:kubelet-certificate-bootstrap",
                    "resourceVersion": "619",
                    "uid": "0a9f321d-4bd5-4067-8f2a-03910a214352"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gce:beta:kubelet-certificate-bootstrap"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kubelet"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ServiceAccount/mysql-1645559751",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559751",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:56:00Z",
                    "labels": {
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559751",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109522944",
                    "uid": "66c0fd40-c06a-4905-a3ef-e9b55222fcbd"
                },
                "secrets": [
                    {
                        "name": "mysql-1645559751"
                    },
                    {
                        "name": "mysql-1645559751-token-v8pcd"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-recurring-4681143087714448482-nsa-27425637-6dfk6",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "NSA",
                        "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                    },
                    "creationTimestamp": "2022-02-22T13:57:00Z",
                    "generateName": "armo-kubescape-recurring-4681143087714448482-nsa-27425637-",
                    "labels": {
                        "controller-uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637-6dfk6",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637",
                            "uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf"
                        }
                    ],
                    "resourceVersion": "109382946",
                    "uid": "d205ea08-00af-473f-a118-73ad336ba2a6"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.148",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "NSA",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-kqwb5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-kqwb5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/metrics-server-auth-reader",
            "object": {
                "kind": "ServiceAccount",
                "name": "metrics-server",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "metrics-server-auth-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "388",
                            "uid": "25987c50-f2c2-4f60-9c3d-2c6689c55162"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "extension-apiserver-authentication-reader"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "extension-apiserver-authentication-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "139",
                            "uid": "37c07cf8-13cd-4768-988a-1e30a2e211be"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "extension-apiserver-authentication"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/ca-mutate-cfg",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "MutatingWebhookConfiguration",
                "metadata": {
                    "creationTimestamp": "2021-11-10T14:25:16Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-mutate-cfg",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-mutate-cfg",
                    "resourceVersion": "55353203",
                    "uid": "ba671990-ae68-482f-9fcf-d13db80e4c3a"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/mutate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.mutate-wl-label.v1",
                        "namespaceSelector": {},
                        "objectSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.attach",
                                    "operator": "In",
                                    "values": [
                                        "true"
                                    ]
                                }
                            ]
                        },
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "pods",
                                    "replicationcontrollers"
                                ],
                                "scope": "Namespaced"
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "scope": "Namespaced"
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "scope": "Namespaced"
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "apiVersions": [
                                    "v1beta1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "cronjobs"
                                ],
                                "scope": "Namespaced"
                            }
                        ],
                        "sideEffects": "NoneOnDryRun",
                        "timeoutSeconds": 30
                    },
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/mutate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.mutate-ns-label.v1",
                        "namespaceSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.attach",
                                    "operator": "In",
                                    "values": [
                                        "true"
                                    ]
                                }
                            ]
                        },
                        "objectSelector": {},
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "pods",
                                    "replicationcontrollers",
                                    "namespaces"
                                ],
                                "scope": "*"
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "scope": "Namespaced"
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "scope": "Namespaced"
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "apiVersions": [
                                    "v1beta1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "cronjobs"
                                ],
                                "scope": "Namespaced"
                            }
                        ],
                        "sideEffects": "NoneOnDryRun",
                        "timeoutSeconds": 30
                    },
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/mutate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.mutate-ns.v1",
                        "namespaceSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.attach",
                                    "operator": "In",
                                    "values": [
                                        "false"
                                    ]
                                }
                            ]
                        },
                        "objectSelector": {},
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "NoneOnDryRun",
                        "timeoutSeconds": 30
                    },
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/mutate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.mutate-secret.v1",
                        "namespaceSelector": {},
                        "objectSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.secret",
                                    "operator": "In",
                                    "values": [
                                        "protect",
                                        "clear",
                                        "true",
                                        "false"
                                    ]
                                }
                            ]
                        },
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE",
                                    "DELETE"
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "scope": "Namespaced"
                            }
                        ],
                        "sideEffects": "NoneOnDryRun",
                        "timeoutSeconds": 30
                    },
                    {
                        "admissionReviewVersions": [
                            "v1beta1",
                            "v1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVVEYxeEFYZEl6enBjait0ekxJNW4xVk9jT3hzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01ZV1J0YVhOemFXOXVYMk5oTUNBWERUSXhNVEV4TURFME1qUTFNRm9ZRHpJeQpPVFV3T0RJMk1UUXlORFV3V2pBWE1SVXdFd1lEVlFRRERBeGhaRzFwYzNOcGIyNWZZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNkWW9JQ2Z3a1ZWQngyQmhCS1I4bGlMai9mOE5jb1cyYW4KdWFiNm9JYzNvQmlQVk9jNW5uRmg0T1BjU1hvdGNNUGJlYnRlV3NjMVpNUlRyeWR1SVJ2MC9rLzZrYVFEZjlMVwpyeHlZNy9lcWJFdm5CSGQzcTcvRXY3YWFHN1owenBNcGQxMEI2SU1KZk5hRUIwdUVQNjJTL0RyR0hUcXdYdFBGCmtWTFlORDNXMTVOeG1PZjZUOXpMb0RtbkVVbENxOG1DT0dpeHdUa2NLUUg2SW0rd1RBM3J0MFNLSXRvQmVyS0cKeGZ6eGJVeHdWNEtZbDVwSXhuUFQ0T0ovY2MweWpqR1pqY1dLRExOMSt4SkkzaUNyRGJ2YWhpMTVEclBFMkNFZgpnOFRxa08vUVpTTXdJRVQwV2xINm5vakJ0U2Y2VWJsNHdBNSswU2M2WDBvaTBXanNvcjRuQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2NDTUtsTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFmQmdOVkhTTUVHREFXZ0JTY0NNS2wKTkM3U3BHekhFeS9YUnUrVHNhOEdyVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBbkZOY2dNaXZGYWYxaVhyNzNwUnpYWHpBY2lXeFNPd0k5OWNZZTduRHpWSmc5VThiN2ZSWmtZYXNCCmk3WGVpNkdqTzl1SGhRNXBxREF3Vy9nMG9KVFF2eHZBdXdDUEc5UHg5ekQ2SWJKei94eVVUSVh3TEdINnRud0oKRzByQ0tuOUlVQmVQUkZ0c3RIcVhqOURGYkpia014bFZMSnU3UGNJa1JpQzZ5dWs1L2gzR0czVjljWW1PN0J6NQowSXRTMlErT3BjbmJ4dGZBTlVUZjh0dDh0WEpFK2JpZHBmaFN5WXFjL0NETzFaN3ZyWTJBRDNoZU5KM0lPeW1ZClQwUVhCR1BXT3hqeWFOVGlGZmQxYjBXd0dUNzZ4eTBWeGVhWXBsMy9FNjZaeHFTSjZPZmFwa0ZKWEJnRUkxalQKMVc2MHRjcG00OHFiQTE2eFp2eGxBR3E0Y2loaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "service": {
                                "name": "ca-webhook",
                                "namespace": "cyberarmor-system",
                                "path": "/mutate",
                                "port": 443
                            }
                        },
                        "failurePolicy": "Fail",
                        "matchPolicy": "Equivalent",
                        "name": "armo.mutate-ns-secret.v1",
                        "namespaceSelector": {
                            "matchExpressions": [
                                {
                                    "key": "armo.secret",
                                    "operator": "In",
                                    "values": [
                                        "protect",
                                        "clear",
                                        "true",
                                        "false"
                                    ]
                                }
                            ]
                        },
                        "objectSelector": {},
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE",
                                    "DELETE"
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "scope": "Namespaced"
                            }
                        ],
                        "sideEffects": "NoneOnDryRun",
                        "timeoutSeconds": 30
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-4888289602749810007-szh-fw",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-28T09:05:44Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-4888289602749810007-szh-fw",
                    "namespace": "armo-system",
                    "resourceVersion": "112834974",
                    "uid": "2db19a65-7ae2-4c06-8c3a-34de728f83b7"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "2db19a65-7ae2-4c06-8c3a-34de728f83b7"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "szh_fw",
                                "armo.jobid": "10043712-ce4e-4512-aea9-b3e0b5d44715"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "2db19a65-7ae2-4c06-8c3a-34de728f83b7",
                                "job-name": "armo-kubescape-on-demand-4888289602749810007-szh-fw"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.148",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "szh_fw",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1beta1/armo-system/CronJob/armo-kubescape",
            "object": {
                "apiVersion": "batch/v1beta1",
                "kind": "CronJob",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:55Z",
                    "labels": {
                        "app": "armo-kubescape",
                        "app.kubernetes.io/managed-by": "Helm",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape",
                    "namespace": "armo-system",
                    "resourceVersion": "113373634",
                    "uid": "7b696788-5e23-410c-95e1-b573e12e456e"
                },
                "spec": {
                    "concurrencyPolicy": "Allow",
                    "failedJobsHistoryLimit": 1,
                    "jobTemplate": {
                        "metadata": {
                            "creationTimestamp": null
                        },
                        "spec": {
                            "template": {
                                "metadata": {
                                    "creationTimestamp": null,
                                    "labels": {
                                        "app": "armo-kubescape",
                                        "app.kubernetes.io/instance": "armo",
                                        "app.kubernetes.io/name": "armo-kubescape",
                                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                                        "tier": "armo-system-control-plane"
                                    }
                                },
                                "spec": {
                                    "automountServiceAccountToken": true,
                                    "containers": [
                                        {
                                            "name": "kubescape",
                                            "image": "quay.io/armosec/kubescape:dev-v2.0.237",
                                            "command": [
                                                "kubescape"
                                            ],
                                            "args": [
                                                "scan",
                                                "--submit",
                                                "--logger",
                                                "debug",
                                                "--host-scan-yaml",
                                                "/root/.kubescape/host-sensor.yaml",
                                                "--enable-host-scan",
                                                "--environment=dev"
                                            ],
                                            "env": [
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                                    "value": "XXXXXX"
                                                },
                                                {
                                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                                    "value": "XXXXXX"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "500m",
                                                    "memory": "500Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "name": "kubescape-config-volume",
                                                    "mountPath": "/root/.kubescape/config.json",
                                                    "subPath": "config.json"
                                                },
                                                {
                                                    "name": "host-sensor-definition",
                                                    "mountPath": "/root/.kubescape/host-sensor.yaml",
                                                    "subPath": "host-sensor-yaml"
                                                }
                                            ],
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "imagePullPolicy": "Always"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "OnFailure",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "serviceAccount": "armo-kubescape-service-account",
                                    "serviceAccountName": "armo-kubescape-service-account",
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "armo-kubescape-config"
                                            },
                                            "name": "kubescape-config-volume"
                                        },
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "host-sensor-definition"
                                            },
                                            "name": "host-sensor-definition"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "schedule": "0 8 * * *",
                    "successfulJobsHistoryLimit": 3,
                    "suspend": false
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/kube-system/User/system:vpa-recommender/rbac.authorization.k8s.io/v1//ClusterRole/system:gke-hpa-service-reader/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gke-hpa-service-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:vpa-recommender",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-hpa-service-reader",
                            "resourceVersion": "579",
                            "uid": "6dce4483-3e52-43d0-8fe3-3a3f7fd7dd95"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:gke-hpa-service-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:vpa-recommender",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:gke-hpa-service-reader",
                            "resourceVersion": "578",
                            "uid": "e55e6271-79c1-49f6-bcf0-1a6d1998fe40"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-bootstrap",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:beta:kubelet-certificate-bootstrap",
                    "resourceVersion": "622",
                    "uid": "d8b389fd-e2a6-4605-896d-37ce98becba6"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests/nodeclient"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-56646bfd69",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "2",
                        "deployment.kubernetes.io/max-replicas": "3",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-07-07T07:34:39Z",
                    "generation": 4,
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "56646bfd69"
                    },
                    "name": "kube-dns-56646bfd69",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns",
                            "uid": "f901e82b-2298-4f3f-b895-a7811979d002"
                        }
                    ],
                    "resourceVersion": "52904883",
                    "uid": "4017115e-b882-4943-b612-f90fa62ec495"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "56646bfd69"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "scheduler.alpha.kubernetes.io/critical-pod": "",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns",
                                "pod-template-hash": "56646bfd69"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "k8s-app",
                                                            "operator": "In",
                                                            "values": [
                                                                "kube-dns"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 100
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "kubedns",
                                    "image": "gke.gcr.io/k8s-dns-kube-dns-amd64:1.17.3-gke.0",
                                    "args": [
                                        "--domain=cluster.local.",
                                        "--dns-port=10053",
                                        "--config-dir=/kube-dns-config",
                                        "--v=2"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-local",
                                            "containerPort": 10053,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp-local",
                                            "containerPort": 10053,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "metrics",
                                            "containerPort": 10055,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "PROMETHEUS_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "210Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "70Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/kube-dns-config"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/kubedns",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/readiness",
                                            "port": 8081,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 3,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "dnsmasq",
                                    "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.17.3-gke.0",
                                    "args": [
                                        "-v=2",
                                        "-logtostderr",
                                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                        "-restartDnsmasq=true",
                                        "--",
                                        "-k",
                                        "--cache-size=1000",
                                        "--no-negcache",
                                        "--dns-forward-max=1500",
                                        "--log-facility=-",
                                        "--server=/cluster.local/127.0.0.1#10053",
                                        "--server=/in-addr.arpa/127.0.0.1#10053",
                                        "--server=/ip6.arpa/127.0.0.1#10053"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns",
                                            "containerPort": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp",
                                            "containerPort": 53,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "150m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/dnsmasq",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "NET_BIND_SERVICE",
                                                "SETGID"
                                            ],
                                            "drop": [
                                                "all"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "sidecar",
                                    "image": "gke.gcr.io/k8s-dns-sidecar-amd64:1.17.3-gke.0",
                                    "args": [
                                        "--v=2",
                                        "--logtostderr",
                                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 10054,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/metrics",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns",
                            "serviceAccountName": "kube-dns",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-dns",
                                        "optional": true
                                    },
                                    "name": "kube-dns-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-14T15:46:58Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843",
                    "namespace": "armo-system",
                    "resourceVersion": "104834121",
                    "uid": "88df8956-13df-4100-bae4-383249972bf4"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "88df8956-13df-4100-bae4-383249972bf4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "46d6e38e-9ba9-4323-8b8c-70eff26d3843"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "88df8956-13df-4100-bae4-383249972bf4",
                                "job-name": "armo-kubescape-on-demand--46d6e38e-9ba9-4323-8b8c-70eff26d3843"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beae5cf7c",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "test",
                        "armo.jobid": "350cd729-7f6d-4675-bf11-beaeca779122"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779-",
                    "labels": {
                        "controller-uid": "bc7b4fb7-6d07-4f80-ad61-3f3c2082ff45",
                        "job-name": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779"
                    },
                    "name": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beae5cf7c",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779",
                            "uid": "bc7b4fb7-6d07-4f80-ad61-3f3c2082ff45"
                        }
                    ],
                    "resourceVersion": "105913186",
                    "uid": "1c99cd40-f336-4098-afc8-fb8d455cc41b"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "test",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-9xndv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-9xndv",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:service-account-issuer-discovery",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-29T02:28:25Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:service-account-issuer-discovery",
                    "resourceVersion": "10647919",
                    "uid": "d7ba29b4-0df1-44b3-96b2-55721bdb1792"
                },
                "rules": [
                    {
                        "nonResourceURLs": [
                            "/.well-known/openid-configuration",
                            "/openid/v1/jwks"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:authenticated",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:public-info-viewer",
                            "resourceVersion": "103",
                            "uid": "9ccfba0d-1355-4267-8cf4-39b1acbe89b9"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:public-info-viewer"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:authenticated"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:unauthenticated"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:public-info-viewer",
                            "resourceVersion": "45",
                            "uid": "8d1a0e99-295d-452d-bd99-83e6103d1508"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/livez",
                                    "/readyz",
                                    "/version",
                                    "/version/"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:job-controller",
                    "resourceVersion": "83",
                    "uid": "85df3f96-3cd1-4429-af15-eb9f8d9a8f5b"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs/finalizers"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "list",
                            "patch",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/Service/metrics-server",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true",
                        "kubernetes.io/name": "Metrics-server"
                    },
                    "name": "metrics-server",
                    "namespace": "kube-system",
                    "resourceVersion": "400",
                    "uid": "2f628fb8-c3b6-40f8-84ec-a0e9482d6503"
                },
                "spec": {
                    "clusterIP": "10.40.7.182",
                    "clusterIPs": [
                        "10.40.7.182"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": "https"
                        }
                    ],
                    "selector": {
                        "k8s-app": "metrics-server"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-3965444195973265759-devopsbest-cjzrb",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "DevOpsBest",
                        "armo.jobid": "8df67f86-bb4d-4421-821c-bc044463e8de"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-3965444195973265759-devopsbest-",
                    "labels": {
                        "controller-uid": "c995fd55-9d5d-4425-952e-427ec8c6d1ff",
                        "job-name": "armo-kubescape-on-demand-3965444195973265759-devopsbest"
                    },
                    "name": "armo-kubescape-on-demand-3965444195973265759-devopsbest-cjzrb",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-3965444195973265759-devopsbest",
                            "uid": "c995fd55-9d5d-4425-952e-427ec8c6d1ff"
                        }
                    ],
                    "resourceVersion": "105912733",
                    "uid": "2749bf21-0e1a-4f51-a004-5406d23e1b76"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "DevOpsBest",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-vps67",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-vps67",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-public/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "kube-public",
                    "resourceVersion": "290",
                    "uid": "3c2464bb-9f61-4b0b-9c4b-04206f157b03"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "certificate-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:certificate-controller",
                            "resourceVersion": "135",
                            "uid": "b9a9cc6e-b602-4007-a95f-51b3024f2e2c"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:certificate-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "certificate-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:certificate-controller",
                            "resourceVersion": "96",
                            "uid": "b79c64f1-b897-4f22-b3f7-085823fe5c2c"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/approval",
                                    "certificatesigningrequests/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client-kubelet"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "verbs": [
                                    "approve"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client",
                                    "kubernetes.io/kube-apiserver-client-kubelet",
                                    "kubernetes.io/kubelet-serving",
                                    "kubernetes.io/legacy-unknown"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "verbs": [
                                    "sign"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "pvc-protection-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pvc-protection-controller",
                            "resourceVersion": "136",
                            "uid": "10159089-bb6d-4c13-8d2a-1694fc1f3739"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pvc-protection-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pvc-protection-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:pvc-protection-controller",
                            "resourceVersion": "97",
                            "uid": "ba021b69-4810-4731-9458-8bde16a69198"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-2305597503072840094-armobest-nxd7s",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "ArmoBest",
                        "armo.jobid": "ed90682b-d928-4503-94f4-c9580e9e280c"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-2305597503072840094-armobest-",
                    "labels": {
                        "controller-uid": "4530f7c8-0226-47b7-b31f-64b926cf657b",
                        "job-name": "armo-kubescape-on-demand-2305597503072840094-armobest"
                    },
                    "name": "armo-kubescape-on-demand-2305597503072840094-armobest-nxd7s",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-2305597503072840094-armobest",
                            "uid": "4530f7c8-0226-47b7-b31f-64b926cf657b"
                        }
                    ],
                    "resourceVersion": "105912969",
                    "uid": "570c3c64-787b-4dbf-83dc-230435fd4c35"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "ArmoBest",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-tljbj",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-tljbj",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/event-exporter-rb",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "event-exporter",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "event-exporter-rb",
                    "resourceVersion": "350",
                    "uid": "2557b8f1-d433-4d82-bc10-4a3e3269b9c2"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "view"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "event-exporter-sa",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:cloud-provider",
                    "resourceVersion": "598",
                    "uid": "bc69f459-4482-4120-82b5-7acd39d43064"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gce:cloud-provider"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "cloud-provider",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpoint-controller",
                    "resourceVersion": "116",
                    "uid": "a2c4485f-33ae-4756-9d3c-77682ca7a6eb"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:endpoint-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "endpoint-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-scheduler",
                    "resourceVersion": "107",
                    "uid": "a9629605-7527-4613-88dd-318e246ecfe0"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:kube-scheduler"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-scheduler"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-29T02:28:26Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:service-account-issuer-discovery",
                    "resourceVersion": "10647921",
                    "uid": "4fbb0c42-6353-4b32-b57d-9ec2c93bfb30"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:service-account-issuer-discovery"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:serviceaccounts"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/konnectivity-agent",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:45Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "konnectivity-agent",
                    "namespace": "kube-system",
                    "resourceVersion": "55353543",
                    "uid": "eb3a21ed-5142-4a0a-a874-26b980a65a8c"
                },
                "secrets": [
                    {
                        "name": "konnectivity-agent-token-lx2mb"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-recurring-27434385",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-28T15:45:00Z",
                    "labels": {
                        "controller-uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120",
                        "job-name": "armo-kubescape-recurring-27434385"
                    },
                    "name": "armo-kubescape-recurring-27434385",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape-recurring",
                            "uid": "9f43b386-3dc3-4616-a5de-4b922d04021c"
                        }
                    ],
                    "resourceVersion": "112995781",
                    "uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "3d8035b4-18ca-42dc-955e-5c9a7631b9d9"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "2ec0cdc0-d418-4aca-bcf5-8391de072120",
                                "job-name": "armo-kubescape-recurring-27434385"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f24mmrf4",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "MITRE",
                        "armo.jobid": "7b9cddc9-39e9-41ea-9246-f243d0460c70"
                    },
                    "creationTimestamp": "2022-02-09T16:46:08Z",
                    "generateName": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046-",
                    "labels": {
                        "controller-uid": "fa78b287-7a24-4685-8424-af8de4c08831",
                        "job-name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046"
                    },
                    "name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f24mmrf4",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046",
                            "uid": "fa78b287-7a24-4685-8424-af8de4c08831"
                        }
                    ],
                    "resourceVersion": "102030336",
                    "uid": "a1695918-eba8-45ff-b820-907927e0de48"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.143",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "MITRE",
                                "--submit",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-sntgs",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-sntgs",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/default/ConfigMap/users-initdb-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "seed.js": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-10-13T12:51:53Z",
                    "name": "users-initdb-config",
                    "namespace": "default",
                    "resourceVersion": "41559678",
                    "uid": "64220a56-e642-4c82-a179-3ad4de28b1f0"
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/ServiceAccount/armo-kubescape-service-account",
            "object": {
                "apiVersion": "v1",
                "automountServiceAccountToken": false,
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-vuln-scanner",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-kubescape-service-account",
                    "namespace": "armo-system",
                    "resourceVersion": "89293136",
                    "uid": "0e88e74e-aecc-44a7-8a2a-c986a4126c0e"
                },
                "secrets": [
                    {
                        "name": "armo-kubescape-service-account-token-m877p"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/root-ca-cert-publisher",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:49Z",
                    "name": "root-ca-cert-publisher",
                    "namespace": "kube-system",
                    "resourceVersion": "261",
                    "uid": "9ba8521f-1bc4-4c8a-a329-8a063b954ba0"
                },
                "secrets": [
                    {
                        "name": "root-ca-cert-publisher-token-nkd7k"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/kube-node-lease",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:33Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "kube-node-lease"
                    },
                    "name": "kube-node-lease",
                    "resourceVersion": "30",
                    "uid": "431a0cb5-9de1-4985-85b4-f3407e2358da"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwh56rb",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                        "armo.jobid": "200a7faf-98ad-48b3-a10d-555da7ee4089"
                    },
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "generateName": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww-",
                    "labels": {
                        "controller-uid": "cc702f9d-9042-48c4-b334-8df830b915ab",
                        "job-name": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww"
                    },
                    "name": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwh56rb",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-5484128832501724627-wwwwwwwwwwwwwwwwww",
                            "uid": "cc702f9d-9042-48c4-b334-8df830b915ab"
                        }
                    ],
                    "resourceVersion": "105912701",
                    "uid": "24b5f8d9-a8fa-4747-bd46-32e555f3455f"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.147",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-pxkbn",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-pxkbn",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-resizer-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-resizer-role",
                    "resourceVersion": "55353591",
                    "uid": "42a82d15-cf82-4b2d-ae01-55a9353a746e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims/status"
                        ],
                        "verbs": [
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "list",
                            "watch",
                            "create",
                            "update",
                            "patch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:bootstrap-signer",
                    "namespace": "kube-public",
                    "resourceVersion": "152",
                    "uid": "fa616426-234e-4da8-94ca-9f4dfa14fc9e"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system:controller:bootstrap-signer"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "bootstrap-signer",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-trigger/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-trigger",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:storageversionmigrator",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-trigger",
                            "resourceVersion": "561",
                            "uid": "08ae39db-a8e9-4ec5-a1c3-b7415028a46f"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "storage-version-migration-trigger"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:storageversionmigrator"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-trigger",
                            "resourceVersion": "556",
                            "uid": "8d8cec9e-20ac-4e49-b9f0-19211d51cb82"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "migration.k8s.io"
                                ],
                                "resources": [
                                    "storagestates"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list",
                                    "delete",
                                    "create",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "migration.k8s.io"
                                ],
                                "resources": [
                                    "storageversionmigrations"
                                ],
                                "verbs": [
                                    "watch",
                                    "get",
                                    "list",
                                    "delete",
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/deployment-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "deployment-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "186",
                    "uid": "7a0ee70d-712f-40fe-9397-47674fc69898"
                },
                "secrets": [
                    {
                        "name": "deployment-controller-token-mzdq7"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/endpointslice-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:38Z",
                    "name": "endpointslice-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "209",
                    "uid": "a2595898-7ca7-405a-8582-c568225b3f8e"
                },
                "secrets": [
                    {
                        "name": "endpointslice-controller-token-lgdhh"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-recurring-4681143087714448482-nsa-27425637",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-22T13:57:00Z",
                    "labels": {
                        "controller-uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa",
                            "uid": "989af35e-5161-49be-aeab-eab2d2918235"
                        }
                    ],
                    "resourceVersion": "109382948",
                    "uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "NSA",
                                "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "564c459d-2a49-4a72-98c9-ec2268aca5cf",
                                "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425637"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.148",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "NSA",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-832hpw2h",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "not-exists",
                        "armo.jobid": "1528ea73-fb86-47c8-8320-c618952f8b20"
                    },
                    "creationTimestamp": "2022-02-10T13:54:22Z",
                    "generateName": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61-",
                    "labels": {
                        "controller-uid": "547eee4c-62cf-4907-9ddd-4825e463dc62",
                        "job-name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-832hpw2h",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-not-exists-1528ea73-fb86-47c8-8320-c61",
                            "uid": "547eee4c-62cf-4907-9ddd-4825e463dc62"
                        }
                    ],
                    "resourceVersion": "102528547",
                    "uid": "ed6b4870-aa0c-4ca5-bbb2-55fa74607cc8"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "not-exists",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-5kcrc",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-5kcrc",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-posture-6c9645b685-r4gdf",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:14Z",
                    "generateName": "ca-posture-6c9645b685-",
                    "labels": {
                        "app": "ca-posture",
                        "pod-template-hash": "6c9645b685",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-posture-6c9645b685-r4gdf",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-posture-6c9645b685",
                            "uid": "45bc8dc8-fb6e-4b64-8d72-b453766817fe"
                        }
                    ],
                    "resourceVersion": "110639873",
                    "uid": "5f4edbcf-9863-4ff8-92da-39ee6f26ec5e"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-posture",
                            "image": "quay.io/armosec/k8s-ca-posture-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "readiness-port",
                                    "containerPort": 8000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverREST"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_DASHBOARD_BACKEND",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "dashboard"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "100Mi"
                                },
                                "requests": {
                                    "cpu": "100m",
                                    "memory": "50Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "ca-login",
                                    "readOnly": true,
                                    "mountPath": "/etc/credentials"
                                },
                                {
                                    "name": "ca-posture-score-config",
                                    "mountPath": "/resources/config"
                                },
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-r2zff",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/v1/readiness",
                                    "port": "readiness-port",
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "ca-login",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "ca-login"
                            }
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "resourcesdict.json",
                                        "path": "resourcesdict.json"
                                    },
                                    {
                                        "key": "frameworkdict.json",
                                        "path": "frameworkdict.json"
                                    }
                                ],
                                "name": "ca-posture-score-config"
                            },
                            "name": "ca-posture-score-config"
                        },
                        {
                            "name": "kube-api-access-r2zff",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/ConfigMap/armo-scan-scheduler-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "trigger-script.sh": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app": "armo-scan-scheduler",
                        "app.kubernetes.io/managed-by": "Helm",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-scan-scheduler-config",
                    "namespace": "armo-system",
                    "resourceVersion": "67723552",
                    "uid": "69121c8e-ff19-4508-82e8-56a3bcafeafd"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/system:service-account-issuer-discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:serviceaccounts",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-29T02:28:26Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:service-account-issuer-discovery",
                            "resourceVersion": "10647921",
                            "uid": "4fbb0c42-6353-4b32-b57d-9ec2c93bfb30"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:service-account-issuer-discovery"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:serviceaccounts"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-29T02:28:25Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:service-account-issuer-discovery",
                            "resourceVersion": "10647919",
                            "uid": "d7ba29b4-0df1-44b3-96b2-55721bdb1792"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/.well-known/openid-configuration",
                                    "/openid/v1/jwks"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ttl-controller",
                    "resourceVersion": "95",
                    "uid": "537be3d1-c4e9-42d6-b23e-37e90a2aac0c"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "list",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/view",
            "object": {
                "aggregationRule": {
                    "clusterRoleSelectors": [
                        {
                            "matchLabels": {
                                "rbac.authorization.k8s.io/aggregate-to-view": "true"
                            }
                        }
                    ]
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults",
                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                    },
                    "name": "view",
                    "resourceVersion": "279",
                    "uid": "34925f7c-3d21-41e3-a418-007e285f6140"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "persistentvolumeclaims/status",
                            "pods",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "serviceaccounts",
                            "services",
                            "services/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "bindings",
                            "events",
                            "limitranges",
                            "namespaces/status",
                            "pods/log",
                            "pods/status",
                            "replicationcontrollers/status",
                            "resourcequotas",
                            "resourcequotas/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions",
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "statefulsets",
                            "statefulsets/scale",
                            "statefulsets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers",
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "cronjobs/status",
                            "jobs",
                            "jobs/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets",
                            "poddisruptionbudgets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:attachdetach-controller",
                    "resourceVersion": "110",
                    "uid": "ef135132-ca8b-4d03-8fe5-897cc618098a"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:attachdetach-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "attachdetach-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:discovery",
                    "resourceVersion": "101",
                    "uid": "5e43a6b1-75b2-4642-8de6-ee643300bea9"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:discovery"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:authenticated"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-4888289602749810007-szh-fw-sbbnl",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "szh_fw",
                        "armo.jobid": "10043712-ce4e-4512-aea9-b3e0b5d44715"
                    },
                    "creationTimestamp": "2022-02-28T09:05:44Z",
                    "generateName": "armo-kubescape-on-demand-4888289602749810007-szh-fw-",
                    "labels": {
                        "controller-uid": "2db19a65-7ae2-4c06-8c3a-34de728f83b7",
                        "job-name": "armo-kubescape-on-demand-4888289602749810007-szh-fw"
                    },
                    "name": "armo-kubescape-on-demand-4888289602749810007-szh-fw-sbbnl",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-4888289602749810007-szh-fw",
                            "uid": "2db19a65-7ae2-4c06-8c3a-34de728f83b7"
                        }
                    ],
                    "resourceVersion": "112834972",
                    "uid": "cf3b6a20-5d28-4256-b02a-af1f465fdaa5"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.148",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "szh_fw",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-n6nrm",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-n6nrm",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
            "object": {
                "kind": "ServiceAccount",
                "name": "horizontal-pod-autoscaler",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:horizontal-pod-autoscaler",
                            "resourceVersion": "121",
                            "uid": "b4bca159-d05b-4f36-a7f5-415d2a1ac523"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:horizontal-pod-autoscaler"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "horizontal-pod-autoscaler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:horizontal-pod-autoscaler",
                            "resourceVersion": "82",
                            "uid": "91ddf68c-0907-48bf-be54-e0ae52e7eeee"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "http:heapster:",
                                    "https:heapster:"
                                ],
                                "resources": [
                                    "services/proxy"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "custom.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:controller:glbc/rbac.authorization.k8s.io/v1//ClusterRole/system:glbc-status/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:glbc-status",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:controller:glbc",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:glbc-status",
                            "resourceVersion": "106360637",
                            "uid": "2f1cd35d-fb53-4746-8153-087b29a18629"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:glbc-status"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:controller:glbc"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:l7-lb-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:glbc-status",
                            "resourceVersion": "106360636",
                            "uid": "185b790e-443c-4055-869a-13a3b514c67f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status",
                                    "services/status",
                                    "services"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "namespaces",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.gke.io"
                                ],
                                "resources": [
                                    "managedcertificates",
                                    "frontendconfigs",
                                    "servicenetworkendpointgroups",
                                    "gcpingressparams",
                                    "serviceattachments"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses/status",
                                    "ingressclasses",
                                    "ingresses"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "extensions"
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "events",
                                    "ingresses",
                                    "ingresses/status"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "cloud.google.com"
                                ],
                                "resources": [
                                    "backendconfigs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.istio.io"
                                ],
                                "resources": [
                                    "destinationrules"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
            "object": {
                "kind": "ServiceAccount",
                "name": "bootstrap-signer",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-system",
                            "resourceVersion": "149",
                            "uid": "1101dec6-edbe-4f27-a181-af349c3287e6"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:bootstrap-signer"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "bootstrap-signer",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-system",
                            "resourceVersion": "140",
                            "uid": "190838f4-8434-40f8-9998-8c0410325c53"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kube-aggregator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-aggregator",
                    "resourceVersion": "58",
                    "uid": "0b265f58-676a-4b87-974c-659f850b74ab"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kube-apiserver-kubelet-api-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "kube-apiserver-kubelet-api-admin",
                    "resourceVersion": "617",
                    "uid": "f9435933-21ee-48bb-a142-1fed1e708cab"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "kubelet-api-admin"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kube-apiserver"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:replicaset-controller",
                    "resourceVersion": "127",
                    "uid": "eb8e0f21-af17-42ba-8672-957e3190dcd2"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:replicaset-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "replicaset-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:gcp-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gcp-controller-manager-combined",
                        "components.gke.io/component-version": "2.1.14",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gcp-controller-manager",
                    "resourceVersion": "94208521",
                    "uid": "63eb5dcd-14f6-40bf-a8f6-d469d2603fa2"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:gcp-controller-manager"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:gcp-controller-manager"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-scheduler",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::extension-apiserver-authentication-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "146",
                            "uid": "c356dff8-2d34-422d-9868-b49639d568dd"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "extension-apiserver-authentication-reader"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-controller-manager"
                            },
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "extension-apiserver-authentication-reader",
                            "namespace": "kube-system",
                            "resourceVersion": "139",
                            "uid": "37c07cf8-13cd-4768-988a-1e30a2e211be"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "extension-apiserver-authentication"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:disruption-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:disruption-controller",
                    "resourceVersion": "76",
                    "uid": "e39fef6c-e25d-4dfd-b039-4bab61ad6047"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "deployments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps",
                            "extensions"
                        ],
                        "resources": [
                            "replicasets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*/scale"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/kube-dns",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:53Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kube-dns",
                    "namespace": "kube-system",
                    "resourceVersion": "318",
                    "uid": "b24160ca-6458-4c4a-8f1b-b43346e7490c"
                },
                "secrets": [
                    {
                        "name": "kube-dns-token-ljwbh"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-htsh4",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-01-30T11:07:39Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-htsh4",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "96317694",
                    "uid": "192419a5-4f55-4653-b9a1-41a32e80b636"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-rs7j"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-654fd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-654fd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-654fd",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/default/ConfigMap/kubescape",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "accountID": "XXXXXX",
                    "adminMail": "XXXXXX",
                    "clusterName": "XXXXXX",
                    "customerGUID": "XXXXXX",
                    "invitationParam": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2022-01-12T13:10:04Z",
                    "name": "kubescape",
                    "namespace": "default",
                    "resourceVersion": "113529636",
                    "uid": "fc875728-b3fe-487b-8556-11e67444f8e1"
                }
            }
        },
        {
            "resourceID": "/v1/systest-ns-tivl/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:43:35Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "systest-ns-tivl",
                    "resourceVersion": "106714",
                    "uid": "0e842ec9-a752-411d-8bd1-f8c662a8061d"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:slo-monitor/rbac.authorization.k8s.io/v1//ClusterRole/system:slo-monitor/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:slo-monitor",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:slo-monitor",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "slo-monitor-rbac-1.0.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:slo-monitor",
                            "resourceVersion": "501",
                            "uid": "e139df3b-85c9-4755-b9a1-8bdf64f7efe2"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:slo-monitor"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:slo-monitor"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "slo-monitor-rbac-1.0.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:slo-monitor",
                            "resourceVersion": "500",
                            "uid": "bdf2c8ba-ad89-404a-9ad7-f268aab7dc96"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "events"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-574b99876",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-17T08:42:45Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "pod-template-hash": "574b99876",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-574b99876",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "91044475",
                    "uid": "8d4ad852-cf57-46a4-82f6-217bb6c0aff2"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "574b99876",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "pod-template-hash": "574b99876",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-vuln-scan-7f49c5d94",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "4",
                        "deployment.kubernetes.io/revision-history": "2"
                    },
                    "creationTimestamp": "2021-11-21T09:23:29Z",
                    "generation": 5,
                    "labels": {
                        "app": "ca-vuln-scan",
                        "pod-template-hash": "7f49c5d94",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan-7f49c5d94",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-vuln-scan",
                            "uid": "ea32ecd9-cf72-4b05-8212-7e31737581d6"
                        }
                    ],
                    "resourceVersion": "96318034",
                    "uid": "bb9b8409-5af3-45fd-b861-060d7aabe574"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-vuln-scan",
                            "pod-template-hash": "7f49c5d94"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-vuln-scan",
                                "pod-template-hash": "7f49c5d94",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "1536Mi"
                                        },
                                        "requests": {
                                            "cpu": "500m",
                                            "memory": "1Gi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-09T16:44:19Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525",
                    "namespace": "armo-system",
                    "resourceVersion": "102029621",
                    "uid": "5f45d190-a061-451c-bac3-faf8f23a5cd9"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "5f45d190-a061-451c-bac3-faf8f23a5cd9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "ArmoBest",
                                "armo.jobid": "3c5ad6c6-2835-4afd-8d6e-1b525c1641cd"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "5f45d190-a061-451c-bac3-faf8f23a5cd9",
                                "job-name": "armo-kubescape-on-demand-armobest-3c5ad6c6-2835-4afd-8d6e-1b525"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.143",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "ArmoBest",
                                        "--submit",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8334cvjt",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "not-exists",
                        "armo.jobid": "3865d309-3001-40e2-8335-428ec92becfe"
                    },
                    "creationTimestamp": "2022-02-10T13:53:28Z",
                    "generateName": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428-",
                    "labels": {
                        "controller-uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9",
                        "job-name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8334cvjt",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428",
                            "uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9"
                        }
                    ],
                    "resourceVersion": "102528188",
                    "uid": "e924bf49-b06c-49b0-8d7e-064f85172a33"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "not-exists",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-49xrx",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-49xrx",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/armo-be-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "clusterData": "XXXXXX",
                    "clusterGUID": "XXXXXX",
                    "clusterName": "XXXXXX",
                    "customerGUID": "XXXXXX",
                    "dashboard": "XXXXXX",
                    "eventReceiverREST": "XXXXXX",
                    "eventReceiverWS": "XXXXXX",
                    "maserNotificationServer": "XXXXXX",
                    "portal": "XXXXXX",
                    "postman": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:24:45Z",
                    "labels": {
                        "app": "armo-be-config",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "armo-be-config",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52910941",
                    "uid": "bd15da84-7835-406a-93fa-f50e38b786d0"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-dns",
            "object": {
                "apiVersion": "v1",
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:52Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "EnsureExists"
                    },
                    "name": "kube-dns",
                    "namespace": "kube-system",
                    "resourceVersion": "298",
                    "uid": "c583264c-6f17-4b5e-a51b-d9184a86cb2d"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/service-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "service-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:service-controller",
                            "resourceVersion": "132",
                            "uid": "d06fd61e-6171-460e-abd1-514f24b573d4"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:service-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "service-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:service-controller",
                            "resourceVersion": "93",
                            "uid": "1bb3cf9c-c592-4130-873a-83337b56e272"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-vuln-scan",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:24:58Z",
                    "labels": {
                        "app": "ca-vuln-scan",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-vuln-scan",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911049",
                    "uid": "5d360556-5630-41ab-9927-349d48a3facd"
                },
                "spec": {
                    "clusterIP": "10.40.8.252",
                    "clusterIPs": [
                        "10.40.8.252"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 8080,
                            "protocol": "TCP",
                            "targetPort": 8080
                        }
                    ],
                    "selector": {
                        "app": "ca-vuln-scan",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:root-ca-cert-publisher",
                    "resourceVersion": "138",
                    "uid": "83e12195-6030-4a74-94a7-dda2f39220e9"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:root-ca-cert-publisher"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "root-ca-cert-publisher",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-64484fb4b7",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "8",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T12:50:12Z",
                    "generation": 1,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "64484fb4b7",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-64484fb4b7",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "112927108",
                    "uid": "bc8e1f3c-6663-4a2e-8ed5-54ed53c406d7"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "64484fb4b7",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "pod-template-hash": "64484fb4b7",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/edit",
            "object": {
                "aggregationRule": {
                    "clusterRoleSelectors": [
                        {
                            "matchLabels": {
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                            }
                        }
                    ]
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults",
                        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                    },
                    "name": "edit",
                    "resourceVersion": "287",
                    "uid": "e32e6bf6-fcb6-45e7-a7a6-a3962aa347ec"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy",
                            "secrets",
                            "services/proxy"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "impersonate"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "secrets",
                            "serviceaccounts",
                            "services",
                            "services/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "replicasets",
                            "replicasets/scale",
                            "statefulsets",
                            "statefulsets/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "ingresses",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "persistentvolumeclaims/status",
                            "pods",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "serviceaccounts",
                            "services",
                            "services/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "bindings",
                            "events",
                            "limitranges",
                            "namespaces/status",
                            "pods/log",
                            "pods/status",
                            "replicationcontrollers/status",
                            "resourcequotas",
                            "resourcequotas/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "controllerrevisions",
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "statefulsets",
                            "statefulsets/scale",
                            "statefulsets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers",
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "cronjobs/status",
                            "jobs",
                            "jobs/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "daemonsets/status",
                            "deployments",
                            "deployments/scale",
                            "deployments/status",
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicasets/status",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets",
                            "poddisruptionbudgets/status"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "ingresses/status",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/catalog",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:40Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "catalog"
                    },
                    "name": "catalog",
                    "namespace": "default",
                    "resourceVersion": "41559590",
                    "uid": "dd6a34cd-fa62-424e-8b3b-ef0ba07e68b2"
                },
                "spec": {
                    "clusterIP": "10.40.7.243",
                    "clusterIPs": [
                        "10.40.7.243"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-catalog",
                            "port": 8082,
                            "protocol": "TCP",
                            "targetPort": 8082
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "catalog"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "default",
                    "namespace": "kube-system",
                    "resourceVersion": "286",
                    "uid": "330517c1-2c50-4721-99d3-6b2ef37264d9"
                },
                "secrets": [
                    {
                        "name": "default-token-ss26d"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/default",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "default"
                    },
                    "name": "default",
                    "resourceVersion": "153",
                    "uid": "b6fb307a-76f4-4360-8608-13ce23732fd5"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/ks-test-2",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-01-13T15:04:49Z",
                    "labels": {
                        "app": "ks-test-1"
                    },
                    "name": "ks-test-2",
                    "namespace": "armo-system",
                    "resourceVersion": "87232006",
                    "uid": "2b992899-c1e6-4159-ae76-e2cb3db93636"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "2b992899-c1e6-4159-ae76-e2cb3db93636"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "2b992899-c1e6-4159-ae76-e2cb3db93636",
                                "job-name": "ks-test-2"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "kubescape scan --submit --environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vqj9",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/config.hash": "f35dafc2a21e95bdf9bb226693ffc955",
                        "kubernetes.io/config.mirror": "f35dafc2a21e95bdf9bb226693ffc955",
                        "kubernetes.io/config.seen": "2022-01-30T11:07:35.822442102Z",
                        "kubernetes.io/config.source": "file"
                    },
                    "creationTimestamp": "2022-01-30T11:07:39Z",
                    "labels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    },
                    "name": "kube-proxy-gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "v1",
                            "controller": true,
                            "kind": "Node",
                            "name": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                            "uid": "82e13fa8-4312-4c6a-8a68-209bf81b40a2"
                        }
                    ],
                    "resourceVersion": "96317513",
                    "uid": "3b9a4de6-5ade-49ad-87d0-353662991fa3"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "kube-proxy",
                            "image": "gke.gcr.io/kube-proxy-amd64:v1.21.5-gke.1302",
                            "command": [
                                "/bin/sh",
                                "-c",
                                "exec kube-proxy --master=https://35.202.27.228 --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,RotateKubeletServerCertificate=true,ExecProbeTimeout=false --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "100m"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "etc-ssl-certs",
                                    "readOnly": true,
                                    "mountPath": "/etc/ssl/certs"
                                },
                                {
                                    "name": "usr-ca-certs",
                                    "readOnly": true,
                                    "mountPath": "/usr/share/ca-certificates"
                                },
                                {
                                    "name": "varlog",
                                    "mountPath": "/var/log"
                                },
                                {
                                    "name": "kubeconfig",
                                    "mountPath": "/var/lib/kube-proxy/kubeconfig"
                                },
                                {
                                    "name": "iptableslock",
                                    "mountPath": "/run/xtables.lock"
                                },
                                {
                                    "name": "lib-modules",
                                    "readOnly": true,
                                    "mountPath": "/lib/modules"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/usr/share/ca-certificates",
                                "type": ""
                            },
                            "name": "usr-ca-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/ssl/certs",
                                "type": ""
                            },
                            "name": "etc-ssl-certs"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kube-proxy/kubeconfig",
                                "type": "FileOrCreate"
                            },
                            "name": "kubeconfig"
                        },
                        {
                            "hostPath": {
                                "path": "/var/log",
                                "type": ""
                            },
                            "name": "varlog"
                        },
                        {
                            "hostPath": {
                                "path": "/run/xtables.lock",
                                "type": "FileOrCreate"
                            },
                            "name": "iptableslock"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/modules",
                                "type": ""
                            },
                            "name": "lib-modules"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:node-controller",
                    "resourceVersion": "85",
                    "uid": "f4f8f059-7f69-4dac-9eef-24105105dda3"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes/status"
                        ],
                        "verbs": [
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "delete",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-uas-collection-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-uas-collection-reader",
                    "resourceVersion": "585",
                    "uid": "9ff5354e-35a9-4852-b056-572b70056f7e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "replicationcontrollers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs",
                            "cronjobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-rotation",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:beta:kubelet-certificate-rotation",
                    "resourceVersion": "620",
                    "uid": "d8828cfb-dd16-46a2-8412-ffdc0b6cd1ec"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gce:beta:kubelet-certificate-rotation"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:nodes"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node",
                    "resourceVersion": "109",
                    "uid": "56f16753-6653-4c61-9967-ed64be3aeac3"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node"
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-mitre-d9d9f676-09fa-4b28-abd7-508f9ccd",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-01-18T14:15:36Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-mitre-d9d9f676-09fa-4b28-abd7-508f9ccd",
                    "namespace": "armo-system",
                    "resourceVersion": "89978969",
                    "uid": "903f0d53-6810-4be2-9ca5-85428b3e0a52"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "903f0d53-6810-4be2-9ca5-85428b3e0a52"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "MITRE",
                                "armo.jobid": "d9d9f676-09fa-4b28-abd7-508f9ccd717f"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "903f0d53-6810-4be2-9ca5-85428b3e0a52",
                                "job-name": "armo-kubescape-on-demand-mitre-d9d9f676-09fa-4b28-abd7-508f9ccd"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:latest",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "MITRE",
                                        "--submit",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/default/Service/users-redis",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:34Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "users-redis"
                    },
                    "name": "users-redis",
                    "namespace": "default",
                    "resourceVersion": "41559529",
                    "uid": "4be0d38d-1916-479d-9851-f0795be6ad36"
                },
                "spec": {
                    "clusterIP": "10.40.5.115",
                    "clusterIPs": [
                        "10.40.5.115"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "redis-users",
                            "port": 6379,
                            "protocol": "TCP",
                            "targetPort": 6379
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "users-redis"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mysql-1645559415",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "mysql-1645559415",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:50:24Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559415",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520759",
                    "uid": "b9b7c4d2-282d-4f48-8699-6c57c5144a7d"
                },
                "spec": {
                    "clusterIP": "10.40.7.92",
                    "clusterIPs": [
                        "10.40.7.92"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": "mysql"
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/name": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:resourcequota-controller",
                    "resourceVersion": "129",
                    "uid": "09f26131-e22a-45e5-86cf-90625e5c90ce"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:resourcequota-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "resourcequota-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ServiceAccount/ca-audit",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:25:05Z",
                    "labels": {
                        "app": "ca-audit",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911131",
                    "uid": "220989f4-bc8f-42e5-a439-79289ed939da"
                },
                "secrets": [
                    {
                        "name": "ca-audit-token-cxxd2"
                    }
                ]
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//ValidatingWebhookConfiguration/validation-webhook.snapshot.storage.k8s.io",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "ValidatingWebhookConfiguration",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:00Z",
                    "generation": 2,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "validation-webhook.snapshot.storage.k8s.io",
                    "resourceVersion": "55353190",
                    "uid": "f7636747-7c78-4713-ae68-a1a7ab9ecaad"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1",
                            "v1beta1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lRQjRJcmN0NFVaS1huTHcvME9aWWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSbFpEZzJPVE5pWWkwME5UWmlMVFJsT1dFdE9UTTNaQzB3WlRsa09ESmhObVkwTUdRdwpIaGNOTWpFd056QTNNRFEwTWpFd1doY05Nall3TnpBMk1EVTBNakV3V2pBdk1TMHdLd1lEVlFRREV5UmxaRGcyCk9UTmlZaTAwTlRaaUxUUmxPV0V0T1RNM1pDMHdaVGxrT0RKaE5tWTBNR1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjNjMycnh0ekdWUDRJNzNJQXQzOVVBRkxKSGY2ckR2cXdKRDYrQlB6MwpKcHc4ZUt5clVISGdSTWJKNExUVE5XV000N2tDb1FDOVJUbzFJVGtVcS96a1dKY0pEL0swZWRRR004SitLZGYwCmgrUzJNTzEyNDRxTmlrNDlKcy92UldOWmNMZEJoaDlpWHpIenl6WDVzQnc4VEVpbkZtY1Y5dFdmTXJ5ZGlzSXoKSlRPdkhRVVhUNjJsR0hRbkZKbXIzYWhvS3lKY3FGbytsTER3bzdQbU5JaUhzMnZ1djRDTEJXV1FXOG1wcW9kYQpZZ2lncEJvYVQ5OHBTMmZZTXFGbUJGMkJxL0VyTWJPYnptYkoxdWlJcnhMa2NTS2NIbVI4ZWU4MXk3L1Qyb2R6CjI4UmYwdGJ6L21lckpZRE1iU1hkYkVzYUpsL3c5M3RCQ3puQ0FrOE9ZWGFoQWdNQkFBR2pRakJBTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmR4eG5HN1JUYWpoTgpHYXV4VHU0WFpDREMyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZEs4ZWg5dWo3TEJVQXhEbTdiNDl4azJuCkVqS2d2NXY5ZVUxUk5LOStHbFJvTjRiWmJLVHJqbjg4SE9sV0l5MjFGdldlVHgvdXpCenFub1V2Y3lxSk0velgKS2w0cGJOaENUd3dCQnR0WGtTcmwvcU9pSEVHcTJRbThjQ1BLL1QrNm5tU3RqZW1ZY09meVJtOVVJajBqS2RCego4WEZzQytIYXYzYkMrSjV1MlE1NGV3a3dhMUMzTk9lL2NFaDVpb3JjcXd0aEltOUQrS0wwYjRwVW1XMUhHdUUvCnhqclNDalFFK0U4QktodTNtUzZZUEk4S25CaDhrOE1PeXpGN0pMY3VaMHltcElFTUhaaEJ4aFlHN1Z5VjdZMG8KMkc3TEQ1SFZnazJ3QzdzMVNKQmdvdmZOb2YyOXJBYXlweWd2K1R3YitNTzV6YklhNHkxaWc4OG1tcnhtMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "url": "https://localhost:23011/volumesnapshot"
                        },
                        "failurePolicy": "Ignore",
                        "matchPolicy": "Equivalent",
                        "name": "validation-webhook.snapshot.storage.k8s.io",
                        "namespaceSelector": {},
                        "objectSelector": {},
                        "rules": [
                            {
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "apiVersions": [
                                    "v1",
                                    "v1beta1"
                                ],
                                "operations": [
                                    "CREATE",
                                    "UPDATE"
                                ],
                                "resources": [
                                    "volumesnapshots",
                                    "volumesnapshotcontents"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 10
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-dns-599484b884-m4ttx",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "kubedns",
                        "prometheus.io/port": "10054",
                        "prometheus.io/scrape": "true",
                        "scheduler.alpha.kubernetes.io/critical-pod": "",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-01-27T12:22:16Z",
                    "generateName": "kube-dns-599484b884-",
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "599484b884"
                    },
                    "name": "kube-dns-599484b884-m4ttx",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "kube-dns-599484b884",
                            "uid": "2c05f1f0-0348-47c0-9f2b-b859c4ecc6eb"
                        }
                    ],
                    "resourceVersion": "96317989",
                    "uid": "91436b14-6f25-402c-be5c-c9c62065cd96"
                },
                "spec": {
                    "affinity": {
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "k8s-app",
                                                    "operator": "In",
                                                    "values": [
                                                        "kube-dns"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    },
                                    "weight": 100
                                }
                            ]
                        }
                    },
                    "containers": [
                        {
                            "name": "kubedns",
                            "image": "gke.gcr.io/k8s-dns-kube-dns:1.21.0-gke.0",
                            "args": [
                                "--domain=cluster.local.",
                                "--dns-port=10053",
                                "--config-dir=/kube-dns-config",
                                "--v=2"
                            ],
                            "ports": [
                                {
                                    "name": "dns-local",
                                    "containerPort": 10053,
                                    "protocol": "UDP"
                                },
                                {
                                    "name": "dns-tcp-local",
                                    "containerPort": 10053,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "metrics",
                                    "containerPort": 10055,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "PROMETHEUS_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "210Mi"
                                },
                                "requests": {
                                    "cpu": "100m",
                                    "memory": "70Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-dns-config",
                                    "mountPath": "/kube-dns-config"
                                },
                                {
                                    "name": "kube-api-access-jgf7h",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthcheck/kubedns",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/readiness",
                                    "port": 8081,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 3,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001,
                                "runAsGroup": 1001,
                                "readOnlyRootFilesystem": true,
                                "allowPrivilegeEscalation": false
                            }
                        },
                        {
                            "name": "dnsmasq",
                            "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny:1.21.0-gke.0",
                            "args": [
                                "-v=2",
                                "-logtostderr",
                                "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                "-restartDnsmasq=true",
                                "--",
                                "-k",
                                "--cache-size=1000",
                                "--no-negcache",
                                "--dns-forward-max=1500",
                                "--log-facility=-",
                                "--server=/cluster.local/127.0.0.1#10053",
                                "--server=/in-addr.arpa/127.0.0.1#10053",
                                "--server=/ip6.arpa/127.0.0.1#10053"
                            ],
                            "ports": [
                                {
                                    "name": "dns",
                                    "containerPort": 53,
                                    "protocol": "UDP"
                                },
                                {
                                    "name": "dns-tcp",
                                    "containerPort": 53,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "150m",
                                    "memory": "20Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-dns-config",
                                    "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                },
                                {
                                    "name": "kube-api-access-jgf7h",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthcheck/dnsmasq",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "add": [
                                        "NET_BIND_SERVICE",
                                        "SETGID"
                                    ],
                                    "drop": [
                                        "all"
                                    ]
                                }
                            }
                        },
                        {
                            "name": "sidecar",
                            "image": "gke.gcr.io/k8s-dns-sidecar:1.21.0-gke.0",
                            "args": [
                                "--v=2",
                                "--logtostderr",
                                "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 10054,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "20Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-jgf7h",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/metrics",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001,
                                "runAsGroup": 1001,
                                "readOnlyRootFilesystem": true,
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "Default",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 65534,
                        "seccompProfile": {
                            "type": "RuntimeDefault"
                        },
                        "supplementalGroups": [
                            65534
                        ]
                    },
                    "serviceAccount": "kube-dns",
                    "serviceAccountName": "kube-dns",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "kube-dns",
                                "optional": true
                            },
                            "name": "kube-dns-config"
                        },
                        {
                            "name": "kube-api-access-jgf7h",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-ocimage",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:25:03Z",
                    "labels": {
                        "app": "ca-ocimage"
                    },
                    "name": "ca-ocimage",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911104",
                    "uid": "a8f823c9-bae3-4968-b030-4f04396cd3f9"
                },
                "spec": {
                    "clusterIP": "10.40.14.141",
                    "clusterIPs": [
                        "10.40.14.141"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 8080,
                            "protocol": "TCP",
                            "targetPort": 8080
                        }
                    ],
                    "selector": {
                        "app": "ca-ocimage"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/default/Service/kubernetes",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "component": "apiserver",
                        "provider": "kubernetes"
                    },
                    "name": "kubernetes",
                    "namespace": "default",
                    "resourceVersion": "155",
                    "uid": "744d32ad-91e4-48f7-b0a1-6320f36ef9cd"
                },
                "spec": {
                    "clusterIP": "10.40.0.1",
                    "clusterIPs": [
                        "10.40.0.1"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "https",
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 443
                        }
                    ],
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/npd-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "npd-binding",
                    "resourceVersion": "412",
                    "uid": "036c728c-b9c1-4df1-9cfb-82400dc628e8"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-problem-detector"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:node-problem-detector"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-11-16T07:45:06Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ephemeral-volume-controller",
                    "resourceVersion": "55353004",
                    "uid": "f6dc8dc8-b50e-4998-ae3c-d5eb2b60160c"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:ephemeral-volume-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "ephemeral-volume-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-oracle-54dfb75b4d-8w5mx",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:14Z",
                    "generateName": "ca-oracle-54dfb75b4d-",
                    "labels": {
                        "app": "ca-oracle",
                        "pod-template-hash": "54dfb75b4d",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-oracle-54dfb75b4d-8w5mx",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-oracle-54dfb75b4d",
                            "uid": "0ded84b8-1811-4328-9396-433993d3d6b7"
                        }
                    ],
                    "resourceVersion": "96318451",
                    "uid": "39e64d6b-12c1-47ab-9cc4-860df966440a"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-oracle",
                            "image": "quay.io/armosec/k8s-ca-oracle-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "ca-oracle",
                                    "containerPort": 4000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_ORACLE_PORT",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "100Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-lkc7g",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-lkc7g",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/daemon-set-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "daemon-set-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "197",
                    "uid": "6c725dd3-17e4-48bb-9560-d4c6241cd903"
                },
                "secrets": [
                    {
                        "name": "daemon-set-controller-token-kxm9v"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "metadata": {
                    "annotations": {
                        "deprecated.daemonset.template.generation": "8"
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "generation": 8,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "kube-proxy"
                    },
                    "name": "kube-proxy",
                    "namespace": "kube-system",
                    "resourceVersion": "94208546",
                    "uid": "8f2390ae-0019-4e6a-96cf-0bdfe15b4be0"
                },
                "spec": {
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-proxy"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "kube-proxy",
                                    "image": "gke.gcr.io/kube-proxy-amd64:v1.21.6-gke.1500",
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "kube-proxy --cluster-cidr=10.36.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DynamicKubeletConfig=false,InTreePluginAWSUnregister=true,InTreePluginAzureDiskUnregister=true,InTreePluginOpenStackUnregister=true,InTreePluginvSphereUnregister=true,PodDeletionCost=true --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1\u003e\u003e/var/log/kube-proxy.log 2\u003e\u00261"
                                    ],
                                    "env": [
                                        {
                                            "name": "KUBERNETES_SERVICE_HOST",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "100m"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "varlog",
                                            "mountPath": "/var/log"
                                        },
                                        {
                                            "name": "xtables-lock",
                                            "mountPath": "/run/xtables.lock"
                                        },
                                        {
                                            "name": "lib-modules",
                                            "readOnly": true,
                                            "mountPath": "/lib/modules"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "privileged": true
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "hostNetwork": true,
                            "nodeSelector": {
                                "kubernetes.io/os": "linux",
                                "node.kubernetes.io/kube-proxy-ds-ready": "true"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "kube-proxy",
                            "serviceAccountName": "kube-proxy",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/log",
                                        "type": ""
                                    },
                                    "name": "varlog"
                                },
                                {
                                    "hostPath": {
                                        "path": "/run/xtables.lock",
                                        "type": "FileOrCreate"
                                    },
                                    "name": "xtables-lock"
                                },
                                {
                                    "hostPath": {
                                        "path": "/lib/modules",
                                        "type": ""
                                    },
                                    "name": "lib-modules"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "maxSurge": 0,
                            "maxUnavailable": "10%"
                        },
                        "type": "RollingUpdate"
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/metrics-server-v0.4.4-5d9bcd85b9",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-16T07:46:32Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "5d9bcd85b9",
                        "version": "v0.4.4"
                    },
                    "name": "metrics-server-v0.4.4-5d9bcd85b9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "metrics-server-v0.4.4",
                            "uid": "a709e59f-f8cf-45d2-8346-1ac9ec2d6696"
                        }
                    ],
                    "resourceVersion": "55354098",
                    "uid": "efb2762c-1bfe-48db-a32e-234ffe13a0c4"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "5d9bcd85b9",
                            "version": "v0.4.4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "metrics-server",
                                "pod-template-hash": "5d9bcd85b9",
                                "version": "v0.4.4"
                            },
                            "name": "metrics-server"
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "metrics-server",
                                    "image": "k8s.gcr.io/metrics-server/metrics-server:v0.4.4",
                                    "command": [
                                        "/metrics-server",
                                        "--metric-resolution=30s",
                                        "--kubelet-port=10255",
                                        "--deprecated-kubelet-completely-insecure=true",
                                        "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                        "--cert-dir=/tmp",
                                        "--secure-port=443"
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "tmp-dir",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "metrics-server-nanny",
                                    "image": "gke.gcr.io/addon-resizer:1.8.13-gke.0",
                                    "command": [
                                        "/pod_nanny",
                                        "--config-dir=/etc/config",
                                        "--cpu=40m",
                                        "--extra-cpu=0.5m",
                                        "--memory=35Mi",
                                        "--extra-memory=4Mi",
                                        "--threshold=5",
                                        "--deployment=metrics-server-v0.4.4",
                                        "--container=metrics-server",
                                        "--poll-period=30000",
                                        "--estimator=exponential",
                                        "--scale-down-delay=24h",
                                        "--minClusterSize=5",
                                        "--use-metrics=true"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "metrics-server-config-volume",
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                }
                            },
                            "serviceAccount": "metrics-server",
                            "serviceAccountName": "metrics-server",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "metrics-server-config"
                                    },
                                    "name": "metrics-server-config-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "tmp-dir"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/systest-ns-tivl/Pod/demo-service-secret-f87564df4-tnz96",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:16Z",
                    "generateName": "demo-service-secret-f87564df4-",
                    "labels": {
                        "app": "demo-service-secret",
                        "pod-template-hash": "f87564df4"
                    },
                    "name": "demo-service-secret-f87564df4-tnz96",
                    "namespace": "systest-ns-tivl",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "demo-service-secret-f87564df4",
                            "uid": "e3e17bb7-db66-43a5-b53e-74337eeb0c63"
                        }
                    ],
                    "resourceVersion": "96318254",
                    "uid": "fe142b8e-4e06-4754-8aa9-3547886c7bad"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "demo-service-secret",
                            "image": "quay.io/armosec/demoservice:k8s-secret-v1",
                            "env": [
                                {
                                    "name": "SECRET",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "ARMO_TEST_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CAA_ENABLE_CRASH_REPORTER",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "encrypted-credentials-volume",
                                    "mountPath": "/tmp"
                                },
                                {
                                    "name": "kube-api-access-wrhr2",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "encrypted-credentials-volume",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "encrypted-credentials"
                            }
                        },
                        {
                            "name": "kube-api-access-wrhr2",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-proxy",
            "object": {
                "kind": "ServiceAccount",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:kube-proxy",
                            "resourceVersion": "595",
                            "uid": "a4105161-0ad7-4319-a289-7f060b9da133"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-proxy",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:node-proxier",
                            "resourceVersion": "69",
                            "uid": "592ecc9f-fbf4-41d4-9e39-287c43bf4b13"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kubestore-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:kubestore-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kubestore-collector",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kubestore-collector",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "kubestore-collector-rbac-1.0.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:kubestore-collector",
                            "resourceVersion": "449",
                            "uid": "41a470b2-98a6-4e1e-b52c-5a34562d084b"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kubestore-collector"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kubestore-collector"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-version": "kubestore-collector-rbac-1.0.0"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "system:kubestore-collector",
                            "resourceVersion": "448",
                            "uid": "2df61987-c51d-4dc1-9dc7-adb1212058b0"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-rotation",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gce:beta:kubelet-certificate-rotation",
                    "resourceVersion": "623",
                    "uid": "b2986ba8-927c-4714-9004-1e349ea81749"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "certificates.k8s.io"
                        ],
                        "resources": [
                            "certificatesigningrequests/selfnodeclient",
                            "certificatesigningrequests/selfnodeserver"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:metrics-server",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "system:metrics-server",
                    "resourceVersion": "55353501",
                    "uid": "1fcbf32c-f179-4641-ae09-8f8fa682d74e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "nodes",
                            "namespaces"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resourceNames": [
                            "metrics-server-v0.3.6",
                            "metrics-server-v0.4.4",
                            "metrics-server-v0.5.0"
                        ],
                        "resources": [
                            "deployments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "nonResourceURLs": [
                            "/metrics"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-16T07:46:30Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "cluster-autoscaler",
                    "resourceVersion": "55353530",
                    "uid": "ee9d1787-aba4-41ac-83f8-bf605465e781"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "cluster-autoscaler"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:cluster-autoscaler",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-certificate-bootstrap",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kubelet-bootstrap-certificate-bootstrap",
                    "resourceVersion": "345",
                    "uid": "0d4da28b-9c2b-4c2a-83dc-4b61d568893a"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "gce:beta:kubelet-certificate-bootstrap"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kubelet-bootstrap"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/systest-ns-tivl/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T10:43:35Z",
                    "name": "default",
                    "namespace": "systest-ns-tivl",
                    "resourceVersion": "106718",
                    "uid": "ca6e7ffe-d0d9-4631-b2ca-b33e137c7930"
                },
                "secrets": [
                    {
                        "name": "default-token-9rk9s"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/Deployment/armo-notification-service",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "8",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-17T08:42:45Z",
                    "generation": 8,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/managed-by": "Helm",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service",
                    "namespace": "armo-system",
                    "resourceVersion": "112927117",
                    "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/Deployment/mycluster-router",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "generation": 1,
                    "name": "mycluster-router",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "mysql.oracle.com/v2alpha1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "InnoDBCluster",
                            "name": "mycluster",
                            "uid": "08fb6f3d-6ed6-4c18-9434-882da43f833e"
                        }
                    ],
                    "resourceVersion": "109544587",
                    "uid": "de6d5a6f-b97d-4a78-b807-ee050a231362"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 0,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/component": "router",
                            "app.kubernetes.io/created-by": "mysql-operator",
                            "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-router",
                            "app.kubernetes.io/managed-by": "mysql-operator",
                            "app.kubernetes.io/name": "mysql-router",
                            "component": "mysqlrouter",
                            "mysql.oracle.com/cluster": "mycluster",
                            "tier": "mysql"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/component": "router",
                                "app.kubernetes.io/created-by": "mysql-operator",
                                "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-router",
                                "app.kubernetes.io/managed-by": "mysql-operator",
                                "app.kubernetes.io/name": "mysql-router",
                                "component": "mysqlrouter",
                                "mysql.oracle.com/cluster": "mycluster",
                                "tier": "mysql"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "router",
                                    "image": "mysql/mysql-router:8.0.28",
                                    "ports": [
                                        {
                                            "name": "mysqlrw",
                                            "containerPort": 6446,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlxrw",
                                            "containerPort": 6448,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlro",
                                            "containerPort": 6447,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlxro",
                                            "containerPort": 6449,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "http",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_HOST",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_USER",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mycluster-router",
                                                    "key": "routerUsername"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mycluster-router",
                                                    "key": "routerPassword"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_CREATE_ROUTER_USER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
            "object": {
                "kind": "ServiceAccount",
                "name": "bootstrap-signer",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-system",
                            "resourceVersion": "149",
                            "uid": "1101dec6-edbe-4f27-a181-af349c3287e6"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:bootstrap-signer"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "bootstrap-signer",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:bootstrap-signer",
                            "namespace": "kube-public",
                            "resourceVersion": "145",
                            "uid": "b1035167-5d84-4895-a4aa-0b3f5f21d26d"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "cluster-info"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mycluster-instances",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                    },
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "labels": {
                        "mysql.oracle.com/cluster": "mycluster",
                        "tier": "mysql"
                    },
                    "name": "mycluster-instances",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "mysql.oracle.com/v2alpha1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "InnoDBCluster",
                            "name": "mycluster",
                            "uid": "08fb6f3d-6ed6-4c18-9434-882da43f833e"
                        }
                    ],
                    "resourceVersion": "109544561",
                    "uid": "92afb701-5329-47d2-8fe2-0356f6ae7855"
                },
                "spec": {
                    "clusterIP": "None",
                    "clusterIPs": [
                        "None"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": 3306
                        },
                        {
                            "name": "mysqlx",
                            "port": 33060,
                            "protocol": "TCP",
                            "targetPort": 33060
                        },
                        {
                            "name": "gr-xcom",
                            "port": 33061,
                            "protocol": "TCP",
                            "targetPort": 33061
                        }
                    ],
                    "publishNotReadyAddresses": true,
                    "selector": {
                        "component": "mysqld",
                        "mysql.oracle.com/cluster": "mycluster",
                        "tier": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/ca-cr",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-16T07:46:30Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "ca-cr",
                    "resourceVersion": "55353535",
                    "uid": "2be296fd-d36e-47d5-b40e-c441d3b67f3f"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "ca-cr-actor"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:cluster-autoscaler",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node-proxier",
                    "resourceVersion": "104",
                    "uid": "7812acd7-fa61-4ada-a232-7722ff8e6e70"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-proxier"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-proxy"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/disruption-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "disruption-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "169",
                    "uid": "3aa4ff2b-0daf-4686-8cd1-d1cbf2516b0d"
                },
                "secrets": [
                    {
                        "name": "disruption-controller-token-p5xb5"
                    }
                ]
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-3965444195973265759-devopsbest",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-3965444195973265759-devopsbest",
                    "namespace": "armo-system",
                    "resourceVersion": "105912735",
                    "uid": "c995fd55-9d5d-4425-952e-427ec8c6d1ff"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "c995fd55-9d5d-4425-952e-427ec8c6d1ff"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "DevOpsBest",
                                "armo.jobid": "8df67f86-bb4d-4421-821c-bc044463e8de"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "c995fd55-9d5d-4425-952e-427ec8c6d1ff",
                                "job-name": "armo-kubescape-on-demand-3965444195973265759-devopsbest"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "DevOpsBest",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/snapshot-controller-leaderelection",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "snapshot-controller",
                        "components.gke.io/component-version": "0.5.6",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "snapshot-controller-leaderelection",
                    "namespace": "kube-system",
                    "resourceVersion": "94208540",
                    "uid": "b00220f4-27a4-49f3-933a-aeaed0b7cf75"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "snapshot-controller-leaderelection"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:snapshot-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-dns-autoscaler",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "linear": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:45:18Z",
                    "name": "kube-dns-autoscaler",
                    "namespace": "kube-system",
                    "resourceVersion": "837",
                    "uid": "6602c6f9-5699-4c05-ae9d-61db16414a88"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/pdcsi-provisioner-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver"
                    },
                    "name": "pdcsi-provisioner-role",
                    "resourceVersion": "55353590",
                    "uid": "025c4329-ba56-4af8-ac93-eb2039bfa1c8"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "list",
                            "watch",
                            "create",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "csinodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshots"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "snapshot.storage.k8s.io"
                        ],
                        "resources": [
                            "volumesnapshotcontents"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "volumeattachments"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-account-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:service-account-controller",
                    "resourceVersion": "92",
                    "uid": "d2be011b-60e5-4efe-8e57-646ddb0cc47a"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/default/ReplicaSet/prod-mysql-7998c88786",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "1",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-19T19:41:56Z",
                    "generation": 1,
                    "labels": {
                        "app": "mysql",
                        "pod-template-hash": "7998c88786"
                    },
                    "name": "prod-mysql-7998c88786",
                    "namespace": "default",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "prod-mysql",
                            "uid": "2d19d2dd-ac42-4651-8cc5-57d66f592dc3"
                        }
                    ],
                    "resourceVersion": "107750616",
                    "uid": "9cd126ef-2e7f-47e5-b599-31d38e089a99"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "mysql",
                            "pod-template-hash": "7998c88786"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "mysql",
                                "pod-template-hash": "7998c88786"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "mysql:5.6",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "prod-mysql-pass",
                                                    "key": "password"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "mysql-persistent-storage",
                                            "mountPath": "/var/lib/mysql"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "emptyDir": {},
                                    "name": "mysql-persistent-storage"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-59844ff879",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "2",
                        "deployment.kubernetes.io/max-replicas": "3",
                        "deployment.kubernetes.io/revision": "3"
                    },
                    "creationTimestamp": "2021-09-08T04:29:33Z",
                    "generation": 4,
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "59844ff879"
                    },
                    "name": "kube-dns-59844ff879",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns",
                            "uid": "f901e82b-2298-4f3f-b895-a7811979d002"
                        }
                    ],
                    "resourceVersion": "55354075",
                    "uid": "32302227-fc1c-457a-a1a9-821a97c2139b"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "59844ff879"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "kubedns",
                                "prometheus.io/port": "10054",
                                "prometheus.io/scrape": "true",
                                "scheduler.alpha.kubernetes.io/critical-pod": "",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns",
                                "pod-template-hash": "59844ff879"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "k8s-app",
                                                            "operator": "In",
                                                            "values": [
                                                                "kube-dns"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 100
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "kubedns",
                                    "image": "gke.gcr.io/k8s-dns-kube-dns:1.19.1-gke.1",
                                    "args": [
                                        "--domain=cluster.local.",
                                        "--dns-port=10053",
                                        "--config-dir=/kube-dns-config",
                                        "--v=2"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-local",
                                            "containerPort": 10053,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp-local",
                                            "containerPort": 10053,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "metrics",
                                            "containerPort": 10055,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "PROMETHEUS_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "210Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "70Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/kube-dns-config"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/kubedns",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/readiness",
                                            "port": 8081,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 3,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "dnsmasq",
                                    "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny:1.19.1-gke.1",
                                    "args": [
                                        "-v=2",
                                        "-logtostderr",
                                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                        "-restartDnsmasq=true",
                                        "--",
                                        "-k",
                                        "--cache-size=1000",
                                        "--no-negcache",
                                        "--dns-forward-max=1500",
                                        "--log-facility=-",
                                        "--server=/cluster.local/127.0.0.1#10053",
                                        "--server=/in-addr.arpa/127.0.0.1#10053",
                                        "--server=/ip6.arpa/127.0.0.1#10053"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns",
                                            "containerPort": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp",
                                            "containerPort": 53,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "150m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/dnsmasq",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "NET_BIND_SERVICE",
                                                "SETGID"
                                            ],
                                            "drop": [
                                                "all"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "sidecar",
                                    "image": "gke.gcr.io/k8s-dns-sidecar:1.19.1-gke.1",
                                    "args": [
                                        "--v=2",
                                        "--logtostderr",
                                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 10054,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/metrics",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns",
                            "serviceAccountName": "kube-dns",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-dns",
                                        "optional": true
                                    },
                                    "name": "kube-dns-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-833vprp8",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "not-exists",
                        "armo.jobid": "3865d309-3001-40e2-8335-428ec92becfe"
                    },
                    "creationTimestamp": "2022-02-10T13:55:12Z",
                    "generateName": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428-",
                    "labels": {
                        "controller-uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9",
                        "job-name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-833vprp8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428",
                            "uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9"
                        }
                    ],
                    "resourceVersion": "102528909",
                    "uid": "d0fcd869-e671-431e-b762-bfed8b1b68eb"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.146",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "not-exists",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-7z9q8",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-7z9q8",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/mysql-operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/mysql-operator-rolebinding",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:serviceaccounts",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2022-02-22T20:48:56Z",
                            "name": "mysql-operator-rolebinding",
                            "resourceVersion": "109544209",
                            "uid": "f6e2d592-f8c3-42f5-8a1a-9835ee21f426"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "mysql-operator"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:serviceaccounts"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2022-02-22T20:48:55Z",
                            "name": "mysql-operator",
                            "resourceVersion": "109544206",
                            "uid": "85c5c6b8-00e6-46cf-9ade-ebc56d5f9983"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets",
                                    "configmaps",
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update",
                                    "create",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "patch",
                                    "update",
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch",
                                    "extensions"
                                ],
                                "resources": [
                                    "jobs",
                                    "cronjobs"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "mysql.oracle.com"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "zalando.org"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-scheduler",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-scheduler",
                            "resourceVersion": "107",
                            "uid": "a9629605-7527-4613-88dd-318e246ecfe0"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-scheduler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:kube-scheduler",
                            "resourceVersion": "55353001",
                            "uid": "2efb3f38-1875-474b-970a-0fa549d126e8"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resourceNames": [
                                    "kube-scheduler"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-scheduler"
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "pods/binding"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers",
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims",
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csistoragecapacities"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csistoragecapacities"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csistoragecapacities"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-scan-scheduler-27432000-8gm4p",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-27T00:00:00Z",
                    "generateName": "armo-scan-scheduler-27432000-",
                    "labels": {
                        "controller-uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0",
                        "job-name": "armo-scan-scheduler-27432000"
                    },
                    "name": "armo-scan-scheduler-27432000-8gm4p",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-scan-scheduler-27432000",
                            "uid": "a27df3da-2c9b-499a-9a3f-58af92b238f0"
                        }
                    ],
                    "resourceVersion": "112022014",
                    "uid": "dcfdedd8-64cb-409f-829d-602260f4320e"
                },
                "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                        {
                            "name": "armo-scan-scheduler",
                            "image": "curlimages/curl:latest",
                            "command": [
                                "/bin/sh",
                                "-c"
                            ],
                            "args": [
                                "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "armo-scan-scheduler-volume",
                                    "readOnly": true,
                                    "mountPath": "/home/curl_user/trigger-script.sh",
                                    "subPath": "trigger-script.sh"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 511,
                                "name": "armo-scan-scheduler-config"
                            },
                            "name": "armo-scan-scheduler-volume"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-6b47f757b4",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "15",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T09:19:54Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "46",
                        "pod-template-hash": "6b47f757b4",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-6b47f757b4",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "112886138",
                    "uid": "c62a5156-9712-46f2-ba9e-b34f379dcb0b"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "6b47f757b4",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "46",
                                "pod-template-hash": "6b47f757b4",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T07:03:15Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf",
                    "namespace": "armo-system",
                    "resourceVersion": "102367506",
                    "uid": "1d3e37d5-ce39-4542-a959-a9bf5c4b0653"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "1d3e37d5-ce39-4542-a959-a9bf5c4b0653"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "5d89d4a1-9a5f-4d39-b365-4b7d389c02cf"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "1d3e37d5-ce39-4542-a959-a9bf5c4b0653",
                                "job-name": "armo-kubescape-on-demand--5d89d4a1-9a5f-4d39-b365-4b7d389c02cf"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.146",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/default/Pod/jaeger-6f6b5d8689-pd6gl",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "prometheus.io/port": "16686",
                        "prometheus.io/scrape": "true"
                    },
                    "creationTimestamp": "2022-01-27T12:22:13Z",
                    "generateName": "jaeger-6f6b5d8689-",
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger",
                        "pod-template-hash": "6f6b5d8689"
                    },
                    "name": "jaeger-6f6b5d8689-pd6gl",
                    "namespace": "default",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "jaeger-6f6b5d8689",
                            "uid": "4519409e-c423-4af8-ade4-1f90098f433b"
                        }
                    ],
                    "resourceVersion": "96318389",
                    "uid": "0d97b345-e885-49ae-a189-c32ba686efbc"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "jaeger",
                            "image": "jaegertracing/all-in-one",
                            "ports": [
                                {
                                    "containerPort": 5775,
                                    "protocol": "UDP"
                                },
                                {
                                    "containerPort": 6831,
                                    "protocol": "UDP"
                                },
                                {
                                    "containerPort": 6832,
                                    "protocol": "UDP"
                                },
                                {
                                    "containerPort": 5778,
                                    "protocol": "TCP"
                                },
                                {
                                    "containerPort": 16686,
                                    "protocol": "TCP"
                                },
                                {
                                    "containerPort": 9411,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-jcrhj",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/",
                                    "port": 14269,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "kube-api-access-jcrhj",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-dns-599484b884-9fdzm",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "kubedns",
                        "prometheus.io/port": "10054",
                        "prometheus.io/scrape": "true",
                        "scheduler.alpha.kubernetes.io/critical-pod": "",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-01-27T12:22:15Z",
                    "generateName": "kube-dns-599484b884-",
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "599484b884"
                    },
                    "name": "kube-dns-599484b884-9fdzm",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "kube-dns-599484b884",
                            "uid": "2c05f1f0-0348-47c0-9f2b-b859c4ecc6eb"
                        }
                    ],
                    "resourceVersion": "96318501",
                    "uid": "dc35b463-ac5e-440a-b35c-f7963632ede9"
                },
                "spec": {
                    "affinity": {
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "k8s-app",
                                                    "operator": "In",
                                                    "values": [
                                                        "kube-dns"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    },
                                    "weight": 100
                                }
                            ]
                        }
                    },
                    "containers": [
                        {
                            "name": "kubedns",
                            "image": "gke.gcr.io/k8s-dns-kube-dns:1.21.0-gke.0",
                            "args": [
                                "--domain=cluster.local.",
                                "--dns-port=10053",
                                "--config-dir=/kube-dns-config",
                                "--v=2"
                            ],
                            "ports": [
                                {
                                    "name": "dns-local",
                                    "containerPort": 10053,
                                    "protocol": "UDP"
                                },
                                {
                                    "name": "dns-tcp-local",
                                    "containerPort": 10053,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "metrics",
                                    "containerPort": 10055,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "PROMETHEUS_PORT",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "210Mi"
                                },
                                "requests": {
                                    "cpu": "100m",
                                    "memory": "70Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-dns-config",
                                    "mountPath": "/kube-dns-config"
                                },
                                {
                                    "name": "kube-api-access-v4ncv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthcheck/kubedns",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/readiness",
                                    "port": 8081,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 3,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001,
                                "runAsGroup": 1001,
                                "readOnlyRootFilesystem": true,
                                "allowPrivilegeEscalation": false
                            }
                        },
                        {
                            "name": "dnsmasq",
                            "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny:1.21.0-gke.0",
                            "args": [
                                "-v=2",
                                "-logtostderr",
                                "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                "-restartDnsmasq=true",
                                "--",
                                "-k",
                                "--cache-size=1000",
                                "--no-negcache",
                                "--dns-forward-max=1500",
                                "--log-facility=-",
                                "--server=/cluster.local/127.0.0.1#10053",
                                "--server=/in-addr.arpa/127.0.0.1#10053",
                                "--server=/ip6.arpa/127.0.0.1#10053"
                            ],
                            "ports": [
                                {
                                    "name": "dns",
                                    "containerPort": 53,
                                    "protocol": "UDP"
                                },
                                {
                                    "name": "dns-tcp",
                                    "containerPort": 53,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "150m",
                                    "memory": "20Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-dns-config",
                                    "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                },
                                {
                                    "name": "kube-api-access-v4ncv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthcheck/dnsmasq",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "add": [
                                        "NET_BIND_SERVICE",
                                        "SETGID"
                                    ],
                                    "drop": [
                                        "all"
                                    ]
                                }
                            }
                        },
                        {
                            "name": "sidecar",
                            "image": "gke.gcr.io/k8s-dns-sidecar:1.21.0-gke.0",
                            "args": [
                                "--v=2",
                                "--logtostderr",
                                "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 10054,
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "20Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-v4ncv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/metrics",
                                    "port": 10054,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001,
                                "runAsGroup": 1001,
                                "readOnlyRootFilesystem": true,
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "Default",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 65534,
                        "seccompProfile": {
                            "type": "RuntimeDefault"
                        },
                        "supplementalGroups": [
                            65534
                        ]
                    },
                    "serviceAccount": "kube-dns",
                    "serviceAccountName": "kube-dns",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "kube-dns",
                                "optional": true
                            },
                            "name": "kube-dns-config"
                        },
                        {
                            "name": "kube-api-access-v4ncv",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "endpoint-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpoint-controller",
                            "resourceVersion": "116",
                            "uid": "a2c4485f-33ae-4756-9d3c-77682ca7a6eb"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpoint-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpoint-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpoint-controller",
                            "resourceVersion": "77",
                            "uid": "82c0a1c0-5ad5-4e02-a773-53ece10b1b62"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints/restricted"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/Service/kube-dns",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:53Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "kube-dns",
                        "kubernetes.io/cluster-service": "true",
                        "kubernetes.io/name": "KubeDNS"
                    },
                    "name": "kube-dns",
                    "namespace": "kube-system",
                    "resourceVersion": "313",
                    "uid": "ba5c682a-f8d9-4ada-b48e-0e06c4ac7446"
                },
                "spec": {
                    "clusterIP": "10.40.0.10",
                    "clusterIPs": [
                        "10.40.0.10"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "dns",
                            "port": 53,
                            "protocol": "UDP",
                            "targetPort": 53
                        },
                        {
                            "name": "dns-tcp",
                            "port": 53,
                            "protocol": "TCP",
                            "targetPort": 53
                        }
                    ],
                    "selector": {
                        "k8s-app": "kube-dns"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:deployment-controller",
                    "resourceVersion": "114",
                    "uid": "ec49a946-cd38-4f16-bb61-95e0b4b01594"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:deployment-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "deployment-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/ttl-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "ttl-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "188",
                    "uid": "0619f49a-c218-4afa-bdac-9ee7326f642e"
                },
                "secrets": [
                    {
                        "name": "ttl-controller-token-zl6sl"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-775fc97497",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "13",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T11:04:46Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "47",
                        "pod-template-hash": "775fc97497",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-775fc97497",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "112927232",
                    "uid": "0eeda804-7123-4d79-8cec-6f3b450d86ee"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "775fc97497",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "47",
                                "pod-template-hash": "775fc97497",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:185",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-rotation/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-rotation",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:nodes",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:beta:kubelet-certificate-rotation",
                            "resourceVersion": "620",
                            "uid": "d8828cfb-dd16-46a2-8412-ffdc0b6cd1ec"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "gce:beta:kubelet-certificate-rotation"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:nodes"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:beta:kubelet-certificate-rotation",
                            "resourceVersion": "623",
                            "uid": "b2986ba8-927c-4714-9004-1e349ea81749"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/selfnodeclient",
                                    "certificatesigningrequests/selfnodeserver"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/disruption-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:disruption-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "disruption-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:disruption-controller",
                            "resourceVersion": "115",
                            "uid": "a7fca892-36a0-4e3b-9e2a-eedfb772cba2"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:disruption-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "disruption-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:disruption-controller",
                            "resourceVersion": "76",
                            "uid": "e39fef6c-e25d-4dfd-b039-4bab61ad6047"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/metrics-server/rbac.authorization.k8s.io/v1//ClusterRole/system:metrics-server/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:metrics-server",
            "object": {
                "kind": "ServiceAccount",
                "name": "metrics-server",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "system:metrics-server",
                            "resourceVersion": "410",
                            "uid": "5e88eef0-945d-4f90-80f7-6f6576b5e444"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:metrics-server"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:44:55Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "system:metrics-server",
                            "resourceVersion": "55353501",
                            "uid": "1fcbf32c-f179-4641-ae09-8f8fa682d74e"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "nodes",
                                    "namespaces"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resourceNames": [
                                    "metrics-server-v0.3.6",
                                    "metrics-server-v0.4.4",
                                    "metrics-server-v0.5.0"
                                ],
                                "resources": [
                                    "deployments"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch",
                                    "patch"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Service/mysql-1645559751-headless",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "mysql-1645559751",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:56:01Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559751-headless",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109522951",
                    "uid": "4289ba63-c55a-434a-b0b3-bf31c19be91c"
                },
                "spec": {
                    "clusterIP": "None",
                    "clusterIPs": [
                        "None"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306,
                            "protocol": "TCP",
                            "targetPort": "mysql"
                        }
                    ],
                    "publishNotReadyAddresses": true,
                    "selector": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/name": "mysql"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1//Namespace/cyberarmor-system",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:24:44Z",
                    "labels": {
                        "app": "cyberarmor-system",
                        "kubernetes.io/metadata.name": "cyberarmor-system",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "cyberarmor-system",
                    "resourceVersion": "52910922",
                    "uid": "1876626e-097d-4d07-9285-e3aed4ad8a58"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-77799c66cd",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "15",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-21T07:41:52Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "45",
                        "pod-template-hash": "77799c66cd",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-77799c66cd",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "112842357",
                    "uid": "6683cc47-eb4c-49dc-a372-10eeca76b35c"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "77799c66cd",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "45",
                                "pod-template-hash": "77799c66cd",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-default-deployment-nginx-deployment",
            "object": {
                "apiVersion": "v1",
                "binaryData": {
                    "nginx": "eyJ3bGlkIjoiIiwiYWdlbnRUeXBlIjoiTGludXggUHJlbG9hZCBBZ2VudCIsImNvbW1hbmRMaW5lIjpbIm5naW54IiwiLWciLCJkYWVtb24gb2ZmOyJdfQ==",
                    "nginx-99": "eyJ3bGlkIjoiIiwiYWdlbnRUeXBlIjoiTGludXggUHJlbG9hZCBBZ2VudCIsImNvbW1hbmRMaW5lIjpbIm5naW54IiwiLWciLCJkYWVtb24gb2ZmOyJdfQ=="
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "armo.wlid": "wlid://cluster-liortest1/namespace-default/deployment-nginx-deployment"
                    },
                    "creationTimestamp": "2021-12-14T17:28:40Z",
                    "labels": {
                        "app": "ca-default-deployment-nginx-deployment",
                        "origin-namespace": "default"
                    },
                    "name": "ca-default-deployment-nginx-deployment",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "80992351",
                    "uid": "f90b8f63-09c1-41eb-ba02-48b4ccedd2e2"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/gce:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/gce:cloud-provider",
            "object": {
                "kind": "ServiceAccount",
                "name": "cloud-provider",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:cloud-provider",
                            "namespace": "kube-system",
                            "resourceVersion": "597",
                            "uid": "73540b08-2e5a-496b-b386-1b9f3f7b3aa4"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "gce:cloud-provider"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cloud-provider",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:02Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:cloud-provider",
                            "namespace": "kube-system",
                            "resourceVersion": "599",
                            "uid": "65769975-d7ac-42ed-99cf-555022f53035"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "patch",
                                    "update",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ServiceAccount/ca-controller-service-account",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:24:46Z",
                    "labels": {
                        "app": "ca-controller-service-account",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-controller-service-account",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52910945",
                    "uid": "805e156e-2ca0-4d88-aabe-4656ca626302"
                },
                "secrets": [
                    {
                        "name": "ca-controller-service-account-token-9pbkc"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-5ccc6f75c5",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "13",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-16T07:33:11Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "5ccc6f75c5",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-5ccc6f75c5",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "106479276",
                    "uid": "3d0dd5a0-6cca-409f-b2b3-7b37329c173a"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "5ccc6f75c5",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "5ccc6f75c5",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:113",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "ephemeral-storage": "8Gi",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "ephemeral-storage": "2Gi",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-rs7j",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "1523831361626689442",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-rs7j\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-01-30T11:07:37Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "resourceVersion": "113529192",
                    "uid": "3ee86af2-0ce3-48e9-9142-58fc9e695d4e"
                },
                "spec": {
                    "podCIDR": "10.36.3.0/24",
                    "podCIDRs": [
                        "10.36.3.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-rs7j"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-11-16T07:45:06Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:ttl-after-finished-controller",
                    "resourceVersion": "55353005",
                    "uid": "15667f5a-5ba9-4d3b-a154-2af8516ebae6"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:ttl-after-finished-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "ttl-after-finished-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/ephemeral-volume-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-11-16T07:45:44Z",
                    "name": "ephemeral-volume-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "55353211",
                    "uid": "110ac5af-47b0-4cf0-b254-ce3b65c60505"
                },
                "secrets": [
                    {
                        "name": "ephemeral-volume-controller-token-w9m89"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/default/Deployment/jaeger",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-10-13T12:52:08Z",
                    "generation": 1,
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "name": "jaeger",
                    "namespace": "default",
                    "resourceVersion": "96318391",
                    "uid": "39307a24-c846-4d64-bc2d-629db4188315"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "jaeger",
                            "app.kubernetes.io/component": "all-in-one",
                            "app.kubernetes.io/name": "jaeger"
                        }
                    },
                    "strategy": {
                        "type": "Recreate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "prometheus.io/port": "16686",
                                "prometheus.io/scrape": "true"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app": "jaeger",
                                "app.kubernetes.io/component": "all-in-one",
                                "app.kubernetes.io/name": "jaeger"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "jaeger",
                                    "image": "jaegertracing/all-in-one",
                                    "ports": [
                                        {
                                            "containerPort": 5775,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 6831,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 6832,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "containerPort": 5778,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "containerPort": 16686,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "containerPort": 9411,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/",
                                            "port": 14269,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-xcp0",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "3058086330792398754",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-xcp0\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-01-30T11:07:38Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "resourceVersion": "113529127",
                    "uid": "bafcb6fc-8dae-4bb4-a584-b888e6cc0622"
                },
                "spec": {
                    "podCIDR": "10.36.1.0/24",
                    "podCIDRs": [
                        "10.36.1.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-xcp0"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/external-metrics-reader",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "external-metrics-reader",
                    "resourceVersion": "576",
                    "uid": "76c6196a-816b-4b0d-a4bf-6a12685b26a8"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "external.metrics.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "list",
                            "get",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-audit-644dccb557-6f565",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-01-27T12:22:13Z",
                    "generateName": "ca-audit-644dccb557-",
                    "labels": {
                        "app": "ca-audit",
                        "pod-template-hash": "644dccb557",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit-644dccb557-6f565",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-audit-644dccb557",
                            "uid": "6554a411-7d46-4f13-956d-f8cb6b4b00b5"
                        }
                    ],
                    "resourceVersion": "96318427",
                    "uid": "8f06e864-dc88-4ba7-aff6-0849eacc1d31"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-audit",
                            "image": "quay.io/armosec/k8s-ca-auditlog-ubi:latest",
                            "args": [
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "ca-audit-port",
                                    "containerPort": 443,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverREST"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CONFIG_FILES",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_SERVER_TYPE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "ca-audit",
                                            "key": "cluster_kind"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "50m",
                                    "memory": "100Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "50Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "ca-audit",
                                    "readOnly": true,
                                    "mountPath": "/config"
                                },
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-zl6cd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-audit",
                    "serviceAccountName": "ca-audit",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "config",
                                        "path": "config.json"
                                    }
                                ],
                                "name": "ca-audit"
                            },
                            "name": "ca-audit"
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-zl6cd",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/kube-dns-autoscaler-844c9d9448-v6nzk",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-01-27T12:22:16Z",
                    "generateName": "kube-dns-autoscaler-844c9d9448-",
                    "labels": {
                        "k8s-app": "kube-dns-autoscaler",
                        "pod-template-hash": "844c9d9448"
                    },
                    "name": "kube-dns-autoscaler-844c9d9448-v6nzk",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "kube-dns-autoscaler-844c9d9448",
                            "uid": "54a0c600-9198-46a8-a7f3-b008b6e1117f"
                        }
                    ],
                    "resourceVersion": "96317701",
                    "uid": "0358546c-0f01-4bfb-bc76-c6d5e01c996d"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "autoscaler",
                            "image": "gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0",
                            "command": [
                                "/cluster-proportional-autoscaler",
                                "--namespace=kube-system",
                                "--configmap=kube-dns-autoscaler",
                                "--target=Deployment/kube-dns",
                                "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}",
                                "--logtostderr=true",
                                "--v=2"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "20m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kube-api-access-q9p7n",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 65534,
                        "seccompProfile": {
                            "type": "RuntimeDefault"
                        },
                        "supplementalGroups": [
                            65534
                        ]
                    },
                    "serviceAccount": "kube-dns-autoscaler",
                    "serviceAccountName": "kube-dns-autoscaler",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "kube-api-access-q9p7n",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/Pod/mysql-1645559415-0",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "checksum/configuration": "4cdb824597a7a6fde9a2088b2b4e1acc503811de46670e084e8bbaffca44c6e8"
                    },
                    "creationTimestamp": "2022-02-22T19:50:24Z",
                    "generateName": "mysql-1645559415-",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "controller-revision-hash": "mysql-1645559415-76b77cddf8",
                        "helm.sh/chart": "mysql-8.8.25",
                        "statefulset.kubernetes.io/pod-name": "mysql-1645559415-0"
                    },
                    "name": "mysql-1645559415-0",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "StatefulSet",
                            "name": "mysql-1645559415",
                            "uid": "2c14c8f9-2f1e-4e57-80fc-80715f7bb9fe"
                        }
                    ],
                    "resourceVersion": "109521199",
                    "uid": "ee63217a-0ed3-4d3a-bc15-0434c28c3ba5"
                },
                "spec": {
                    "affinity": {
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "primary",
                                                "app.kubernetes.io/instance": "mysql-1645559415",
                                                "app.kubernetes.io/name": "mysql"
                                            }
                                        },
                                        "namespaces": [
                                            "mysql-demos"
                                        ],
                                        "topologyKey": "kubernetes.io/hostname"
                                    },
                                    "weight": 1
                                }
                            ]
                        }
                    },
                    "containers": [
                        {
                            "name": "mysql",
                            "image": "docker.io/bitnami/mysql:8.0.28-debian-10-r15",
                            "ports": [
                                {
                                    "name": "mysql",
                                    "containerPort": 3306,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "BITNAMI_DEBUG",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "mysql-1645559415",
                                            "key": "mysql-root-password"
                                        }
                                    }
                                },
                                {
                                    "name": "MYSQL_DATABASE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "data",
                                    "mountPath": "/bitnami/mysql"
                                },
                                {
                                    "name": "config",
                                    "mountPath": "/opt/bitnami/mysql/conf/my.cnf",
                                    "subPath": "my.cnf"
                                },
                                {
                                    "name": "kube-api-access-szcjd",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-ec",
                                        "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                    ]
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 10
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "runAsUser": 1001
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostname": "mysql-1645559415-0",
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1001
                    },
                    "serviceAccount": "mysql-1645559415",
                    "serviceAccountName": "mysql-1645559415",
                    "subdomain": "mysql-1645559415",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "name": "data",
                            "persistentVolumeClaim": {
                                "claimName": "data-mysql-1645559415-0"
                            }
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "mysql-1645559415"
                            },
                            "name": "config"
                        },
                        {
                            "name": "kube-api-access-szcjd",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/ingress-gce-lock",
            "object": {
                "apiVersion": "v1",
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-a609d8f1a06a4e518784-db5b-7300-vm_7954d\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2022-02-26T02:29:52Z\",\"renewTime\":\"2022-03-01T14:42:31Z\",\"leaderTransitions\":19}"
                    },
                    "creationTimestamp": "2021-07-07T05:45:12Z",
                    "name": "ingress-gce-lock",
                    "namespace": "kube-system",
                    "resourceVersion": "113529698",
                    "uid": "7999f785-a134-4070-b889-c6b26972c14a"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/ca-cr-actor",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-16T07:46:30Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "ca-cr-actor",
                    "resourceVersion": "55353534",
                    "uid": "5da96627-387d-45d5-ac89-20060bd00036"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "internal.autoscaling.gke.io"
                        ],
                        "resources": [
                            "capacityrequests"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/mysql-demos",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2022-02-22T19:49:39Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "mysql-demos"
                    },
                    "name": "mysql-demos",
                    "resourceVersion": "109520459",
                    "uid": "e610888d-5adb-4645-8227-41b2447805dc"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-recurring-4681143087714448482-nsa-27425638",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-22T13:58:00Z",
                    "labels": {
                        "controller-uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa",
                            "uid": "989af35e-5161-49be-aeab-eab2d2918235"
                        }
                    ],
                    "resourceVersion": "109383542",
                    "uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "NSA",
                                "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "7554dbf0-a4fd-407c-aa70-2af65d0b045a",
                                "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425638"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.148",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "NSA",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "OnFailure",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-9f78b",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-27T12:22:14Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-9f78b",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "96317704",
                    "uid": "8e76a544-d72f-4717-bb14-5ddf40e66599"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-zcvqp",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-zcvqp",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:token-cleaner",
                    "namespace": "kube-system",
                    "resourceVersion": "142",
                    "uid": "f33290f4-9957-4bcc-bde8-f35fbc012167"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/payment",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:42Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "payment"
                    },
                    "name": "payment",
                    "namespace": "default",
                    "resourceVersion": "41559597",
                    "uid": "7af0f193-0d5b-4da5-8bcb-ae36bf317ad7"
                },
                "spec": {
                    "clusterIP": "10.40.10.161",
                    "clusterIPs": [
                        "10.40.10.161"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "http-payment",
                            "port": 9000,
                            "protocol": "TCP",
                            "targetPort": 9000
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "payment"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/ttl-after-finished-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-11-16T07:45:44Z",
                    "name": "ttl-after-finished-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "55353220",
                    "uid": "a183bb2c-1bfb-4b03-a4e1-00121b1489be"
                },
                "secrets": [
                    {
                        "name": "ttl-after-finished-controller-token-5jwz2"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/armo-system/RoleBinding/armo-scanner-service-account-role-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T13:36:49Z",
                    "labels": {
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-scanner-service-account-role-binding",
                    "namespace": "armo-system",
                    "resourceVersion": "91066522",
                    "uid": "34792212-f18c-465e-a4a1-2d89e1332e99"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "armo-scanner-service-account-roles"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "armo-scanner-service-account",
                        "namespace": "armo-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f247665x",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "MITRE",
                        "armo.jobid": "7b9cddc9-39e9-41ea-9246-f243d0460c70"
                    },
                    "creationTimestamp": "2022-02-09T16:46:20Z",
                    "generateName": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046-",
                    "labels": {
                        "controller-uid": "fa78b287-7a24-4685-8424-af8de4c08831",
                        "job-name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046"
                    },
                    "name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f247665x",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-on-demand-mitre-7b9cddc9-39e9-41ea-9246-f243d046",
                            "uid": "fa78b287-7a24-4685-8424-af8de4c08831"
                        }
                    ],
                    "resourceVersion": "102030711",
                    "uid": "166ac46e-a9d1-48f1-abb1-063dd84952b7"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.143",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "MITRE",
                                "--submit",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-wklc5",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-wklc5",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-vfd8",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "2039207319519874978",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-vfd8\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-01-30T11:07:38Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-vfd8",
                    "resourceVersion": "113528286",
                    "uid": "1fe785f1-9410-41f0-846d-3dc850405d91"
                },
                "spec": {
                    "podCIDR": "10.36.2.0/24",
                    "podCIDRs": [
                        "10.36.2.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-vfd8"
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/kube-root-ca.crt",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "ca.crt": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:50Z",
                    "name": "kube-root-ca.crt",
                    "namespace": "kube-system",
                    "resourceVersion": "280",
                    "uid": "dbc3fa73-9030-44e9-acb5-ca75472871f5"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:node-controller",
                    "resourceVersion": "124",
                    "uid": "dc9be93a-d0e6-4cdb-8e71-24dbf753315e"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:node-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "node-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/konnectivity-agent-autoscaler",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "generation": 2,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "konnectivity-agent-autoscaler",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-autoscaler",
                    "namespace": "kube-system",
                    "resourceVersion": "96317673",
                    "uid": "7826cb7c-7f4f-40cc-9e0b-7867cada7921"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent-autoscaler"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.3.2"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent-autoscaler"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler:1.8.4-gke.1",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=konnectivity-agent-autoscaler-config",
                                        "--target=deployment/konnectivity-agent",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10M"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent-cpha",
                            "serviceAccountName": "konnectivity-agent-cpha",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-notification-service-54dcb5bb67",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "3",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-10T06:40:10Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-notification-service",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-notification-service",
                        "helm.sh/chart": "armo-cluster-components-1.6.6",
                        "pod-template-hash": "54dcb5bb67",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-notification-service-54dcb5bb67",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-notification-service",
                            "uid": "042acd08-1bff-40d8-a6d9-50e388558bcb"
                        }
                    ],
                    "resourceVersion": "106479356",
                    "uid": "55927783-9d35-4e47-bb7d-be17703ff7ce"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-notification-service",
                            "pod-template-hash": "54dcb5bb67",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-notification-service",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-notification-service",
                                "helm.sh/chart": "armo-cluster-components-1.6.6",
                                "pod-template-hash": "54dcb5bb67",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-notification-service",
                                    "image": "quay.io/armosec/notification-server-ubi:89",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "websocket",
                                            "containerPort": 8001,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "rest-api",
                                            "containerPort": 8002,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_HOST",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "masterNotificationServer"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MASTER_NOTIFICATION_SERVER_ATTRIBUTES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_WS_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "50Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/StatefulSet/mysql-1645559751",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559751",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:56:01Z",
                    "generation": 1,
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559751",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559751",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109523393",
                    "uid": "6edfc3a9-62dc-4321-a6a4-e9d0f7fa565d"
                },
                "spec": {
                    "podManagementPolicy": "OrderedReady",
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/component": "primary",
                            "app.kubernetes.io/instance": "mysql-1645559751",
                            "app.kubernetes.io/name": "mysql"
                        }
                    },
                    "serviceName": "mysql-1645559751",
                    "template": {
                        "metadata": {
                            "annotations": {
                                "checksum/configuration": "2b7e24da26569507a239f4d2075d2526da2e19d4467a57d97ed7b723f4485d3c"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/component": "primary",
                                "app.kubernetes.io/instance": "mysql-1645559751",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "mysql",
                                "helm.sh/chart": "mysql-8.8.25"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "app.kubernetes.io/component": "primary",
                                                        "app.kubernetes.io/instance": "mysql-1645559751",
                                                        "app.kubernetes.io/name": "mysql"
                                                    }
                                                },
                                                "namespaces": [
                                                    "mysql-demos"
                                                ],
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 1
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "docker.io/bitnami/mysql:8.0.28-debian-10-r15",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "BITNAMI_DEBUG",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mysql-1645559751",
                                                    "key": "mysql-root-password"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_DATABASE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "data",
                                            "mountPath": "/bitnami/mysql"
                                        },
                                        {
                                            "name": "config",
                                            "mountPath": "/opt/bitnami/mysql/conf/my.cnf",
                                            "subPath": "my.cnf"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "readinessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 5,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "startupProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/bash",
                                                "-ec",
                                                "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                                            ]
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 10
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 1001
                            },
                            "serviceAccount": "mysql-1645559751",
                            "serviceAccountName": "mysql-1645559751",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "mysql-1645559751"
                                    },
                                    "name": "config"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "type": "RollingUpdate"
                    },
                    "volumeClaimTemplates": [
                        {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/component": "primary",
                                    "app.kubernetes.io/instance": "mysql-1645559751",
                                    "app.kubernetes.io/name": "mysql"
                                },
                                "name": "data"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "8Gi"
                                    }
                                },
                                "volumeMode": "Filesystem"
                            },
                            "status": {
                                "phase": "Pending"
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1//Node/gke-bez-longrun-3-default-pool-d450b024-p7q9",
            "object": {
                "apiVersion": "v1",
                "kind": "Node",
                "metadata": {
                    "annotations": {
                        "container.googleapis.com/instance_id": "5257459355596083106",
                        "csi.volume.kubernetes.io/nodeid": "{\"pd.csi.storage.gke.io\":\"projects/elated-pottery-310110/zones/us-central1-c/instances/gke-bez-longrun-3-default-pool-d450b024-p7q9\"}",
                        "node.alpha.kubernetes.io/ttl": "0",
                        "node.gke.io/last-applied-node-labels": "cloud.google.com/gke-boot-disk=pd-standard,cloud.google.com/gke-container-runtime=containerd,cloud.google.com/gke-nodepool=default-pool,cloud.google.com/gke-os-distribution=cos,cloud.google.com/machine-family=e2",
                        "node.gke.io/last-applied-node-taints": "",
                        "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                    },
                    "creationTimestamp": "2022-01-30T11:07:37Z",
                    "labels": {
                        "beta.kubernetes.io/arch": "amd64",
                        "beta.kubernetes.io/instance-type": "e2-medium",
                        "beta.kubernetes.io/os": "linux",
                        "cloud.google.com/gke-boot-disk": "pd-standard",
                        "cloud.google.com/gke-container-runtime": "containerd",
                        "cloud.google.com/gke-nodepool": "default-pool",
                        "cloud.google.com/gke-os-distribution": "cos",
                        "cloud.google.com/machine-family": "e2",
                        "failure-domain.beta.kubernetes.io/region": "us-central1",
                        "failure-domain.beta.kubernetes.io/zone": "us-central1-c",
                        "kubernetes.io/arch": "amd64",
                        "kubernetes.io/hostname": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                        "kubernetes.io/os": "linux",
                        "node.kubernetes.io/instance-type": "e2-medium",
                        "topology.gke.io/zone": "us-central1-c",
                        "topology.kubernetes.io/region": "us-central1",
                        "topology.kubernetes.io/zone": "us-central1-c"
                    },
                    "name": "gke-bez-longrun-3-default-pool-d450b024-p7q9",
                    "resourceVersion": "113529574",
                    "uid": "02aaab1c-5183-4296-907d-5e53945e2200"
                },
                "spec": {
                    "podCIDR": "10.36.0.0/24",
                    "podCIDRs": [
                        "10.36.0.0/24"
                    ],
                    "providerID": "gce://elated-pottery-310110/us-central1-c/gke-bez-longrun-3-default-pool-d450b024-p7q9"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-migrator-v2",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:storageversionmigrator",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-migrator-v2",
                            "resourceVersion": "559",
                            "uid": "b4bd5564-6745-4540-a946-cdead61ec150"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "cluster-admin"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:storageversionmigrator"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "cluster-admin",
                            "resourceVersion": "42",
                            "uid": "1b7dd6d7-6ea3-4b5c-a930-c46053971e4a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "kubernetes.io/deprecation": "cloud-provider clusterrole is DEPRECATED in the concern of potential collisions and will be removed in 1.16. Do not use this role."
                    },
                    "creationTimestamp": "2021-07-07T05:45:02Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "cloud-provider",
                    "resourceVersion": "602",
                    "uid": "2fb75efc-fdea-4b8f-9e87-289ee25f4355"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:clustermetrics",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "clustermetrics-rbac",
                        "components.gke.io/component-version": "1.4.0"
                    },
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:clustermetrics",
                    "resourceVersion": "426",
                    "uid": "08397185-b744-4f9c-8779-948002401e58"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "componentstatuses",
                            "namespaces",
                            "nodes",
                            "pods",
                            "resourcequotas"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "admissionregistration.k8s.io"
                        ],
                        "resources": [
                            "mutatingwebhookconfigurations"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "deployments",
                            "replicasets",
                            "statefulsets",
                            "daemonsets"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:namespace-controller",
                    "resourceVersion": "84",
                    "uid": "ee248716-7893-4bdb-b2a4-46403497be93"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces"
                        ],
                        "verbs": [
                            "delete",
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces/finalize",
                            "namespaces/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "delete",
                            "deletecollection",
                            "get",
                            "list"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/metrics-server",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "metrics-server",
                    "namespace": "kube-system",
                    "resourceVersion": "393",
                    "uid": "2abcca86-0d7c-4795-8fcf-365bd1c9a274"
                },
                "secrets": [
                    {
                        "name": "metrics-server-token-67bz7"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:cloud-provider",
                    "namespace": "kube-system",
                    "resourceVersion": "150",
                    "uid": "606beee4-091e-40c5-8e89-5d6ea18e9d8d"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system:controller:cloud-provider"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "cloud-provider",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/ca-controller-roles",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:24:47Z",
                    "labels": {
                        "app": "ca-controller-roles",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-controller-roles",
                    "resourceVersion": "52910946",
                    "uid": "37d7d53d-5d32-48e9-a7fd-3ead5e2a7e37"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-12-09T15:04:48Z",
                    "name": "default",
                    "namespace": "armo-system",
                    "resourceVersion": "67723535",
                    "uid": "998aa40f-69e6-40f9-bd8e-a0bd760bec5f"
                },
                "secrets": [
                    {
                        "name": "default-token-jsdfz"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/metrics-server-v0.4.4-857776bc9c",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "4",
                        "deployment.kubernetes.io/revision-history": "2"
                    },
                    "creationTimestamp": "2021-11-16T07:46:46Z",
                    "generation": 4,
                    "labels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "857776bc9c",
                        "version": "v0.4.4"
                    },
                    "name": "metrics-server-v0.4.4-857776bc9c",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "metrics-server-v0.4.4",
                            "uid": "a709e59f-f8cf-45d2-8346-1ac9ec2d6696"
                        }
                    ],
                    "resourceVersion": "100755330",
                    "uid": "0eb62195-1e4f-4031-adf7-e37f9df4240d"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "857776bc9c",
                            "version": "v0.4.4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "metrics-server",
                                "pod-template-hash": "857776bc9c",
                                "version": "v0.4.4"
                            },
                            "name": "metrics-server"
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "metrics-server",
                                    "image": "k8s.gcr.io/metrics-server/metrics-server:v0.4.4",
                                    "command": [
                                        "/metrics-server",
                                        "--metric-resolution=30s",
                                        "--kubelet-port=10255",
                                        "--deprecated-kubelet-completely-insecure=true",
                                        "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                        "--cert-dir=/tmp",
                                        "--secure-port=443"
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "43m",
                                            "memory": "55Mi"
                                        },
                                        "requests": {
                                            "cpu": "43m",
                                            "memory": "55Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "tmp-dir",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "metrics-server-nanny",
                                    "image": "gke.gcr.io/addon-resizer:1.8.13-gke.0",
                                    "command": [
                                        "/pod_nanny",
                                        "--config-dir=/etc/config",
                                        "--cpu=40m",
                                        "--extra-cpu=0.5m",
                                        "--memory=35Mi",
                                        "--extra-memory=4Mi",
                                        "--threshold=5",
                                        "--deployment=metrics-server-v0.4.4",
                                        "--container=metrics-server",
                                        "--poll-period=30000",
                                        "--estimator=exponential",
                                        "--scale-down-delay=24h",
                                        "--minClusterSize=5",
                                        "--use-metrics=true"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "metrics-server-config-volume",
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                }
                            },
                            "serviceAccount": "metrics-server",
                            "serviceAccountName": "metrics-server",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "metrics-server-config"
                                    },
                                    "name": "metrics-server-config-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "tmp-dir"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T06:56:36Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1",
                    "namespace": "armo-system",
                    "resourceVersion": "102364576",
                    "uid": "a7dda6fe-e234-4a5e-8299-adf1fd2b0476"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "a7dda6fe-e234-4a5e-8299-adf1fd2b0476"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "a0d66248-f614-4538-aff7-aeadebfeafd1"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "a7dda6fe-e234-4a5e-8299-adf1fd2b0476",
                                "job-name": "armo-kubescape-on-demand--a0d66248-f614-4538-aff7-aeadebfeafd1"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.143",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--enable-host-scan",
                                        "--logger",
                                        "debug",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-scan-scheduler-27434880",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-03-01T00:00:00Z",
                    "labels": {
                        "controller-uid": "1aeab7cc-5612-483c-9c95-63d6062774b8",
                        "job-name": "armo-scan-scheduler-27434880"
                    },
                    "name": "armo-scan-scheduler-27434880",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "CronJob",
                            "name": "armo-scan-scheduler",
                            "uid": "b9150dc3-678a-4279-bd82-90da97902a0e"
                        }
                    ],
                    "resourceVersion": "113187435",
                    "uid": "1aeab7cc-5612-483c-9c95-63d6062774b8"
                },
                "spec": {
                    "backoffLimit": 6,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "1aeab7cc-5612-483c-9c95-63d6062774b8"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "1aeab7cc-5612-483c-9c95-63d6062774b8",
                                "job-name": "armo-scan-scheduler-27434880"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": false,
                            "containers": [
                                {
                                    "name": "armo-scan-scheduler",
                                    "image": "curlimages/curl:latest",
                                    "command": [
                                        "/bin/sh",
                                        "-c"
                                    ],
                                    "args": [
                                        "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "armo-scan-scheduler-volume",
                                            "readOnly": true,
                                            "mountPath": "/home/curl_user/trigger-script.sh",
                                            "subPath": "trigger-script.sh"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 511,
                                        "name": "armo-scan-scheduler-config"
                                    },
                                    "name": "armo-scan-scheduler-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:token-cleaner",
                    "namespace": "kube-system",
                    "resourceVersion": "151",
                    "uid": "639c6c15-09d5-411b-875c-ae2a4c79b694"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system:controller:token-cleaner"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "token-cleaner",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-scan-scheduler-27433440-8j8xq",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-02-28T00:00:00Z",
                    "generateName": "armo-scan-scheduler-27433440-",
                    "labels": {
                        "controller-uid": "1b00959b-7b98-49b7-b8dc-a3281416012e",
                        "job-name": "armo-scan-scheduler-27433440"
                    },
                    "name": "armo-scan-scheduler-27433440-8j8xq",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-scan-scheduler-27433440",
                            "uid": "1b00959b-7b98-49b7-b8dc-a3281416012e"
                        }
                    ],
                    "resourceVersion": "112622194",
                    "uid": "ae0bc67d-6390-4237-af80-fbbbefce426a"
                },
                "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                        {
                            "name": "armo-scan-scheduler",
                            "image": "curlimages/curl:latest",
                            "command": [
                                "/bin/sh",
                                "-c"
                            ],
                            "args": [
                                "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "armo-scan-scheduler-volume",
                                    "readOnly": true,
                                    "mountPath": "/home/curl_user/trigger-script.sh",
                                    "subPath": "trigger-script.sh"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 511,
                                "name": "armo-scan-scheduler-config"
                            },
                            "name": "armo-scan-scheduler-volume"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:metrics-server",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "system:metrics-server",
                    "resourceVersion": "410",
                    "uid": "5e88eef0-945d-4f90-80f7-6f6576b5e444"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:metrics-server"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "metrics-server",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/gke-metrics-agent",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:57Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "gke-metrics-agent",
                    "namespace": "kube-system",
                    "resourceVersion": "436",
                    "uid": "56f0ce2c-7252-43b7-8afe-f3d100e400f7"
                },
                "secrets": [
                    {
                        "name": "gke-metrics-agent-token-9n82s"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-webhook",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:24:57Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-webhook",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-webhook",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318079",
                    "uid": "414bf445-a68a-4541-9cbd-3e8fdf85a52c"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-webhook"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "certificate": "9cd8f7096b002d194e6cd0e12b4b14c7  ca.crt"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-webhook",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-webhook",
                                    "image": "quay.io/armosec/k8s-ca-webhook-ubi:latest",
                                    "args": [
                                        "-tlsCertFile=/etc/webhook/certs/tls.crt",
                                        "-tlsKeyFile=/etc/webhook/certs/tls.key",
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "mutating-port",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_WEBHOOK_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_WEBHOOK_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_DASHBOARD_BACKEND",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "dashboard"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_LOGIN_SECRET_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_ORACLE_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_NOTIFICATION_SERVER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "600Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "zip-download",
                                            "mountPath": "/cazips"
                                        },
                                        {
                                            "name": "ca-cluster-certificate",
                                            "readOnly": true,
                                            "mountPath": "/etc/webhook/certs"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "zip-download"
                                },
                                {
                                    "name": "ca-cluster-certificate",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-cluster-certificate"
                                    }
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-bfcc4bdb6",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "9",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-03T11:53:54Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "pod-template-hash": "bfcc4bdb6",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-bfcc4bdb6",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "102358359",
                    "uid": "ee4a6cb1-23e5-4a8d-97e0-9af21b21a7a1"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "bfcc4bdb6",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "pod-template-hash": "bfcc4bdb6",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:443",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/ReplicaSet/mycluster-router-8c4c457fc",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "0",
                        "deployment.kubernetes.io/max-replicas": "0",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:49:46Z",
                    "generation": 1,
                    "labels": {
                        "app.kubernetes.io/component": "router",
                        "app.kubernetes.io/created-by": "mysql-operator",
                        "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-router",
                        "app.kubernetes.io/managed-by": "mysql-operator",
                        "app.kubernetes.io/name": "mysql-router",
                        "component": "mysqlrouter",
                        "mysql.oracle.com/cluster": "mycluster",
                        "pod-template-hash": "8c4c457fc",
                        "tier": "mysql"
                    },
                    "name": "mycluster-router-8c4c457fc",
                    "namespace": "mysql-demos",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "mycluster-router",
                            "uid": "de6d5a6f-b97d-4a78-b807-ee050a231362"
                        }
                    ],
                    "resourceVersion": "109544583",
                    "uid": "1382bd87-c3c6-47a2-a186-b9aaf69308ff"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/component": "router",
                            "app.kubernetes.io/created-by": "mysql-operator",
                            "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-router",
                            "app.kubernetes.io/managed-by": "mysql-operator",
                            "app.kubernetes.io/name": "mysql-router",
                            "component": "mysqlrouter",
                            "mysql.oracle.com/cluster": "mycluster",
                            "pod-template-hash": "8c4c457fc",
                            "tier": "mysql"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/component": "router",
                                "app.kubernetes.io/created-by": "mysql-operator",
                                "app.kubernetes.io/instance": "mysql-innodbcluster-mycluster-router",
                                "app.kubernetes.io/managed-by": "mysql-operator",
                                "app.kubernetes.io/name": "mysql-router",
                                "component": "mysqlrouter",
                                "mysql.oracle.com/cluster": "mycluster",
                                "pod-template-hash": "8c4c457fc",
                                "tier": "mysql"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "router",
                                    "image": "mysql/mysql-router:8.0.28",
                                    "ports": [
                                        {
                                            "name": "mysqlrw",
                                            "containerPort": 6446,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlxrw",
                                            "containerPort": 6448,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlro",
                                            "containerPort": 6447,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "mysqlxro",
                                            "containerPort": 6449,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "http",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_HOST",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_PORT",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "MYSQL_USER",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mycluster-router",
                                                    "key": "routerUsername"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "mycluster-router",
                                                    "key": "routerPassword"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MYSQL_CREATE_ROUTER_USER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {},
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
            "object": {
                "kind": "ServiceAccount",
                "name": "cloud-provider",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:cloud-provider",
                            "namespace": "kube-system",
                            "resourceVersion": "150",
                            "uid": "606beee4-091e-40c5-8e89-5d6ea18e9d8d"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system:controller:cloud-provider"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cloud-provider",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:cloud-provider",
                            "namespace": "kube-system",
                            "resourceVersion": "141",
                            "uid": "20736afd-2989-40c0-9bce-ff900c59ffe4"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/armo-kubescape-service-account-roles",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-kubescape-service-account-roles",
                    "resourceVersion": "102375099",
                    "uid": "7928ce24-6cd9-45ee-b9b5-0ea7ab987dcc"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "describe",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "apps"
                        ],
                        "resources": [
                            "namespaces",
                            "daemonsets"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-bootstrap-node-bootstrapper",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kubelet-bootstrap-node-bootstrapper",
                    "resourceVersion": "344",
                    "uid": "fd3bce65-265c-467c-be57-b30baff0d135"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node-bootstrapper"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "kubelet-bootstrap"
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:endpointslicemirroring-controller",
                    "resourceVersion": "118",
                    "uid": "2b65e4a3-f3fc-4641-b03f-60fac83b5567"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:controller:endpointslicemirroring-controller"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "endpointslicemirroring-controller",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1//Namespace/armo-system",
            "object": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                    "creationTimestamp": "2021-12-09T15:04:48Z",
                    "labels": {
                        "kubernetes.io/metadata.name": "armo-system",
                        "name": "armo-system"
                    },
                    "name": "armo-system",
                    "resourceVersion": "67723531",
                    "uid": "68e0a945-00a7-417b-9b81-c12176c7f00d"
                },
                "spec": {
                    "finalizers": [
                        "kubernetes"
                    ]
                }
            }
        },
        {
            "resourceID": "apps/v1/mysql-demos/Deployment/prod-mysql",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2022-02-22T20:13:39Z",
                    "generation": 1,
                    "labels": {
                        "app": "mysql"
                    },
                    "name": "prod-mysql",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109530141",
                    "uid": "a93b978e-a185-4f6f-894d-274d127d0c4b"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "mysql"
                        }
                    },
                    "strategy": {
                        "type": "Recreate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "mysql"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "mysql",
                                    "image": "mysql:5.6",
                                    "ports": [
                                        {
                                            "name": "mysql",
                                            "containerPort": 3306,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "MYSQL_ROOT_PASSWORD",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "secretKeyRef": {
                                                    "name": "prod-mysql-pass",
                                                    "key": "password"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {},
                                    "volumeMounts": [
                                        {
                                            "name": "mysql-persistent-storage",
                                            "mountPath": "/var/lib/mysql"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "emptyDir": {},
                                    "name": "mysql-persistent-storage"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-collector-7674c44f46",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "7",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-03T11:53:52Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-collector",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-collector",
                        "pod-template-hash": "7674c44f46",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-collector-7674c44f46",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-collector",
                            "uid": "2d81ff29-666a-426f-ac67-fb1eda0d92a1"
                        }
                    ],
                    "resourceVersion": "101396357",
                    "uid": "1074796f-01f9-40ac-a36f-2b39ea833d2a"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-collector",
                            "pod-template-hash": "7674c44f46",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-collector",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-collector",
                                "pod-template-hash": "7674c44f46",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-collector",
                                    "image": "quay.io/armosec/k8s-ca-dashboard-aggregator-ubi:184",
                                    "args": [
                                        "-include-namespaces=armo-system",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "accountGuid"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "PRINT_REPORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "40Mi"
                                        }
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:snapshot-controller/rbac.authorization.k8s.io/v1/kube-system/Role/snapshot-controller-leaderelection/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/snapshot-controller-leaderelection",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:snapshot-controller",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "snapshot-controller",
                                "components.gke.io/component-version": "0.5.6",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "snapshot-controller-leaderelection",
                            "namespace": "kube-system",
                            "resourceVersion": "94208540",
                            "uid": "b00220f4-27a4-49f3-933a-aeaed0b7cf75"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "snapshot-controller-leaderelection"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:snapshot-controller"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "snapshot-controller",
                                "components.gke.io/component-version": "0.5.6",
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-07-07T05:44:58Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "snapshot-controller-leaderelection",
                            "namespace": "kube-system",
                            "resourceVersion": "94208539",
                            "uid": "99925ec0-f462-4658-83cf-712fbfbdd5ab"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list",
                                    "delete",
                                    "update",
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/armo-system/ServiceAccount/armo-scanner-service-account/rbac.authorization.k8s.io/v1/armo-system/Role/armo-scanner-service-account-roles/rbac.authorization.k8s.io/v1/armo-system/RoleBinding/armo-scanner-service-account-role-binding",
            "object": {
                "kind": "ServiceAccount",
                "name": "armo-scanner-service-account",
                "namespace": "armo-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2022-01-20T13:36:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-scanner-service-account-role-binding",
                            "namespace": "armo-system",
                            "resourceVersion": "91066522",
                            "uid": "34792212-f18c-465e-a4a1-2d89e1332e99"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "armo-scanner-service-account-roles"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "armo-scanner-service-account",
                                "namespace": "armo-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "meta.helm.sh/release-name": "armo",
                                "meta.helm.sh/release-namespace": "armo-system"
                            },
                            "creationTimestamp": "2022-01-20T13:36:49Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "Helm"
                            },
                            "name": "armo-scanner-service-account-roles",
                            "namespace": "armo-system",
                            "resourceVersion": "91066516",
                            "uid": "64909355-7d0d-4fda-866d-a142427b9074"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "describe"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs",
                                    "cronjobs"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/mysql-operator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:55Z",
                    "name": "mysql-operator",
                    "resourceVersion": "109544206",
                    "uid": "85c5c6b8-00e6-46cf-9ade-ebc56d5f9983"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/status"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "secrets",
                            "configmaps",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "update",
                            "create",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "patch",
                            "update",
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch",
                            "extensions"
                        ],
                        "resources": [
                            "jobs",
                            "cronjobs"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "watch",
                            "delete"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "mysql.oracle.com"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "*"
                        ]
                    },
                    {
                        "apiGroups": [
                            "zalando.org"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "patch",
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Service/ca-oracle",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-11-10T14:25:14Z",
                    "labels": {
                        "app": "ca-oracle",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-oracle",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911257",
                    "uid": "d70a1fed-e6ea-48e7-8e65-9f959a92902c"
                },
                "spec": {
                    "clusterIP": "10.40.5.166",
                    "clusterIPs": [
                        "10.40.5.166"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 4000,
                            "protocol": "TCP",
                            "targetPort": 4000
                        }
                    ],
                    "selector": {
                        "app": "ca-oracle"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "/v1/default/Service/catalog-mongo",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:27Z",
                    "labels": {
                        "app": "acmefit",
                        "service": "catalog-db"
                    },
                    "name": "catalog-mongo",
                    "namespace": "default",
                    "resourceVersion": "41559468",
                    "uid": "6e3bced2-9274-4960-8ea3-5b208336e7bb"
                },
                "spec": {
                    "clusterIP": "10.40.11.181",
                    "clusterIPs": [
                        "10.40.11.181"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "mongo-catalog",
                            "port": 27017,
                            "protocol": "TCP",
                            "targetPort": 27017
                        }
                    ],
                    "selector": {
                        "app": "acmefit",
                        "service": "catalog-db"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T14:18:24Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994",
                    "namespace": "armo-system",
                    "resourceVersion": "102538512",
                    "uid": "5bab3608-9fd6-4106-9004-95611c3de3c9"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "5bab3608-9fd6-4106-9004-95611c3de3c9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "dd5aeb56-0ae7-4d4e-9163-3a402db55994"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "5bab3608-9fd6-4106-9004-95611c3de3c9",
                                "job-name": "armo-kubescape-on-demand--dd5aeb56-0ae7-4d4e-9163-3a402db55994"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.146",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:glbc",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-07-07T05:45:04Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:controller:glbc",
                    "namespace": "kube-system",
                    "resourceVersion": "615",
                    "uid": "6be4a92a-70f5-4352-90db-210d0ca44876"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system:controller:glbc"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:controller:glbc"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-kubescape-recurring-4681143087714448482-nsa-27425639-svp5l",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "armo.framework": "NSA",
                        "armo.jobid": "41249b43-bc22-4734-a0cd-3a0ffcf966b0"
                    },
                    "creationTimestamp": "2022-02-22T13:59:00Z",
                    "generateName": "armo-kubescape-recurring-4681143087714448482-nsa-27425639-",
                    "labels": {
                        "controller-uid": "32104f87-4d84-4de6-9de0-510e6326df96",
                        "job-name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639"
                    },
                    "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639-svp5l",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-kubescape-recurring-4681143087714448482-nsa-27425639",
                            "uid": "32104f87-4d84-4de6-9de0-510e6326df96"
                        }
                    ],
                    "resourceVersion": "109384094",
                    "uid": "ed02bdf1-93a8-4d81-9285-fff6aa631ef7"
                },
                "spec": {
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "name": "kubescape",
                            "image": "quay.io/armosec/kubescape:v2.0.148",
                            "command": [
                                "kubescape"
                            ],
                            "args": [
                                "scan",
                                "framework",
                                "NSA",
                                "--submit",
                                "--logger",
                                "debug",
                                "--enable-host-scan",
                                "--environment=dev"
                            ],
                            "env": [
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                    "value": "XXXXXX"
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "500m",
                                    "memory": "500Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubescape-config-volume",
                                    "mountPath": "/root/.kubescape/config.json",
                                    "subPath": "config.json"
                                },
                                {
                                    "name": "kube-api-access-mpc8z",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-80xg",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "OnFailure",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "armo-kubescape-service-account",
                    "serviceAccountName": "armo-kubescape-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "name": "armo-kubescape-config"
                            },
                            "name": "kubescape-config-volume"
                        },
                        {
                            "name": "kube-api-access-mpc8z",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/armo-system/Pod/armo-scan-scheduler-27434880-zj2nh",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "creationTimestamp": "2022-03-01T00:00:00Z",
                    "generateName": "armo-scan-scheduler-27434880-",
                    "labels": {
                        "controller-uid": "1aeab7cc-5612-483c-9c95-63d6062774b8",
                        "job-name": "armo-scan-scheduler-27434880"
                    },
                    "name": "armo-scan-scheduler-27434880-zj2nh",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "batch/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Job",
                            "name": "armo-scan-scheduler-27434880",
                            "uid": "1aeab7cc-5612-483c-9c95-63d6062774b8"
                        }
                    ],
                    "resourceVersion": "113187433",
                    "uid": "eba51342-b747-4174-8754-b5f20cec5170"
                },
                "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                        {
                            "name": "armo-scan-scheduler",
                            "image": "curlimages/curl:latest",
                            "command": [
                                "/bin/sh",
                                "-c"
                            ],
                            "args": [
                                "echo Starting; ls -ltr /home/curl_user/; /bin/sh -x ./home/curl_user/trigger-script.sh; sleep 30; echo Done;"
                            ],
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "armo-scan-scheduler-volume",
                                    "readOnly": true,
                                    "mountPath": "/home/curl_user/trigger-script.sh",
                                    "subPath": "trigger-script.sh"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "default",
                    "serviceAccountName": "default",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "configMap": {
                                "defaultMode": 511,
                                "name": "armo-scan-scheduler-config"
                            },
                            "name": "armo-scan-scheduler-volume"
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-trigger",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "storageversionmigrator-rbac",
                        "components.gke.io/component-version": "0.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:45:01Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "storage-version-migration-trigger",
                    "resourceVersion": "556",
                    "uid": "8d8cec9e-20ac-4e49-b9f0-19211d51cb82"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "migration.k8s.io"
                        ],
                        "resources": [
                            "storagestates"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list",
                            "delete",
                            "create",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "migration.k8s.io"
                        ],
                        "resources": [
                            "storageversionmigrations"
                        ],
                        "verbs": [
                            "watch",
                            "get",
                            "list",
                            "delete",
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:volume-scheduler",
                    "resourceVersion": "108",
                    "uid": "e1316cf7-63dc-4f81-9bb9-36931de822b0"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:volume-scheduler"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-scheduler"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/ServiceAccount/mysql-sidecar-sa",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:54Z",
                    "name": "mysql-sidecar-sa",
                    "namespace": "default",
                    "resourceVersion": "109544205",
                    "uid": "6a1b75b0-72e5-4aed-8645-9ea879fee978"
                },
                "secrets": [
                    {
                        "name": "mysql-sidecar-sa-token-hlvrw"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ConfigMap/extension-apiserver-authentication",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "client-ca-file": "XXXXXX",
                    "requestheader-allowed-names": "XXXXXX",
                    "requestheader-client-ca-file": "XXXXXX",
                    "requestheader-extra-headers-prefix": "XXXXXX",
                    "requestheader-group-headers": "XXXXXX",
                    "requestheader-username-headers": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:33Z",
                    "name": "extension-apiserver-authentication",
                    "namespace": "kube-system",
                    "resourceVersion": "23",
                    "uid": "d90f3c82-5b8f-4cfc-b475-49e285b9a422"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRole/konnectivity-agent-cpha/rbac.authorization.k8s.io/v1//ClusterRoleBinding/konnectivity-agent-cpha",
            "object": {
                "kind": "ServiceAccount",
                "name": "konnectivity-agent-cpha",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "konnectivity-agent-cpha",
                            "resourceVersion": "49475072",
                            "uid": "2b702d2f-1a51-4dfb-8a69-39a6662497e4"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "konnectivity-agent-cpha"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "konnectivity-agent-cpha",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/layer": "addon"
                            },
                            "creationTimestamp": "2021-11-02T02:33:43Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                "kubernetes.io/cluster-service": "true"
                            },
                            "name": "konnectivity-agent-cpha",
                            "resourceVersion": "49475070",
                            "uid": "0171dd85-b459-4b95-a2a0-144521e3f356"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:node-proxier",
                    "resourceVersion": "69",
                    "uid": "592ecc9f-fbf4-41d4-9e39-287c43bf4b13"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "services"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "discovery.k8s.io"
                        ],
                        "resources": [
                            "endpointslices"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-operator/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2022-02-22T20:48:56Z",
                    "name": "default",
                    "namespace": "mysql-operator",
                    "resourceVersion": "109544229",
                    "uid": "300e370f-6859-46af-b7c1-1198c03b2aad"
                },
                "secrets": [
                    {
                        "name": "default-token-svrzl"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-599484b884",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "2",
                        "deployment.kubernetes.io/max-replicas": "3",
                        "deployment.kubernetes.io/revision": "4"
                    },
                    "creationTimestamp": "2021-11-16T07:46:28Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "599484b884"
                    },
                    "name": "kube-dns-599484b884",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns",
                            "uid": "f901e82b-2298-4f3f-b895-a7811979d002"
                        }
                    ],
                    "resourceVersion": "96318503",
                    "uid": "2c05f1f0-0348-47c0-9f2b-b859c4ecc6eb"
                },
                "spec": {
                    "replicas": 2,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "599484b884"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "kubedns",
                                "prometheus.io/port": "10054",
                                "prometheus.io/scrape": "true",
                                "scheduler.alpha.kubernetes.io/critical-pod": "",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns",
                                "pod-template-hash": "599484b884"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "k8s-app",
                                                            "operator": "In",
                                                            "values": [
                                                                "kube-dns"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 100
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "kubedns",
                                    "image": "gke.gcr.io/k8s-dns-kube-dns:1.21.0-gke.0",
                                    "args": [
                                        "--domain=cluster.local.",
                                        "--dns-port=10053",
                                        "--config-dir=/kube-dns-config",
                                        "--v=2"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-local",
                                            "containerPort": 10053,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp-local",
                                            "containerPort": 10053,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "metrics",
                                            "containerPort": 10055,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "PROMETHEUS_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "210Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "70Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/kube-dns-config"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/kubedns",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/readiness",
                                            "port": 8081,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 3,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "dnsmasq",
                                    "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny:1.21.0-gke.0",
                                    "args": [
                                        "-v=2",
                                        "-logtostderr",
                                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                        "-restartDnsmasq=true",
                                        "--",
                                        "-k",
                                        "--cache-size=1000",
                                        "--no-negcache",
                                        "--dns-forward-max=1500",
                                        "--log-facility=-",
                                        "--server=/cluster.local/127.0.0.1#10053",
                                        "--server=/in-addr.arpa/127.0.0.1#10053",
                                        "--server=/ip6.arpa/127.0.0.1#10053"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns",
                                            "containerPort": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp",
                                            "containerPort": 53,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "150m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/dnsmasq",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "NET_BIND_SERVICE",
                                                "SETGID"
                                            ],
                                            "drop": [
                                                "all"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "sidecar",
                                    "image": "gke.gcr.io/k8s-dns-sidecar:1.21.0-gke.0",
                                    "args": [
                                        "--v=2",
                                        "--logtostderr",
                                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 10054,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/metrics",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns",
                            "serviceAccountName": "kube-dns",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-dns",
                                        "optional": true
                                    },
                                    "name": "kube-dns-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:horizontal-pod-autoscaler",
                    "resourceVersion": "82",
                    "uid": "91ddf68c-0907-48bf-be54-e0ae52e7eeee"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*/scale"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "http:heapster:",
                            "https:heapster:"
                        ],
                        "resources": [
                            "services/proxy"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "metrics.k8s.io"
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "custom.metrics.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/konnectivity-agent-cpha",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-11-02T02:33:43Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "konnectivity-agent-cpha",
                    "namespace": "kube-system",
                    "resourceVersion": "49475073",
                    "uid": "b1bc95be-244b-4efc-92c0-3c61fd79e8ae"
                },
                "secrets": [
                    {
                        "name": "konnectivity-agent-cpha-token-x2thf"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/DaemonSet/metadata-proxy-v0.1",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "metadata": {
                    "annotations": {
                        "deprecated.daemonset.template.generation": "3"
                    },
                    "creationTimestamp": "2021-07-07T05:44:55Z",
                    "generation": 3,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "metadata-proxy",
                        "kubernetes.io/cluster-service": "true",
                        "version": "v0.1"
                    },
                    "name": "metadata-proxy-v0.1",
                    "namespace": "kube-system",
                    "resourceVersion": "10648184",
                    "uid": "6aa8e08d-4e9a-4d67-95e9-aafb73f80b72"
                },
                "spec": {
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "metadata-proxy",
                            "version": "v0.1"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "metadata-proxy",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v0.1"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "metadata-proxy",
                                    "image": "k8s.gcr.io/metadata-proxy:v0.1.12",
                                    "args": [
                                        "--addr=0.0.0.0:988"
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "30m",
                                            "memory": "25Mi"
                                        },
                                        "requests": {
                                            "cpu": "30m",
                                            "memory": "25Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "privileged": true
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "hostNetwork": true,
                            "nodeSelector": {
                                "cloud.google.com/metadata-proxy-ready": "true",
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "metadata-proxy",
                            "serviceAccountName": "metadata-proxy",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    },
                    "updateStrategy": {
                        "rollingUpdate": {
                            "maxSurge": 0,
                            "maxUnavailable": 1
                        },
                        "type": "RollingUpdate"
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-c69f9fcd8",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "10",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-03T11:53:53Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "pod-template-hash": "c69f9fcd8",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-c69f9fcd8",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "100286562",
                    "uid": "6162985d-9c55-4fd6-a8fc-9472aa199026"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "c69f9fcd8",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "pod-template-hash": "c69f9fcd8",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:111",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/Pod/ca-webhook-7bc799955b-cxs2l",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "certificate": "9cd8f7096b002d194e6cd0e12b4b14c7  ca.crt"
                    },
                    "creationTimestamp": "2022-01-27T12:22:15Z",
                    "generateName": "ca-webhook-7bc799955b-",
                    "labels": {
                        "app": "ca-webhook",
                        "pod-template-hash": "7bc799955b",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-webhook-7bc799955b-cxs2l",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "ca-webhook-7bc799955b",
                            "uid": "ac15789d-8f41-4050-95e9-c6884bc6152f"
                        }
                    ],
                    "resourceVersion": "96318075",
                    "uid": "c8b6fb7e-6496-4c64-9d81-231c27fab9fc"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "ca-webhook",
                            "image": "quay.io/armosec/k8s-ca-webhook-ubi:latest",
                            "args": [
                                "-tlsCertFile=/etc/webhook/certs/tls.crt",
                                "-tlsKeyFile=/etc/webhook/certs/tls.key",
                                "-alsologtostderr",
                                "-v=4",
                                "2\u003e\u00261"
                            ],
                            "ports": [
                                {
                                    "name": "mutating-port",
                                    "containerPort": 443,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "readiness-port",
                                    "containerPort": 8000,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "CA_CLUSTER_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "clusterName"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_CUSTOMER_GUID",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "customerGUID"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_WEBHOOK_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_WEBHOOK_PORT",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_DASHBOARD_BACKEND",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "dashboard"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_LOGIN_SECRET_NAME",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_ORACLE_SERVER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_NOTIFICATION_SERVER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_OCIMAGE_URL",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_USE_DOCKER",
                                    "value": "XXXXXX"
                                },
                                {
                                    "name": "CA_K8S_REPORT_URL",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverWS"
                                        }
                                    }
                                },
                                {
                                    "name": "CA_EVENT_RECEIVER_HTTP",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "armo-be-config",
                                            "key": "eventReceiverREST"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "1500m",
                                    "memory": "600Mi"
                                },
                                "requests": {
                                    "cpu": "300m",
                                    "memory": "100Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "docker-socket-volume",
                                    "mountPath": "/var/run/docker.sock"
                                },
                                {
                                    "name": "zip-download",
                                    "mountPath": "/cazips"
                                },
                                {
                                    "name": "ca-cluster-certificate",
                                    "readOnly": true,
                                    "mountPath": "/etc/webhook/certs"
                                },
                                {
                                    "name": "ca-login",
                                    "readOnly": true,
                                    "mountPath": "/etc/credentials"
                                },
                                {
                                    "name": "armo-be-config",
                                    "readOnly": true,
                                    "mountPath": "/etc/config"
                                },
                                {
                                    "name": "kube-api-access-64xvv",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/v1/readiness",
                                    "port": "readiness-port",
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 10,
                                "timeoutSeconds": 1,
                                "periodSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 0,
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "ca-controller-service-account",
                    "serviceAccountName": "ca-controller-service-account",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/run/docker.sock",
                                "type": ""
                            },
                            "name": "docker-socket-volume"
                        },
                        {
                            "emptyDir": {},
                            "name": "zip-download"
                        },
                        {
                            "name": "ca-cluster-certificate",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "ca-cluster-certificate"
                            }
                        },
                        {
                            "name": "ca-login",
                            "secret": {
                                "defaultMode": 420,
                                "secretName": "ca-login"
                            }
                        },
                        {
                            "configMap": {
                                "defaultMode": 420,
                                "items": [
                                    {
                                        "key": "clusterData",
                                        "path": "clusterData.json"
                                    }
                                ],
                                "name": "armo-be-config"
                            },
                            "name": "armo-be-config"
                        },
                        {
                            "name": "kube-api-access-64xvv",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "endpointslice-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpointslice-controller",
                            "resourceVersion": "117",
                            "uid": "186c3508-0c6d-4384-af23-d8e70ab49748"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpointslice-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpointslice-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpointslice-controller",
                            "resourceVersion": "78",
                            "uid": "adf82ef3-b9b2-401d-bbae-a3e46c1cbdbb"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "pods",
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "ttl-after-finished-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-11-16T07:45:06Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ttl-after-finished-controller",
                            "resourceVersion": "55353005",
                            "uid": "15667f5a-5ba9-4d3b-a154-2af8516ebae6"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ttl-after-finished-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ttl-after-finished-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-11-16T07:45:05Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:ttl-after-finished-controller",
                            "resourceVersion": "55353003",
                            "uid": "403f79e3-dcec-458f-a8ae-03fe9f4b7457"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/node-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:37Z",
                    "name": "node-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "173",
                    "uid": "9178c9f9-a859-40df-a223-5af9926ed6a5"
                },
                "secrets": [
                    {
                        "name": "node-controller-token-8skkc"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/l7-default-backend-69fb9fd9f9",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "5",
                        "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                    },
                    "creationTimestamp": "2022-02-17T08:39:16Z",
                    "generation": 1,
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "69fb9fd9f9"
                    },
                    "name": "l7-default-backend-69fb9fd9f9",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "l7-default-backend",
                            "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                        }
                    ],
                    "resourceVersion": "106360645",
                    "uid": "329ec77a-6681-4ce0-9a9f-109bd7803afa"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc",
                            "pod-template-hash": "69fb9fd9f9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "l7-lb-controller-combined",
                                "components.gke.io/component-version": "1.14.7-gke.0",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc",
                                "pod-template-hash": "69fb9fd9f9"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "gke.gcr.io/ingress-gce-404-server-with-metrics:v1.13.4",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "runAsUser": 1000,
                                        "runAsGroup": 1000,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system::leader-locking-kube-controller-manager",
                    "namespace": "kube-system",
                    "resourceVersion": "147",
                    "uid": "152f1ec2-4ac2-4d35-9462-0c9b164c3d07"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "system::leader-locking-kube-controller-manager"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:kube-controller-manager"
                    },
                    {
                        "kind": "ServiceAccount",
                        "name": "kube-controller-manager",
                        "namespace": "kube-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ConfigMap/ca-posture-score-config",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "frameworkdict.json": "XXXXXX",
                    "resourcesdict.json": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2021-11-10T14:25:09Z",
                    "labels": {
                        "app": "armo-be-config"
                    },
                    "name": "ca-posture-score-config",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52911182",
                    "uid": "5d5fa66f-5b5b-4cd5-a138-13b21b7ea950"
                }
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
            "object": {
                "kind": "ServiceAccount",
                "name": "root-ca-cert-publisher",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:root-ca-cert-publisher",
                            "resourceVersion": "138",
                            "uid": "83e12195-6030-4a74-94a7-dda2f39220e9"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:root-ca-cert-publisher"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "root-ca-cert-publisher",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:root-ca-cert-publisher",
                            "resourceVersion": "99",
                            "uid": "19734c37-e12b-407a-976d-8a73dd7a2352"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "endpointslicemirroring-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpointslicemirroring-controller",
                            "resourceVersion": "118",
                            "uid": "2b65e4a3-f3fc-4641-b03f-60fac83b5567"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpointslicemirroring-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpointslicemirroring-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:endpointslicemirroring-controller",
                            "resourceVersion": "79",
                            "uid": "55a458d0-a863-4ada-9e6e-014dc0f16d34"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints/finalizers"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:kube-dns",
                    "resourceVersion": "60",
                    "uid": "e245c69d-15d7-4208-86ac-12e1eb6793fd"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints",
                            "services"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:public-info-viewer",
                    "resourceVersion": "103",
                    "uid": "9ccfba0d-1355-4267-8cf4-39b1acbe89b9"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:public-info-viewer"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:authenticated"
                    },
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Group",
                        "name": "system:unauthenticated"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/cyberarmor-system/ServiceAccount/default",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-11-10T14:24:45Z",
                    "name": "default",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "52910927",
                    "uid": "2f8492c3-e054-4ea5-9f55-2cddf2c20a6e"
                },
                "secrets": [
                    {
                        "name": "default-token-c7sxh"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/Deployment/ca-audit",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-10T14:25:06Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-audit",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-audit",
                    "namespace": "cyberarmor-system",
                    "resourceVersion": "96318431",
                    "uid": "3861f968-6c03-428d-bf48-77683707bfb9"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-audit"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-audit",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-audit",
                                    "image": "quay.io/armosec/k8s-ca-auditlog-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "ca-audit-port",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "clusterName"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "customerGUID"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_K8S_REPORT_URL",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverWS"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "armo-be-config",
                                                    "key": "eventReceiverREST"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_CONFIG_FILES",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SERVER_TYPE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "configMapKeyRef": {
                                                    "name": "ca-audit",
                                                    "key": "cluster_kind"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "ca-audit",
                                            "readOnly": true,
                                            "mountPath": "/config"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-audit",
                            "serviceAccountName": "ca-audit",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "config",
                                                "path": "config.json"
                                            }
                                        ],
                                        "name": "ca-audit"
                                    },
                                    "name": "ca-audit"
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T13:53:28Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428",
                    "namespace": "armo-system",
                    "resourceVersion": "102528976",
                    "uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "not-exists",
                                "armo.jobid": "3865d309-3001-40e2-8335-428ec92becfe"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "7f34b702-bc9d-4399-b452-9a218a0cf1b9",
                                "job-name": "armo-kubescape-on-demand-not-exists-3865d309-3001-40e2-8335-428"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.146",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "not-exists",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-tl2v6",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-30T11:07:51Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-tl2v6",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "96318305",
                    "uid": "a8cc9e63-6c11-437d-a913-d4e5f6f905b4"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-xczdh",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-rs7j",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-xczdh",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system::leader-locking-kube-controller-manager",
                    "namespace": "kube-system",
                    "resourceVersion": "143",
                    "uid": "807aaba8-2ece-4768-b2c0-561886618061"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "kube-controller-manager"
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:auth-delegator",
                    "resourceVersion": "57",
                    "uid": "efcb51cd-c62c-44ed-8575-35c241b7595a"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authorization.k8s.io"
                        ],
                        "resources": [
                            "subjectaccessreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/armo-system/Service/armo-web-socket",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:50Z",
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-web-socket",
                    "namespace": "armo-system",
                    "resourceVersion": "67723561",
                    "uid": "deab5685-0f33-4569-b258-b673365aeec5"
                },
                "spec": {
                    "clusterIP": "10.40.3.105",
                    "clusterIPs": [
                        "10.40.3.105"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "port": 4002,
                            "protocol": "TCP",
                            "targetPort": 4002
                        }
                    ],
                    "selector": {
                        "app": "armo-web-socket"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-16T13:33:29Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779",
                    "namespace": "armo-system",
                    "resourceVersion": "105913188",
                    "uid": "bc7b4fb7-6d07-4f80-ad61-3f3c2082ff45"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "bc7b4fb7-6d07-4f80-ad61-3f3c2082ff45"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "test",
                                "armo.jobid": "350cd729-7f6d-4675-bf11-beaeca779122"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "bc7b4fb7-6d07-4f80-ad61-3f3c2082ff45",
                                "job-name": "armo-kubescape-on-demand-test-350cd729-7f6d-4675-bf11-beaeca779"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.147",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "framework",
                                        "test",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/armo-system/Role/armo-scanner-service-account-roles",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-01-20T13:36:49Z",
                    "labels": {
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-scanner-service-account-roles",
                    "namespace": "armo-system",
                    "resourceVersion": "91066516",
                    "uid": "64909355-7d0d-4fda-866d-a142427b9074"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "describe"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "jobs",
                            "cronjobs"
                        ],
                        "verbs": [
                            "*"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system::leader-locking-kube-scheduler",
                    "namespace": "kube-system",
                    "resourceVersion": "144",
                    "uid": "4c6a0fb3-da0f-42ce-b7fe-ecdbf9a8354f"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            "kube-scheduler"
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "node-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:node-controller",
                            "resourceVersion": "124",
                            "uid": "dc9be93a-d0e6-4cdb-8e71-24dbf753315e"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:node-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "node-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:node-controller",
                            "resourceVersion": "85",
                            "uid": "f4f8f059-7f69-4dac-9eef-24105105dda3"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ],
                                "verbs": [
                                    "patch",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "delete",
                                    "list"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//Group/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRole/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Group",
                "name": "system:monitoring",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-29T02:28:25Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:monitoring",
                            "resourceVersion": "10647920",
                            "uid": "d09f6ec3-e184-42a8-9c37-8763da0ab329"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:monitoring"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Group",
                                "name": "system:monitoring"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-29T02:28:25Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:monitoring",
                            "resourceVersion": "10647918",
                            "uid": "500f10f8-9481-49ea-bf62-62fa77544860"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/healthz/*",
                                    "/livez",
                                    "/livez/*",
                                    "/metrics",
                                    "/readyz",
                                    "/readyz/*"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/kube-system/ServiceAccount/service-account-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-account-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
            "object": {
                "kind": "ServiceAccount",
                "name": "service-account-controller",
                "namespace": "kube-system",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:service-account-controller",
                            "resourceVersion": "131",
                            "uid": "ecd64c7c-f098-451c-a46e-71398ce4c9ca"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:service-account-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "service-account-controller",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:34Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system:controller:service-account-controller",
                            "resourceVersion": "92",
                            "uid": "d2be011b-60e5-4efe-8e57-646ddb0cc47a"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:aggregate-to-edit",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults",
                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                    },
                    "name": "system:aggregate-to-edit",
                    "resourceVersion": "50",
                    "uid": "b0ddf22a-f602-4006-92b4-2d5322ff0313"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy",
                            "secrets",
                            "services/proxy"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "serviceaccounts"
                        ],
                        "verbs": [
                            "impersonate"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods",
                            "pods/attach",
                            "pods/exec",
                            "pods/portforward",
                            "pods/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "persistentvolumeclaims",
                            "replicationcontrollers",
                            "replicationcontrollers/scale",
                            "secrets",
                            "serviceaccounts",
                            "services",
                            "services/proxy"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "replicasets",
                            "replicasets/scale",
                            "statefulsets",
                            "statefulsets/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "autoscaling"
                        ],
                        "resources": [
                            "horizontalpodautoscalers"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "deployments/rollback",
                            "deployments/scale",
                            "ingresses",
                            "networkpolicies",
                            "replicasets",
                            "replicasets/scale",
                            "replicationcontrollers/scale"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "policy"
                        ],
                        "resources": [
                            "poddisruptionbudgets"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.k8s.io"
                        ],
                        "resources": [
                            "ingresses",
                            "networkpolicies"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "deletecollection",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:gke-master-healthcheck",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "gke-master-healthcheck-rbac",
                        "components.gke.io/component-version": "1.0.2"
                    },
                    "creationTimestamp": "2021-07-29T02:29:47Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:gke-master-healthcheck",
                    "resourceVersion": "10648233",
                    "uid": "e1821d87-c591-4b9e-8ed6-1a6e90b3a1ee"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "componentstatuses"
                        ],
                        "verbs": [
                            "get",
                            "watch",
                            "list"
                        ]
                    },
                    {
                        "nonResourceURLs": [
                            "/readyz"
                        ],
                        "verbs": [
                            "get"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/metrics-server-v0.4.4-64df5f9879",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "5",
                        "deployment.kubernetes.io/revision-history": "3"
                    },
                    "creationTimestamp": "2021-11-16T12:01:58Z",
                    "generation": 3,
                    "labels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "64df5f9879",
                        "version": "v0.4.4"
                    },
                    "name": "metrics-server-v0.4.4-64df5f9879",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "metrics-server-v0.4.4",
                            "uid": "a709e59f-f8cf-45d2-8346-1ac9ec2d6696"
                        }
                    ],
                    "resourceVersion": "100755321",
                    "uid": "8787464f-6958-4633-a54c-0004783d7029"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "64df5f9879",
                            "version": "v0.4.4"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "metrics-server",
                                "pod-template-hash": "64df5f9879",
                                "version": "v0.4.4"
                            },
                            "name": "metrics-server"
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "metrics-server",
                                    "image": "k8s.gcr.io/metrics-server/metrics-server:v0.4.4",
                                    "command": [
                                        "/metrics-server",
                                        "--metric-resolution=30s",
                                        "--kubelet-port=10255",
                                        "--deprecated-kubelet-completely-insecure=true",
                                        "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                        "--cert-dir=/tmp",
                                        "--secure-port=443"
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "44m",
                                            "memory": "63Mi"
                                        },
                                        "requests": {
                                            "cpu": "44m",
                                            "memory": "63Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "tmp-dir",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "metrics-server-nanny",
                                    "image": "gke.gcr.io/addon-resizer:1.8.13-gke.0",
                                    "command": [
                                        "/pod_nanny",
                                        "--config-dir=/etc/config",
                                        "--cpu=40m",
                                        "--extra-cpu=0.5m",
                                        "--memory=35Mi",
                                        "--extra-memory=4Mi",
                                        "--threshold=5",
                                        "--deployment=metrics-server-v0.4.4",
                                        "--container=metrics-server",
                                        "--poll-period=30000",
                                        "--estimator=exponential",
                                        "--scale-down-delay=24h",
                                        "--minClusterSize=5",
                                        "--use-metrics=true"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "metrics-server-config-volume",
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                }
                            },
                            "serviceAccount": "metrics-server",
                            "serviceAccountName": "metrics-server",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "metrics-server-config"
                                    },
                                    "name": "metrics-server-config-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "tmp-dir"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "batch/v1/armo-system/Job/armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83",
            "object": {
                "apiVersion": "batch/v1",
                "kind": "Job",
                "metadata": {
                    "creationTimestamp": "2022-02-10T13:56:23Z",
                    "labels": {
                        "app": "armo-kubescape-on-demand",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83",
                    "namespace": "armo-system",
                    "resourceVersion": "102529570",
                    "uid": "1d7c5507-2e16-490e-beaf-0ca4fa21dcb5"
                },
                "spec": {
                    "backoffLimit": 1,
                    "completions": 1,
                    "parallelism": 1,
                    "selector": {
                        "matchLabels": {
                            "controller-uid": "1d7c5507-2e16-490e-beaf-0ca4fa21dcb5"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "armo.framework": "",
                                "armo.jobid": "8fa99a92-3c44-4e5e-930c-8a4b23bb7d83"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "controller-uid": "1d7c5507-2e16-490e-beaf-0ca4fa21dcb5",
                                "job-name": "armo-kubescape-on-demand--8fa99a92-3c44-4e5e-930c-8a4b23bb7d83"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "kubescape",
                                    "image": "quay.io/armosec/kubescape:v2.0.146",
                                    "command": [
                                        "kubescape"
                                    ],
                                    "args": [
                                        "scan",
                                        "--submit",
                                        "--logger",
                                        "debug",
                                        "--enable-host-scan",
                                        "--environment=dev"
                                    ],
                                    "env": [
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "500m",
                                            "memory": "500Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kubescape-config-volume",
                                            "mountPath": "/root/.kubescape/config.json",
                                            "subPath": "config.json"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Never",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-kubescape-service-account",
                            "serviceAccountName": "armo-kubescape-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "armo-kubescape-config"
                                    },
                                    "name": "kubescape-config-volume"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/konnectivity-agent-7c886949f5-cbdsd",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                        "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                        "components.gke.io/component-version": "1.3.2"
                    },
                    "creationTimestamp": "2022-01-27T12:22:14Z",
                    "generateName": "konnectivity-agent-7c886949f5-",
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "7c886949f5"
                    },
                    "name": "konnectivity-agent-7c886949f5-cbdsd",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "ReplicaSet",
                            "name": "konnectivity-agent-7c886949f5",
                            "uid": "a1288b5a-4f06-42b9-8ac3-e472e1b5e219"
                        }
                    ],
                    "resourceVersion": "96317778",
                    "uid": "fd40a14b-5ce2-4032-aafb-2b56d2777b4c"
                },
                "spec": {
                    "containers": [
                        {
                            "name": "konnectivity-agent",
                            "image": "gke.gcr.io/proxy-agent:v0.0.24-gke.0",
                            "command": [
                                "/proxy-agent"
                            ],
                            "args": [
                                "--logtostderr=true",
                                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                "--proxy-server-host=35.202.27.228",
                                "--proxy-server-port=8132",
                                "--health-server-port=8093",
                                "--admin-server-port=8094",
                                "--sync-interval=5s",
                                "--probe-interval=5s",
                                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                "--v=3"
                            ],
                            "ports": [
                                {
                                    "name": "metrics",
                                    "containerPort": 8093,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POD_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "30Mi"
                                },
                                "requests": {
                                    "cpu": "10m",
                                    "memory": "30Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "mountPath": "/var/run/secrets/tokens"
                                },
                                {
                                    "name": "kube-api-access-nsmtg",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/healthz",
                                    "port": 8093,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 15,
                                "timeoutSeconds": 15,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "capabilities": {
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "allowPrivilegeEscalation": false
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-xcp0",
                    "nodeSelector": {
                        "beta.kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000000000,
                    "priorityClassName": "system-cluster-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {
                        "fsGroup": 1000,
                        "runAsGroup": 1000,
                        "runAsUser": 1000
                    },
                    "serviceAccount": "konnectivity-agent",
                    "serviceAccountName": "konnectivity-agent",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "sandbox.gke.io/runtime",
                            "operator": "Equal",
                            "value": "gvisor"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists",
                            "tolerationSeconds": 300
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "topology.kubernetes.io/zone",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        },
                        {
                            "labelSelector": {
                                "matchLabels": {
                                    "k8s-app": "konnectivity-agent"
                                }
                            },
                            "maxSkew": 1,
                            "topologyKey": "kubernetes.io/hostname",
                            "whenUnsatisfiable": "ScheduleAnyway"
                        }
                    ],
                    "volumes": [
                        {
                            "name": "konnectivity-agent-token",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "audience": "system:konnectivity-server",
                                            "expirationSeconds": 3600,
                                            "path": "konnectivity-agent-token"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kube-api-access-nsmtg",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "/v1/mysql-demos/ConfigMap/mysql-1645559415",
            "object": {
                "apiVersion": "v1",
                "data": {
                    "my.cnf": "XXXXXX"
                },
                "kind": "ConfigMap",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "mysql-1645559415",
                        "meta.helm.sh/release-namespace": "mysql-demos"
                    },
                    "creationTimestamp": "2022-02-22T19:50:23Z",
                    "labels": {
                        "app.kubernetes.io/component": "primary",
                        "app.kubernetes.io/instance": "mysql-1645559415",
                        "app.kubernetes.io/managed-by": "Helm",
                        "app.kubernetes.io/name": "mysql",
                        "helm.sh/chart": "mysql-8.8.25"
                    },
                    "name": "mysql-1645559415",
                    "namespace": "mysql-demos",
                    "resourceVersion": "109520754",
                    "uid": "3ff94b97-be3f-4fa6-b069-078417002313"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/kubelet/rbac.authorization.k8s.io/v1//ClusterRole/gce:beta:kubelet-certificate-bootstrap/rbac.authorization.k8s.io/v1//ClusterRoleBinding/gce:beta:kubelet-certificate-bootstrap",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "kubelet",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:beta:kubelet-certificate-bootstrap",
                            "resourceVersion": "619",
                            "uid": "0a9f321d-4bd5-4067-8f2a-03910a214352"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "gce:beta:kubelet-certificate-bootstrap"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "kubelet"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {},
                            "creationTimestamp": "2021-07-07T05:45:04Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "gce:beta:kubelet-certificate-bootstrap",
                            "resourceVersion": "622",
                            "uid": "d8b389fd-e2a6-4605-896d-37ce98becba6"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/nodeclient"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:kube-scheduler",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-scheduler",
                            "namespace": "kube-system",
                            "resourceVersion": "148",
                            "uid": "c781c0ba-74d9-4323-b344-85a57d4a2afa"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "system::leader-locking-kube-scheduler"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:kube-scheduler"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-scheduler",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "creationTimestamp": "2021-07-07T05:44:35Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "name": "system::leader-locking-kube-scheduler",
                            "namespace": "kube-system",
                            "resourceVersion": "144",
                            "uid": "4c6a0fb3-da0f-42ce-b7fe-ecdbf9a8354f"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "kube-scheduler"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:resource-tracker",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-version": "resource-tracker-rbac-1.0.3"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "system:resource-tracker",
                    "resourceVersion": "496",
                    "uid": "c22f87d9-8b97-4a34-a543-cecb8fcc4fa6"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "nodes",
                            "persistentvolumeclaims",
                            "persistentvolumes",
                            "pods",
                            "services",
                            "configmaps"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps"
                        ],
                        "verbs": [
                            "create",
                            "delete",
                            "update",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "storage.k8s.io"
                        ],
                        "resources": [
                            "storageclasses"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "endpoints"
                        ],
                        "verbs": [
                            "create",
                            "get",
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "metrics.k8s.io"
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "list"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/armo-scanner-service-account-role-binding",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2021-12-09T15:04:49Z",
                    "labels": {
                        "app.kubernetes.io/managed-by": "Helm"
                    },
                    "name": "armo-scanner-service-account-role-binding",
                    "resourceVersion": "67723555",
                    "uid": "24f6fa59-f0f4-4d61-87a9-f02e5c10e00e"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "armo-scanner-service-account-roles"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "armo-scanner-service-account",
                        "namespace": "armo-system"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/mysql-operator/ServiceAccount/mysql-operator-sa",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "annotations": {},
                    "creationTimestamp": "2022-02-22T20:48:57Z",
                    "name": "mysql-operator-sa",
                    "namespace": "mysql-operator",
                    "resourceVersion": "109544234",
                    "uid": "30773c2f-97a5-49fe-8b7b-0a4be4ca2eac"
                },
                "secrets": [
                    {
                        "name": "mysql-operator-sa-token-wlv65"
                    }
                ]
            }
        },
        {
            "resourceID": "admissionregistration.k8s.io/v1//MutatingWebhookConfiguration/neg-annotation.config.common-webhooks.networking.gke.io",
            "object": {
                "apiVersion": "admissionregistration.k8s.io/v1",
                "kind": "MutatingWebhookConfiguration",
                "metadata": {
                    "annotations": {
                        "common-webhooks.networking.gke.io/webhook-name": "neg-annotation"
                    },
                    "creationTimestamp": "2021-07-07T05:45:12Z",
                    "generation": 1,
                    "labels": {
                        "networking.gke.io/common-webhooks": "true"
                    },
                    "name": "neg-annotation.config.common-webhooks.networking.gke.io",
                    "resourceVersion": "55353204",
                    "uid": "4d1e1d21-f309-4f83-82ed-36783484335c"
                },
                "webhooks": [
                    {
                        "admissionReviewVersions": [
                            "v1beta1"
                        ],
                        "clientConfig": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLakNDQWhLZ0F3SUJBZ0lRQjRJcmN0NFVaS1huTHcvME9aWWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSbFpEZzJPVE5pWWkwME5UWmlMVFJsT1dFdE9UTTNaQzB3WlRsa09ESmhObVkwTUdRdwpIaGNOTWpFd056QTNNRFEwTWpFd1doY05Nall3TnpBMk1EVTBNakV3V2pBdk1TMHdLd1lEVlFRREV5UmxaRGcyCk9UTmlZaTAwTlRaaUxUUmxPV0V0T1RNM1pDMHdaVGxrT0RKaE5tWTBNR1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjNjMycnh0ekdWUDRJNzNJQXQzOVVBRkxKSGY2ckR2cXdKRDYrQlB6MwpKcHc4ZUt5clVISGdSTWJKNExUVE5XV000N2tDb1FDOVJUbzFJVGtVcS96a1dKY0pEL0swZWRRR004SitLZGYwCmgrUzJNTzEyNDRxTmlrNDlKcy92UldOWmNMZEJoaDlpWHpIenl6WDVzQnc4VEVpbkZtY1Y5dFdmTXJ5ZGlzSXoKSlRPdkhRVVhUNjJsR0hRbkZKbXIzYWhvS3lKY3FGbytsTER3bzdQbU5JaUhzMnZ1djRDTEJXV1FXOG1wcW9kYQpZZ2lncEJvYVQ5OHBTMmZZTXFGbUJGMkJxL0VyTWJPYnptYkoxdWlJcnhMa2NTS2NIbVI4ZWU4MXk3L1Qyb2R6CjI4UmYwdGJ6L21lckpZRE1iU1hkYkVzYUpsL3c5M3RCQ3puQ0FrOE9ZWGFoQWdNQkFBR2pRakJBTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSmR4eG5HN1JUYWpoTgpHYXV4VHU0WFpDREMyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZEs4ZWg5dWo3TEJVQXhEbTdiNDl4azJuCkVqS2d2NXY5ZVUxUk5LOStHbFJvTjRiWmJLVHJqbjg4SE9sV0l5MjFGdldlVHgvdXpCenFub1V2Y3lxSk0velgKS2w0cGJOaENUd3dCQnR0WGtTcmwvcU9pSEVHcTJRbThjQ1BLL1QrNm5tU3RqZW1ZY09meVJtOVVJajBqS2RCego4WEZzQytIYXYzYkMrSjV1MlE1NGV3a3dhMUMzTk9lL2NFaDVpb3JjcXd0aEltOUQrS0wwYjRwVW1XMUhHdUUvCnhqclNDalFFK0U4QktodTNtUzZZUEk4S25CaDhrOE1PeXpGN0pMY3VaMHltcElFTUhaaEJ4aFlHN1Z5VjdZMG8KMkc3TEQ1SFZnazJ3QzdzMVNKQmdvdmZOb2YyOXJBYXlweWd2K1R3YitNTzV6YklhNHkxaWc4OG1tcnhtMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "url": "https://localhost:5443/webhook/neg-annotation"
                        },
                        "failurePolicy": "Ignore",
                        "matchPolicy": "Exact",
                        "name": "neg-annotation.common-webhooks.networking.gke.io",
                        "namespaceSelector": {},
                        "objectSelector": {},
                        "reinvocationPolicy": "Never",
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "apiVersions": [
                                    "v1"
                                ],
                                "operations": [
                                    "CREATE"
                                ],
                                "resources": [
                                    "services"
                                ],
                                "scope": "*"
                            }
                        ],
                        "sideEffects": "None",
                        "timeoutSeconds": 30
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-5cf89587df",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "6",
                        "deployment.kubernetes.io/revision-history": "4"
                    },
                    "creationTimestamp": "2021-11-14T15:26:30Z",
                    "generation": 9,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "5cf89587df",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-5cf89587df",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "55554548",
                    "uid": "39ec83e5-06d0-4418-93a0-8f039cce4443"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "5cf89587df"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "5cf89587df",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:test",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/cyberarmor-system/ReplicaSet/ca-websocket-77fbb555b5",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "12"
                    },
                    "creationTimestamp": "2021-12-06T14:40:52Z",
                    "generation": 1,
                    "labels": {
                        "app": "ca-websocket",
                        "pod-template-hash": "77fbb555b5",
                        "tier": "cyberarmor-system-control-plane"
                    },
                    "name": "ca-websocket-77fbb555b5",
                    "namespace": "cyberarmor-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "ca-websocket",
                            "uid": "320acd7a-448d-4741-9787-f59a57450601"
                        }
                    ],
                    "resourceVersion": "111262544",
                    "uid": "0c0f3a57-05ba-40c4-9234-889beb1868b7"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app": "ca-websocket",
                            "pod-template-hash": "77fbb555b5"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "ca-websocket",
                                "pod-template-hash": "77fbb555b5",
                                "tier": "cyberarmor-system-control-plane"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "ca-websocket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:latest",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "CA_USE_DOCKER",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_DEBUG_SIGNER",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "docker-socket-volume",
                                            "mountPath": "/var/run/docker.sock"
                                        },
                                        {
                                            "name": "ca-login",
                                            "readOnly": true,
                                            "mountPath": "/etc/credentials"
                                        },
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "ca-controller-service-account",
                            "serviceAccountName": "ca-controller-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "hostPath": {
                                        "path": "/var/run/docker.sock",
                                        "type": ""
                                    },
                                    "name": "docker-socket-volume"
                                },
                                {
                                    "name": "ca-login",
                                    "secret": {
                                        "defaultMode": 420,
                                        "secretName": "ca-login"
                                    }
                                },
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/kube-dns-autoscaler-58cbd4f75c",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-07-07T05:44:54Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "kube-dns-autoscaler",
                        "pod-template-hash": "58cbd4f75c"
                    },
                    "name": "kube-dns-autoscaler-58cbd4f75c",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "kube-dns-autoscaler",
                            "uid": "e5a8c1ec-de11-4834-a4ad-e89c5b48b71f"
                        }
                    ],
                    "resourceVersion": "52904317",
                    "uid": "1e22d045-6f2c-45f3-801c-d0f4012356a8"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns-autoscaler",
                            "pod-template-hash": "58cbd4f75c"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns-autoscaler",
                                "pod-template-hash": "58cbd4f75c"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "autoscaler",
                                    "image": "gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0",
                                    "command": [
                                        "/cluster-proportional-autoscaler",
                                        "--namespace=kube-system",
                                        "--configmap=kube-dns-autoscaler",
                                        "--target=Deployment/kube-dns",
                                        "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}",
                                        "--logtostderr=true",
                                        "--v=2"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "20m",
                                            "memory": "10Mi"
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns-autoscaler",
                            "serviceAccountName": "kube-dns-autoscaler",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:34Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:resourcequota-controller",
                    "resourceVersion": "90",
                    "uid": "e0fa5c55-2fcd-4ac9-bd8a-50c54915e937"
                },
                "rules": [
                    {
                        "apiGroups": [
                            "*"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "resourcequotas/status"
                        ],
                        "verbs": [
                            "update"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/kube-dns",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "4"
                    },
                    "creationTimestamp": "2021-07-07T05:44:53Z",
                    "generation": 5,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "kube-dns",
                        "kubernetes.io/cluster-service": "true"
                    },
                    "name": "kube-dns",
                    "namespace": "kube-system",
                    "resourceVersion": "96318505",
                    "uid": "f901e82b-2298-4f3f-b895-a7811979d002"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 2,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "10%",
                            "maxUnavailable": 0
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "kubedns",
                                "prometheus.io/port": "10054",
                                "prometheus.io/scrape": "true",
                                "scheduler.alpha.kubernetes.io/critical-pod": "",
                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-dns"
                            }
                        },
                        "spec": {
                            "affinity": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "podAffinityTerm": {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "k8s-app",
                                                            "operator": "In",
                                                            "values": [
                                                                "kube-dns"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "topologyKey": "kubernetes.io/hostname"
                                            },
                                            "weight": 100
                                        }
                                    ]
                                }
                            },
                            "containers": [
                                {
                                    "name": "kubedns",
                                    "image": "gke.gcr.io/k8s-dns-kube-dns:1.21.0-gke.0",
                                    "args": [
                                        "--domain=cluster.local.",
                                        "--dns-port=10053",
                                        "--config-dir=/kube-dns-config",
                                        "--v=2"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-local",
                                            "containerPort": 10053,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp-local",
                                            "containerPort": 10053,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "metrics",
                                            "containerPort": 10055,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "PROMETHEUS_PORT",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "210Mi"
                                        },
                                        "requests": {
                                            "cpu": "100m",
                                            "memory": "70Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/kube-dns-config"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/kubedns",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/readiness",
                                            "port": 8081,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 3,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                },
                                {
                                    "name": "dnsmasq",
                                    "image": "gke.gcr.io/k8s-dns-dnsmasq-nanny:1.21.0-gke.0",
                                    "args": [
                                        "-v=2",
                                        "-logtostderr",
                                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                        "-restartDnsmasq=true",
                                        "--",
                                        "-k",
                                        "--cache-size=1000",
                                        "--no-negcache",
                                        "--dns-forward-max=1500",
                                        "--log-facility=-",
                                        "--server=/cluster.local/127.0.0.1#10053",
                                        "--server=/in-addr.arpa/127.0.0.1#10053",
                                        "--server=/ip6.arpa/127.0.0.1#10053"
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns",
                                            "containerPort": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "dns-tcp",
                                            "containerPort": 53,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "150m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "kube-dns-config",
                                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthcheck/dnsmasq",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "NET_BIND_SERVICE",
                                                "SETGID"
                                            ],
                                            "drop": [
                                                "all"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "sidecar",
                                    "image": "gke.gcr.io/k8s-dns-sidecar:1.21.0-gke.0",
                                    "args": [
                                        "--v=2",
                                        "--logtostderr",
                                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 10054,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/metrics",
                                            "port": 10054,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 60,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 5
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "runAsUser": 1001,
                                        "runAsGroup": 1001,
                                        "readOnlyRootFilesystem": true,
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "Default",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 65534,
                                "supplementalGroups": [
                                    65534
                                ]
                            },
                            "serviceAccount": "kube-dns",
                            "serviceAccountName": "kube-dns",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-dns",
                                        "optional": true
                                    },
                                    "name": "kube-dns-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-web-socket-6bb4d88cd6",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "17",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-28T12:50:14Z",
                    "generation": 1,
                    "labels": {
                        "app": "armo-web-socket",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-web-socket",
                        "helm.sh/chart": "armo-cluster-components-1.6.7",
                        "helm.sh/revision": "48",
                        "pod-template-hash": "6bb4d88cd6",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-web-socket-6bb4d88cd6",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-web-socket",
                            "uid": "7663e16e-87f4-4802-aafb-238949517c59"
                        }
                    ],
                    "resourceVersion": "112927255",
                    "uid": "eb0fbc3b-004f-4f7a-a971-c0ac54d65c16"
                },
                "spec": {
                    "replicas": 1,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-web-socket",
                            "pod-template-hash": "6bb4d88cd6",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-web-socket",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-web-socket",
                                "helm.sh/chart": "armo-cluster-components-1.6.7",
                                "helm.sh/revision": "48",
                                "pod-template-hash": "6bb4d88cd6",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-web-socket",
                                    "image": "quay.io/armosec/k8s-ca-websocket-ubi:448",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "trigger-port",
                                            "containerPort": 4002,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "readiness-port",
                                            "containerPort": 8000,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_NAMESPACE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_VULN_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_POSTURE_SCAN_SCHEDULE",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_SYSTEM_MODE",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "50m",
                                            "memory": "100Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "httpGet": {
                                            "path": "/v1/readiness",
                                            "port": "readiness-port",
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 10,
                                        "timeoutSeconds": 1,
                                        "periodSeconds": 5,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/konnectivity-agent-67b9847bc8",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "components.gke.io/layer": "addon",
                        "deployment.kubernetes.io/desired-replicas": "5",
                        "deployment.kubernetes.io/max-replicas": "7",
                        "deployment.kubernetes.io/revision": "1"
                    },
                    "creationTimestamp": "2021-11-02T02:33:48Z",
                    "generation": 7,
                    "labels": {
                        "k8s-app": "konnectivity-agent",
                        "pod-template-hash": "67b9847bc8"
                    },
                    "name": "konnectivity-agent-67b9847bc8",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "konnectivity-agent",
                            "uid": "2831cf26-2dfe-4491-acaa-266f4dd8f26f"
                        }
                    ],
                    "resourceVersion": "55353757",
                    "uid": "7677d332-4903-4361-bafb-2501094e4cff"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "konnectivity-agent",
                            "pod-template-hash": "67b9847bc8"
                        }
                    },
                    "template": {
                        "metadata": {
                            "annotations": {
                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                                "components.gke.io/component-version": "1.2.10"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "konnectivity-agent",
                                "pod-template-hash": "67b9847bc8"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "konnectivity-agent",
                                    "image": "gke.gcr.io/proxy-agent:v0.0.22-gke.0",
                                    "command": [
                                        "/proxy-agent"
                                    ],
                                    "args": [
                                        "--logtostderr=true",
                                        "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                        "--proxy-server-host=35.202.27.228",
                                        "--proxy-server-port=8132",
                                        "--health-server-port=8093",
                                        "--admin-server-port=8094",
                                        "--sync-interval=5s",
                                        "--probe-interval=5s",
                                        "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                        "--v=3"
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "containerPort": 8093,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "memory": "30Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "konnectivity-agent-token",
                                            "mountPath": "/var/run/secrets/tokens"
                                        }
                                    ],
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8093,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 15,
                                        "timeoutSeconds": 15,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent",
                                    "securityContext": {
                                        "capabilities": {
                                            "drop": [
                                                "all"
                                            ]
                                        },
                                        "allowPrivilegeEscalation": false
                                    }
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "beta.kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "fsGroup": 1000,
                                "runAsGroup": 1000,
                                "runAsUser": 1000
                            },
                            "serviceAccount": "konnectivity-agent",
                            "serviceAccountName": "konnectivity-agent",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "key": "sandbox.gke.io/runtime",
                                    "operator": "Equal",
                                    "value": "gvisor"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "topologySpreadConstraints": [
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "topology.kubernetes.io/zone",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                },
                                {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "k8s-app": "konnectivity-agent"
                                        }
                                    },
                                    "maxSkew": 1,
                                    "topologyKey": "kubernetes.io/hostname",
                                    "whenUnsatisfiable": "ScheduleAnyway"
                                }
                            ],
                            "volumes": [
                                {
                                    "name": "konnectivity-agent-token",
                                    "projected": {
                                        "defaultMode": 420,
                                        "sources": [
                                            {
                                                "serviceAccountToken": {
                                                    "audience": "system:konnectivity-server",
                                                    "expirationSeconds": 3600,
                                                    "path": "konnectivity-agent-token"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/ReplicaSet/l7-default-backend-56cb9644f6",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "2"
                    },
                    "creationTimestamp": "2021-07-29T02:29:45Z",
                    "generation": 2,
                    "labels": {
                        "k8s-app": "glbc",
                        "name": "glbc",
                        "pod-template-hash": "56cb9644f6"
                    },
                    "name": "l7-default-backend-56cb9644f6",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "l7-default-backend",
                            "uid": "c5b48983-6fa6-459e-a4d3-4d60ba4daf77"
                        }
                    ],
                    "resourceVersion": "55353708",
                    "uid": "6de3695e-7c61-4021-818e-d12532a7c88d"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "glbc",
                            "pod-template-hash": "56cb9644f6"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "glbc",
                                "name": "glbc",
                                "pod-template-hash": "56cb9644f6"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "default-http-backend",
                                    "image": "k8s.gcr.io/networking/ingress-gce-404-server-with-metrics-amd64:v1.10.11",
                                    "ports": [
                                        {
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        },
                                        "requests": {
                                            "cpu": "10m",
                                            "memory": "20Mi"
                                        }
                                    },
                                    "livenessProbe": {
                                        "httpGet": {
                                            "path": "/healthz",
                                            "port": 8080,
                                            "scheme": "HTTP"
                                        },
                                        "initialDelaySeconds": 30,
                                        "timeoutSeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "failureThreshold": 3
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                }
                            },
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "/v1/kube-system/Pod/pdcsi-node-n2www",
            "object": {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "pdcsi",
                        "components.gke.io/component-version": "0.10.5"
                    },
                    "creationTimestamp": "2022-01-30T11:07:41Z",
                    "generateName": "pdcsi-node-",
                    "labels": {
                        "controller-revision-hash": "6b79c689bf",
                        "k8s-app": "gcp-compute-persistent-disk-csi-driver",
                        "pod-template-generation": "3"
                    },
                    "name": "pdcsi-node-n2www",
                    "namespace": "kube-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "DaemonSet",
                            "name": "pdcsi-node",
                            "uid": "6cc5cc82-c07b-462c-8cff-38f380a72ed2"
                        }
                    ],
                    "resourceVersion": "96317570",
                    "uid": "5b0bad0f-d49b-4292-8f4e-9c14e5275577"
                },
                "spec": {
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchFields": [
                                            {
                                                "key": "metadata.name",
                                                "operator": "In",
                                                "values": [
                                                    "gke-bez-longrun-3-default-pool-d450b024-vqj9"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "containers": [
                        {
                            "name": "csi-driver-registrar",
                            "image": "gke.gcr.io/csi-node-driver-registrar:v2.1.0-gke.0",
                            "args": [
                                "--v=5",
                                "--csi-address=/csi/csi.sock",
                                "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
                            ],
                            "env": [
                                {
                                    "name": "KUBE_NODE_NAME",
                                    "value": "XXXXXX",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "spec.nodeName"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "registration-dir",
                                    "mountPath": "/registration"
                                },
                                {
                                    "name": "kube-api-access-ckjv8",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent"
                        },
                        {
                            "name": "gce-pd-driver",
                            "image": "gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.4-gke.0",
                            "args": [
                                "--v=5",
                                "--endpoint=unix:/csi/csi.sock",
                                "--run-controller-service=false"
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "50Mi"
                                },
                                "requests": {
                                    "cpu": "5m",
                                    "memory": "10Mi"
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "kubelet-dir",
                                    "mountPath": "/var/lib/kubelet",
                                    "mountPropagation": "Bidirectional"
                                },
                                {
                                    "name": "plugin-dir",
                                    "mountPath": "/csi"
                                },
                                {
                                    "name": "device-dir",
                                    "mountPath": "/dev"
                                },
                                {
                                    "name": "udev-rules-etc",
                                    "mountPath": "/etc/udev"
                                },
                                {
                                    "name": "udev-rules-lib",
                                    "mountPath": "/lib/udev"
                                },
                                {
                                    "name": "udev-socket",
                                    "mountPath": "/run/udev"
                                },
                                {
                                    "name": "sys",
                                    "mountPath": "/sys"
                                },
                                {
                                    "name": "kube-api-access-ckjv8",
                                    "readOnly": true,
                                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "IfNotPresent",
                            "securityContext": {
                                "privileged": true
                            }
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "enableServiceLinks": true,
                    "hostNetwork": true,
                    "nodeName": "gke-bez-longrun-3-default-pool-d450b024-vqj9",
                    "nodeSelector": {
                        "kubernetes.io/os": "linux"
                    },
                    "preemptionPolicy": "PreemptLowerPriority",
                    "priority": 2000001000,
                    "priorityClassName": "system-node-critical",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "pdcsi-node-sa",
                    "serviceAccountName": "pdcsi-node-sa",
                    "terminationGracePeriodSeconds": 30,
                    "tolerations": [
                        {
                            "effect": "NoSchedule",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "operator": "Exists"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        },
                        {
                            "key": "components.gke.io/gke-managed-components",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/not-ready",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoExecute",
                            "key": "node.kubernetes.io/unreachable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/disk-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/memory-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/pid-pressure",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/unschedulable",
                            "operator": "Exists"
                        },
                        {
                            "effect": "NoSchedule",
                            "key": "node.kubernetes.io/network-unavailable",
                            "operator": "Exists"
                        }
                    ],
                    "volumes": [
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins_registry/",
                                "type": "Directory"
                            },
                            "name": "registration-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet",
                                "type": "Directory"
                            },
                            "name": "kubelet-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/var/lib/kubelet/plugins/pd.csi.storage.gke.io/",
                                "type": "DirectoryOrCreate"
                            },
                            "name": "plugin-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/dev",
                                "type": "Directory"
                            },
                            "name": "device-dir"
                        },
                        {
                            "hostPath": {
                                "path": "/etc/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-etc"
                        },
                        {
                            "hostPath": {
                                "path": "/lib/udev",
                                "type": "Directory"
                            },
                            "name": "udev-rules-lib"
                        },
                        {
                            "hostPath": {
                                "path": "/run/udev",
                                "type": "Directory"
                            },
                            "name": "udev-socket"
                        },
                        {
                            "hostPath": {
                                "path": "/sys",
                                "type": "Directory"
                            },
                            "name": "sys"
                        },
                        {
                            "name": "kube-api-access-ckjv8",
                            "projected": {
                                "defaultMode": 420,
                                "sources": [
                                    {
                                        "serviceAccountToken": {
                                            "expirationSeconds": 3607,
                                            "path": "token"
                                        }
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "ca.crt",
                                                    "path": "ca.crt"
                                                }
                                            ],
                                            "name": "kube-root-ca.crt"
                                        }
                                    },
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    },
                                                    "path": "namespace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pvc-protection-controller",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                    "annotations": {
                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                    },
                    "creationTimestamp": "2021-07-07T05:44:35Z",
                    "labels": {
                        "kubernetes.io/bootstrapping": "rbac-defaults"
                    },
                    "name": "system:controller:pvc-protection-controller",
                    "resourceVersion": "97",
                    "uid": "ba021b69-4810-4731-9458-8bde16a69198"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "persistentvolumeclaims"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "update",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "",
                            "events.k8s.io"
                        ],
                        "resources": [
                            "events"
                        ],
                        "verbs": [
                            "create",
                            "patch",
                            "update"
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/default/Service/jaeger-collector",
            "object": {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "cloud.google.com/neg": "{\"ingress\":true}"
                    },
                    "creationTimestamp": "2021-10-13T12:51:38Z",
                    "labels": {
                        "app": "jaeger",
                        "app.kubernetes.io/component": "collector",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "name": "jaeger-collector",
                    "namespace": "default",
                    "resourceVersion": "41559562",
                    "uid": "77ef70eb-f5e1-44d6-bdc3-89352c7dd8c0"
                },
                "spec": {
                    "clusterIP": "10.40.11.208",
                    "clusterIPs": [
                        "10.40.11.208"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ],
                    "ipFamilyPolicy": "SingleStack",
                    "ports": [
                        {
                            "name": "jaeger-collector-tchannel",
                            "port": 14267,
                            "protocol": "TCP",
                            "targetPort": 14267
                        },
                        {
                            "name": "jaeger-collector-http",
                            "port": 14268,
                            "protocol": "TCP",
                            "targetPort": 14268
                        },
                        {
                            "name": "jaeger-collector-zipkin",
                            "port": 9411,
                            "protocol": "TCP",
                            "targetPort": 9411
                        }
                    ],
                    "selector": {
                        "app.kubernetes.io/component": "all-in-one",
                        "app.kubernetes.io/name": "jaeger"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/snapshot-controller-role",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "annotations": {
                        "components.gke.io/component-name": "snapshot-controller",
                        "components.gke.io/component-version": "0.5.6",
                        "components.gke.io/layer": "addon"
                    },
                    "creationTimestamp": "2021-07-07T05:44:58Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile"
                    },
                    "name": "snapshot-controller-role",
                    "resourceVersion": "94208537",
                    "uid": "20814a3c-5af3-44b2-9fbb-ad6fb23f31d3"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "snapshot-controller-runner"
                },
                "subjects": [
                    {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "User",
                        "name": "system:snapshot-controller"
                    }
                ]
            }
        },
        {
            "resourceID": "/v1/kube-system/ServiceAccount/resourcequota-controller",
            "object": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:49Z",
                    "name": "resourcequota-controller",
                    "namespace": "kube-system",
                    "resourceVersion": "263",
                    "uid": "f8e43422-6937-47cf-bd54-1a2f12460b7d"
                },
                "secrets": [
                    {
                        "name": "resourcequota-controller-token-449zk"
                    }
                ]
            }
        },
        {
            "resourceID": "apps/v1/armo-system/ReplicaSet/armo-vuln-scan-5bd4d4755f",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/desired-replicas": "1",
                        "deployment.kubernetes.io/max-replicas": "2",
                        "deployment.kubernetes.io/revision": "11",
                        "meta.helm.sh/release-name": "armo",
                        "meta.helm.sh/release-namespace": "armo-system"
                    },
                    "creationTimestamp": "2022-02-06T09:36:41Z",
                    "generation": 2,
                    "labels": {
                        "app": "armo-vuln-scan",
                        "app.kubernetes.io/instance": "armo",
                        "app.kubernetes.io/name": "armo-vuln-scan",
                        "pod-template-hash": "5bd4d4755f",
                        "tier": "armo-system-control-plane"
                    },
                    "name": "armo-vuln-scan-5bd4d4755f",
                    "namespace": "armo-system",
                    "ownerReferences": [
                        {
                            "apiVersion": "apps/v1",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "Deployment",
                            "name": "armo-vuln-scan",
                            "uid": "e24f8ae5-ab02-4fe7-a6ae-422ba1044fcc"
                        }
                    ],
                    "resourceVersion": "102358018",
                    "uid": "825a7e0d-34a6-4f78-9a0d-fcf2fa92f377"
                },
                "spec": {
                    "replicas": 0,
                    "selector": {
                        "matchLabels": {
                            "app.kubernetes.io/instance": "armo",
                            "app.kubernetes.io/name": "armo-vuln-scan",
                            "pod-template-hash": "5bd4d4755f",
                            "tier": "armo-system-control-plane"
                        }
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "armo-vuln-scan",
                                "app.kubernetes.io/instance": "armo",
                                "app.kubernetes.io/name": "armo-vuln-scan",
                                "pod-template-hash": "5bd4d4755f",
                                "tier": "armo-system-control-plane"
                            }
                        },
                        "spec": {
                            "automountServiceAccountToken": true,
                            "containers": [
                                {
                                    "name": "armo-vuln-scan",
                                    "image": "quay.io/armosec/k8s-ca-vuln-scan-ubi:111",
                                    "args": [
                                        "-alsologtostderr",
                                        "-v=4",
                                        "2\u003e\u00261"
                                    ],
                                    "ports": [
                                        {
                                            "name": "vuln-scan-port",
                                            "containerPort": 8080,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "env": [
                                        {
                                            "name": "CA_CLUSTER_NAME",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_CUSTOMER_GUID",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "OCIMAGE_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "EVENT_RECEIVER_URL",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_EVENT_RECEIVER_HTTP",
                                            "value": "XXXXXX"
                                        },
                                        {
                                            "name": "CA_MAX_VULN_SCAN_ROUTINS",
                                            "value": "XXXXXX"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "1500m",
                                            "memory": "1000Mi"
                                        },
                                        "requests": {
                                            "cpu": "300m",
                                            "memory": "200Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "armo-be-config",
                                            "readOnly": true,
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "Always"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "armo-scanner-service-account",
                            "serviceAccountName": "armo-scanner-service-account",
                            "terminationGracePeriodSeconds": 30,
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "items": [
                                            {
                                                "key": "clusterData",
                                                "path": "clusterData.json"
                                            }
                                        ],
                                        "name": "armo-be-config"
                                    },
                                    "name": "armo-be-config"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io//User/system:storageversionmigrator/rbac.authorization.k8s.io/v1//ClusterRole/storage-version-migration-crd-creator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-version-migration-crd-creator",
            "object": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "system:storageversionmigrator",
                "relatedObjects": [
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-crd-creator",
                            "resourceVersion": "562",
                            "uid": "d8a685fd-a187-44ac-b148-a5a9563608fc"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "storage-version-migration-crd-creator"
                        },
                        "subjects": [
                            {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "User",
                                "name": "system:storageversionmigrator"
                            }
                        ]
                    },
                    {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "components.gke.io/component-name": "storageversionmigrator-rbac",
                                "components.gke.io/component-version": "0.0.3"
                            },
                            "creationTimestamp": "2021-07-07T05:45:01Z",
                            "labels": {
                                "addonmanager.kubernetes.io/mode": "Reconcile"
                            },
                            "name": "storage-version-migration-crd-creator",
                            "resourceVersion": "557",
                            "uid": "6d4704b2-3c39-4a45-b889-a9217bcfe3ca"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubelet-cluster-admin",
            "object": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                    "creationTimestamp": "2021-07-07T05:44:53Z",
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "EnsureExists"
                    },
                    "name": "kubelet-cluster-admin",
                    "resourceVersion": "306",
                    "uid": "372ed7de-fabf-476e-adea-0e0d3c35aa34"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "ClusterRole",
                    "name": "system:node"
                }
            }
        },
        {
            "resourceID": "apps/v1/kube-system/Deployment/metrics-server-v0.4.4",
            "object": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                    "annotations": {
                        "deployment.kubernetes.io/revision": "5"
                    },
                    "creationTimestamp": "2021-11-16T07:46:32Z",
                    "generation": 5,
                    "labels": {
                        "addonmanager.kubernetes.io/mode": "Reconcile",
                        "k8s-app": "metrics-server",
                        "version": "v0.4.4"
                    },
                    "name": "metrics-server-v0.4.4",
                    "namespace": "kube-system",
                    "resourceVersion": "100755331",
                    "uid": "a709e59f-f8cf-45d2-8346-1ac9ec2d6696"
                },
                "spec": {
                    "progressDeadlineSeconds": 600,
                    "replicas": 1,
                    "revisionHistoryLimit": 10,
                    "selector": {
                        "matchLabels": {
                            "k8s-app": "metrics-server",
                            "version": "v0.4.4"
                        }
                    },
                    "strategy": {
                        "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                        },
                        "type": "RollingUpdate"
                    },
                    "template": {
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "metrics-server",
                                "version": "v0.4.4"
                            },
                            "name": "metrics-server"
                        },
                        "spec": {
                            "containers": [
                                {
                                    "name": "metrics-server",
                                    "image": "k8s.gcr.io/metrics-server/metrics-server:v0.4.4",
                                    "command": [
                                        "/metrics-server",
                                        "--metric-resolution=30s",
                                        "--kubelet-port=10255",
                                        "--deprecated-kubelet-completely-insecure=true",
                                        "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                        "--cert-dir=/tmp",
                                        "--secure-port=443"
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "containerPort": 443,
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "44m",
                                            "memory": "63Mi"
                                        },
                                        "requests": {
                                            "cpu": "44m",
                                            "memory": "63Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "tmp-dir",
                                            "mountPath": "/tmp"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                },
                                {
                                    "name": "metrics-server-nanny",
                                    "image": "gke.gcr.io/addon-resizer:1.8.13-gke.0",
                                    "command": [
                                        "/pod_nanny",
                                        "--config-dir=/etc/config",
                                        "--cpu=40m",
                                        "--extra-cpu=0.5m",
                                        "--memory=35Mi",
                                        "--extra-memory=4Mi",
                                        "--threshold=5",
                                        "--deployment=metrics-server-v0.4.4",
                                        "--container=metrics-server",
                                        "--poll-period=30000",
                                        "--estimator=exponential",
                                        "--scale-down-delay=24h",
                                        "--minClusterSize=5",
                                        "--use-metrics=true"
                                    ],
                                    "env": [
                                        {
                                            "name": "MY_POD_NAME",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "MY_POD_NAMESPACE",
                                            "value": "XXXXXX",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        }
                                    ],
                                    "resources": {
                                        "limits": {
                                            "cpu": "100m",
                                            "memory": "300Mi"
                                        },
                                        "requests": {
                                            "cpu": "5m",
                                            "memory": "50Mi"
                                        }
                                    },
                                    "volumeMounts": [
                                        {
                                            "name": "metrics-server-config-volume",
                                            "mountPath": "/etc/config"
                                        }
                                    ],
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "imagePullPolicy": "IfNotPresent"
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-cluster-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {
                                "seccompProfile": {
                                    "type": "RuntimeDefault"
                                }
                            },
                            "serviceAccount": "metrics-server",
                            "serviceAccountName": "metrics-server",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "key": "components.gke.io/gke-managed-components",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "metrics-server-config"
                                    },
                                    "name": "metrics-server-config-volume"
                                },
                                {
                                    "emptyDir": {},
                                    "name": "tmp-dir"
                                }
                            ]
                        }
                    }
                }
            }
        }
    ]
}